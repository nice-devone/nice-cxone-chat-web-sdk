import * as yup from 'yup';
import { PushUpdateEventFields } from '../pushUpdate/PushUpdateEventFields';
import { PushUpdateEventObject } from '../pushUpdate/PushUpdateEventObject';
import { PushUpdateEventType } from '../pushUpdate/PushUpdateEventType';
import { Destination } from './Destination/Destination';
import { ProactiveAction } from './proactiveAction/ProactiveAction';
declare const fireProactiveActionEventDataSchema: yup.ObjectSchema<{
    destination: object & {
        id: any;
    };
    proactiveAction: object & {
        action: any;
        conditions: any;
    };
}>;
declare type FireProactiveData = yup.InferType<typeof fireProactiveActionEventDataSchema> & {
    destination: Destination;
    proactiveAction: ProactiveAction;
};
export declare const fireProactiveActionEventSchema: yup.ObjectSchema<{
    data: object & {
        destination: any;
        proactiveAction: any;
    };
} & {
    eventId: string;
    eventObject: string;
    eventType: string;
    context: (object & {
        initiator: any;
    }) | null;
    createdAt: Date;
}>;
export declare type FireProactiveActionEvent = yup.InferType<typeof fireProactiveActionEventSchema> & PushUpdateEventFields & {
    eventObject: PushUpdateEventObject.CHAT_WINDOW;
    eventType: PushUpdateEventType.FIRE_PROACTIVE;
    data: FireProactiveData;
};
export {};
