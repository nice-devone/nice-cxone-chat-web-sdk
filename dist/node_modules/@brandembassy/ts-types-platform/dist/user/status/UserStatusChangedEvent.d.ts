import { Brand } from '../../brand/Brand';
import { PushUpdateEventFields } from '../../pushUpdate/PushUpdateEventFields';
import * as yup from 'yup';
import { User } from '../User';
import { UserStatus } from './UserStatus';
import { PushUpdateEventObject } from '../../pushUpdate/PushUpdateEventObject';
import { PushUpdateEventType } from '../../pushUpdate/PushUpdateEventType';
declare const userStatusChangedDataSchema: yup.ObjectSchema<{
    brand: object & {
        id: any;
        tenantId: any;
        businessUnitId: any;
    };
    user: object & {
        id: any;
        incontactId: any;
        emailAddress: any;
        loginUsername: any;
        firstName: any;
        surname: any;
        nickname: any;
        isBotUser: any;
        isSurveyUser: any;
        imageUrl: any;
        publicImageUrl: any;
    };
    userStatus: object & {
        id: any;
        name: any;
        type: any;
        timeElapsedInSeconds: any;
    };
}>;
declare type UserStatusChangedData = yup.InferType<typeof userStatusChangedDataSchema> & {
    brand: Brand;
    user: User;
    userStatus: UserStatus;
};
export declare const userStatusChangedEventSchema: yup.ObjectSchema<{
    data: object & {
        brand: any;
        user: any;
        userStatus: any;
    };
} & {
    eventId: string;
    eventObject: string;
    eventType: string;
    context: (object & {
        initiator: any;
    }) | null;
    createdAt: Date;
}>;
export declare type UserStatusChangedEvent = yup.InferType<typeof userStatusChangedEventSchema> & PushUpdateEventFields & {
    eventObject: PushUpdateEventObject.USER_STATUS;
    eventType: PushUpdateEventType.USER_STATUS_CHANGED;
    data: UserStatusChangedData;
};
export {};
