import { ChannelId, ChannelIdOnExternalPlatform } from './ChannelId';
import * as yup from 'yup';
export declare const channelSchema: yup.ObjectSchema<{
    id: string;
    name: string;
    integrationBoxIdentifier: string;
    idOnExternalPlatform: string;
    realExternalPlatformId: string;
    externalPlatformAvatar: string;
    canAgentInviteCustomersToContact: boolean;
    canReplyToAnyMessage: boolean;
    canSaveResponse: boolean;
    contentFormat: string;
    externalPlatformIcon: string;
    hasAbilityToDelete: boolean;
    hasAbilityToForwardMessage: boolean;
    hasAbilityToHide: boolean;
    hasAbilityToChangeFrom: boolean;
    hasAbilityToChangeRecipient: boolean;
    hasAbilityToLike: boolean;
    hasAbilityToQuoteMessage: boolean;
    hasAbilityToSendFiles: boolean;
    hasAbilityToShare: boolean;
    hasAbilityToTag: boolean;
    hasCcAndBcc: boolean;
    hasCustomerOnThirdParty: boolean;
    hasEditableTitle: boolean;
    hasMultipleRecipient: boolean;
    hasMultipleThreadsPerEndUser: boolean;
    hasOutboundFlow: boolean;
    hasOutboundTemplates: boolean;
    hasPostAsPlaceholder: boolean;
    hasPublishing: boolean;
    hasReply: boolean;
    hasTreeStructure: boolean;
    hasVisibleRecipients: boolean;
    hasVisibleTitle: boolean;
    channelIntegrationId: string;
    isAutomaticSignatureAttached: boolean;
    isCaseBasedStorage: boolean;
    isHidden: boolean;
    isDeleted: boolean;
    isLiveChat: boolean;
    isPostWritable: boolean;
    isPrivate: boolean;
    mediaType: number | undefined;
    nicknameOnExternalPlatform: string;
    ownerUserId: number;
    replyPrefixMentionTemplate: string;
    studioScript: string | null;
    translationGroup: string;
    wysiwygEnabled: boolean;
}>;
export declare type Channel = yup.InferType<typeof channelSchema> & {
    id: ChannelId;
    idOnExternalPlatform: ChannelIdOnExternalPlatform;
};
