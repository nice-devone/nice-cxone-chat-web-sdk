import { MessageSeenStatus } from './MessageSeenStatus';
import { MessageDeliveredStatus } from './MessageDeliveredStatus';
import { LiveChatMessageAttachment } from './LiveChatMessageAttachment';
import { MessagePayload } from './MessagePayload';
import { SessionId } from '../session/SessionId';
import { CustomField } from '../../customField/CustomField';
import { Agent } from '../../user/Agent';
import { Author } from '../../user/Author';
import { CaseId } from '@brandembassy/ts-types-platform/dist/post/case/CaseId';
import { CustomerIdentityIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/endUser/EndUserIdentityId';
import { UserId } from '@brandembassy/ts-types-platform/dist/user/UserId';
import { MessageIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/message/MessageId';
import { MessageType } from '@brandembassy/ts-types-platform/dist/message/MessageType';
export declare type LiveChatMessage = {
    attachments: Array<LiveChatMessageAttachment>;
    author: Author | Agent | null;
    authorId: CustomerIdentityIdOnExternalPlatform | UserId;
    caseCustomFields?: Array<CustomField>;
    caseNumber?: CaseId | null;
    createdAt: string;
    endUserCustomFields?: Array<CustomField>;
    id: MessageIdOnExternalPlatform;
    isOwn?: boolean;
    message: string;
    messageType: MessageType;
    name?: string;
    payload: MessagePayload;
    sessionId: SessionId;
    tagIds?: Array<any>;
    userId?: UserId;
    seen?: Array<MessageSeenStatus>;
    delivered?: Array<MessageDeliveredStatus>;
    fallbackText?: string;
};
export declare type PartialLivechatMessage = Partial<LiveChatMessage>;
