import { SessionId } from '../post/session/SessionId';
import { SessionStatus } from '../post/session/SessionStatus';
import { Agent } from '../user/Agent';
import { LiveChatMessage } from '../post/message/LiveChatMessage';
import { PostMessagesFilter } from '../post/PostMessagesFilter';
import { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';
import { CustomerIdentityIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/endUser/EndUserIdentityId';
import { CustomField } from '../customField/CustomField';
/**
 * @deprecated
 */
export declare type RecoverSessionData = {
    sessionId: SessionId;
    filters: PostMessagesFilter;
};
/**
 * @deprecated Use LivechatRecovered or ThreadRecovered
 */
export declare type ChatSessionRecoveredPayload = {
    id: SessionId;
    customFields: Array<CustomField>;
    brandId: BrandId;
    status: SessionStatus;
    customer: {
        id: CustomerIdentityIdOnExternalPlatform;
        name: string | null;
    };
    agent: Agent;
    uri: string;
    positionInQueue: number;
    isAnyAgentOnlineForQueue: boolean;
    satisfactionSurveyRequest: boolean;
    customerFields?: Array<any>;
    tagIds?: Array<any>;
    caseId?: string;
    conversations: {
        scrollToken: string;
        items: Array<LiveChatMessage>;
        _total?: number;
    };
};
