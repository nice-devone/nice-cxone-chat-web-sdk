import { ChannelId } from '@brandembassy/ts-types-platform/dist/channel/ChannelId';
import { CustomFieldDefinition } from '../customField/CustomFieldDefinition';
import { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';
import { ChannelInfo } from '../channel/ChannelInfo';
import { ChannelInfoSettings } from '../channel/ChannelInfoSettings';
export declare type SatisfactionSurveySettings = {
    metric: 'nps' | 'csat';
    logo: string;
    isTextMessageAvailable: boolean;
    questions: Array<any>;
    scale: Array<{
        rating: number;
        label: string;
    }>;
};
export declare type BrandInfoPopup = {
    name: string;
    url: string;
    urlTimeout: number;
    appearance: 'left' | 'center';
    headlineText: string;
    headlineColor: string | null;
    secondLineText: string;
    secondLineColor: string | null;
    backgroundImage: string;
};
export declare type BrandInfoWidget = {
    appearance: 'bar' | 'bubble';
    position: 'left' | 'right';
};
export declare type BrandInfoColors = {
    buttonColor: string;
    headerBgColor: string;
    headerFontColor: string;
    themeColor: string;
    textColor: string;
    widgetBgColor: string;
    widgetFontColor: string;
};
export declare type BrandInfoPreContactForm = {
    id: string;
    name: string;
    channels: Array<ChannelId>;
    customFields: Array<PreContactFormCustomField>;
};
export declare type PreContactFormCustomField = {
    isRequired: boolean;
    definition: Array<CustomFieldDefinition>;
};
/**
 * @deprecated will be replaced completely by ChannelInfo
 */
export declare type BrandInfoPayload = {
    name: string;
    isLiveChat: boolean;
    channelId: ChannelId;
    settings: ChannelInfoSettings;
    translations: {
        [key: string]: string;
    };
    colors: BrandInfoColors;
    widget: BrandInfoWidget;
    version: string;
    customFields: Array<CustomFieldDefinition>;
    caseCustomFields: Array<CustomFieldDefinition>;
    endUserCustomFields: Array<CustomFieldDefinition>;
    satisfactionSurveySettings: SatisfactionSurveySettings;
    popups: Array<BrandInfoPopup>;
    brandId: BrandId;
    channelIdOnExternalPlatform: string;
    preContactForm: BrandInfoPreContactForm | null;
};
/**
 * @deprecated will be replaced completely by ChannelInfo
 */
export declare type ChannelOrBrandInfoPayload = ChannelInfo | BrandInfoPayload;
