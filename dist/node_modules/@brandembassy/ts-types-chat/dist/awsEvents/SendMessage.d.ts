import { AwsInputEvent, AwsInputEventData } from './AwsInputEvent';
import { Attachment } from '../message/Attachment';
import { AwsInputEventType } from './AwsEventType';
import { BrowserFingerprint } from '../user/BrowserFingerprint';
import { CustomField } from '../customField/CustomField';
import { MessageId } from '@brandembassy/ts-types-platform/dist/message/MessageId';
import { MessagePayload } from '../post/message/MessagePayload';
import { MessageType } from '@brandembassy/ts-types-platform/dist/message/MessageType';
export interface SendMessageEventData extends AwsInputEventData {
    accessToken?: {
        token: string;
    };
    thread: {
        idOnExternalPlatform: string;
        threadName?: string;
    };
    consumer: {
        customFields: CustomField[];
    };
    consumerContact: {
        customFields: CustomField[];
    };
    idOnExternalPlatform: MessageId;
    messageContent: {
        type: MessageType;
        payload: MessagePayload;
    };
    attachments: Attachment[];
    browserFingerprint: BrowserFingerprint;
}
export declare type SendMessageEvent = AwsInputEvent<AwsInputEventType.SEND_MESSAGE, SendMessageEventData>;
