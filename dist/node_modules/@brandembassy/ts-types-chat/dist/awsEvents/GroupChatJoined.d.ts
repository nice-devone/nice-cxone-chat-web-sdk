import { AwsResponseEventType } from './AwsEventType';
import { AwsResponseEvent, AwsResponseEventPostbackData } from './AwsResponseEvent';
import { ThreadId } from '@brandembassy/ts-types-platform/dist/thread/ThreadId';
import { ChannelId } from '@brandembassy/ts-types-platform/dist/channel/ChannelId';
import { CaseId } from '@brandembassy/ts-types-platform/dist/post/case/CaseId';
import { UserId } from '@brandembassy/ts-types-platform/dist/user/UserId';
import { Sentiment } from '@brandembassy/ts-types-platform/dist/message/Sentiment';
import { CaseStatus } from '@brandembassy/ts-types-platform/dist/post/case/CaseStatus';
export interface Contact {
    status: CaseStatus;
    createdAt: string;
    statusUpdatedAt: string;
    isOwn: boolean;
    sentiment: Sentiment;
    ownerAssignee: UserId;
    inboxAssignee: UserId;
    id: CaseId;
    postId: ThreadId;
    agentName: string;
    channelId: ChannelId;
    customer: {
        customerIdent: string;
        name: string;
        surname: string;
    };
}
export interface GroupChatJoinedPostbackData extends AwsResponseEventPostbackData {
    contact: Contact;
    thread: {
        id: ThreadId;
        idOnExternalPlatform: string;
        threadName: string;
    };
}
export declare type GroupChatJoinedEvent = AwsResponseEvent<AwsResponseEventType.GROUP_CHAT_JOINED, GroupChatJoinedPostbackData>;
