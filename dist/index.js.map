{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@brandembassy/chat-web-sdk/webpack/universalModuleDefinition","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/be-javascript-utils/dist/dateTime/isoString.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/be-javascript-utils/dist/dateTime/misc.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/be-javascript-utils/dist/dateTime/timezone.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/be-javascript-utils/dist/query/queryParameters.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/push-updates-sdk/dist/eventTargetPolyfill/EventTargetPolyfill.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/push-updates-sdk/dist/index.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/push-updates-sdk/dist/pushUpdate/pushUpdateWebSocket.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/push-updates-sdk/dist/websocket/HeartBeatState.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/push-updates-sdk/dist/websocket/WebSocketClient.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/push-updates-sdk/dist/websocket/WebSocketClientEvent.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/reconnecting-websocket/dist/reconnecting-websocket-mjs.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/ts-types-chat/dist/awsEvents/AwsChatWindowEvent.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/ts-types-chat/dist/user/BrowserFingerprint.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/ts-types-platform/dist/http/headers.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/ts-types-platform/dist/message/MessageDirection.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/ts-types-platform/dist/message/MessageType.js","webpack://@brandembassy/chat-web-sdk/./node_modules/@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateEventType.js","webpack://@brandembassy/chat-web-sdk/external umd \"ua-parser-js\"","webpack://@brandembassy/chat-web-sdk/external umd \"uuid\"","webpack://@brandembassy/chat-web-sdk/webpack/bootstrap","webpack://@brandembassy/chat-web-sdk/webpack/runtime/compat get default export","webpack://@brandembassy/chat-web-sdk/webpack/runtime/define property getters","webpack://@brandembassy/chat-web-sdk/webpack/runtime/hasOwnProperty shorthand","webpack://@brandembassy/chat-web-sdk/webpack/runtime/make namespace object","webpack://@brandembassy/chat-web-sdk/./src/env/ChatSDKVariable.ts","webpack://@brandembassy/chat-web-sdk/./src/env/getEnvVariable.ts","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isNull.js","webpack://@brandembassy/chat-web-sdk/./src/authorization/accessTokenStorage.ts","webpack://@brandembassy/chat-web-sdk/./src/visitor/createVisitorPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/error/ChatSDKError.ts","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_isPrototype.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_nativeKeys.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_overArg.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseKeys.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_freeGlobal.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_root.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_Symbol.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getRawTag.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_objectToString.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseGetTag.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isObject.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isFunction.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_coreJsData.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_isMasked.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_toSource.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIsNative.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getNative.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getValue.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_DataView.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_Map.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_Promise.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_Set.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_WeakMap.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getTag.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isObjectLike.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIsArguments.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isArguments.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isArray.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isLength.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isArrayLike.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isBuffer.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/stubFalse.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIsTypedArray.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_nodeUtil.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isTypedArray.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseUnary.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isEmpty.js","webpack://@brandembassy/chat-web-sdk/./src/request/requestQueue.ts","webpack://@brandembassy/chat-web-sdk/./src/request/makeRequest.ts","webpack://@brandembassy/chat-web-sdk/./src/utils/splitName.ts","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isUndefined.js","webpack://@brandembassy/chat-web-sdk/./src/customField/convertCustomField.ts","webpack://@brandembassy/chat-web-sdk/./src/customer/customer.ts","webpack://@brandembassy/chat-web-sdk/./src/customer/setCustomerCustomFieldsPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/customer/customerIdentityPayload.ts","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isNil.js","webpack://@brandembassy/chat-web-sdk/./src/utils/getBrandIdAndChannelId.ts","webpack://@brandembassy/chat-web-sdk/./src/sockets/EventPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/event/sendChatEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/createReconnectPayloadData.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/handleRefreshToken.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/isAuthorizationTokenGeneratedPostbackData.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/isAuthSuccessEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/isTokenRefreshedSuccessResponse.ts","webpack://@brandembassy/chat-web-sdk/./src/env/Environments.ts","webpack://@brandembassy/chat-web-sdk/./src/event/ChatEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/event/ChatEventMiddleware.ts","webpack://@brandembassy/chat-web-sdk/./src/event/ChatEventTarget.ts","webpack://@brandembassy/chat-web-sdk/./src/agent/agentTyping.ts","webpack://@brandembassy/chat-web-sdk/./src/event/normalizeEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/event/middleware/ChatEventMapper.ts","webpack://@brandembassy/chat-web-sdk/./src/agent/assignedAgentChanged.ts","webpack://@brandembassy/chat-web-sdk/./src/contact/contactCreated.ts","webpack://@brandembassy/chat-web-sdk/./src/contact/contactStatusChanged.ts","webpack://@brandembassy/chat-web-sdk/./src/contact/contactToRoutingQueueAssignmentChanged.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/livechatThread/livechatRecovered.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/threadRecovered.ts","webpack://@brandembassy/chat-web-sdk/./src/message/MessageSuccessEventData.ts","webpack://@brandembassy/chat-web-sdk/./src/sockets/WebSocketClientError.ts","webpack://@brandembassy/chat-web-sdk/./src/sockets/WebSocketClient.ts","webpack://@brandembassy/chat-web-sdk/./src/browserFingerprint/getBrowserFingerprint.ts","webpack://@brandembassy/chat-web-sdk/./src/attachment/uploadAttachment.ts","webpack://@brandembassy/chat-web-sdk/./src/attachment/sendAttachments.ts","webpack://@brandembassy/chat-web-sdk/./src/attachment/createPayloadForAttachmentUpload.ts","webpack://@brandembassy/chat-web-sdk/./src/attachment/localFileReader.ts","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/eq.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_assocIndexOf.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_listCacheDelete.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_ListCache.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_listCacheClear.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_listCacheGet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_listCacheHas.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_listCacheSet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_nativeCreate.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_hashGet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_hashHas.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_Hash.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_hashClear.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_hashDelete.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_hashSet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getMapData.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_isKeyable.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_MapCache.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_mapCacheClear.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_mapCacheDelete.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_mapCacheGet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_mapCacheHas.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_mapCacheSet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_Stack.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_stackClear.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_stackDelete.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_stackGet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_stackHas.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_stackSet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_SetCache.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_setCacheAdd.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_setCacheHas.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_arraySome.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_cacheHas.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_equalArrays.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_Uint8Array.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_mapToArray.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_setToArray.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_equalByTag.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getSymbols.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_arrayFilter.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/stubArray.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_isIndex.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_arrayLikeKeys.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseTimes.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/keys.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getAllKeys.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseGetAllKeys.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_arrayPush.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_equalObjects.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIsEqualDeep.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIsEqual.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_isStrictComparable.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_matchesStrictComparable.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseMatches.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_getMatchData.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIsMatch.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/isSymbol.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_isKey.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/memoize.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_stringToPath.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_memoizeCapped.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseToString.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_arrayMap.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_castPath.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/toString.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_toKey.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseGet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseHasIn.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/hasIn.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_hasPath.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseMatchesProperty.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/get.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/identity.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/property.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseProperty.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_basePropertyDeep.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIsNaN.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_arrayIncludes.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIndexOf.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_strictIndexOf.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseFindIndex.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_arrayIncludesWith.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_createSet.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/noop.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/uniqBy.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseUniq.js","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/_baseIteratee.js","webpack://@brandembassy/chat-web-sdk/./src/message/loadMoreMessagesEventData.ts","webpack://@brandembassy/chat-web-sdk/./src/message/loadMoreMessagesPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/isLoadMetadataSuccessPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/isRecoverSuccessPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/isThreadArchivedSuccessPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/recoverThreadPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/typingEvents.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/Thread.ts","webpack://@brandembassy/chat-web-sdk/./src/message/sendMessage.ts","webpack://@brandembassy/chat-web-sdk/./src/message/sendMessagePayload.ts","webpack://@brandembassy/chat-web-sdk/./src/message/createTextMessageData.ts","webpack://@brandembassy/chat-web-sdk/./src/message/sendOutboundMessage.ts","webpack://@brandembassy/chat-web-sdk/./src/message/sendOutboundMessagePayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/lastMessageSeenPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/metadata.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/threadEventHandler.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/setThreadCustomFieldsPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/archiveThread.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/updateThread.ts","webpack://@brandembassy/chat-web-sdk/./src/message/sendMessagePreviewPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/transcript.ts","webpack://@brandembassy/chat-web-sdk/./src/customField/mergeCustomFields.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/livechatThread/recoverLivechatThreadPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/livechatThread/LivechatThread.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/livechatThread/createEndThreadPayloadData.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/isThreadListFetchedPostbackData.ts","webpack://@brandembassy/chat-web-sdk/./src/contact/isContactCreatedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/storeContactId.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/storeContactIdMiddleware.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/storeThreadScrollData.ts","webpack://@brandembassy/chat-web-sdk/./node_modules/lodash-es/last.js","webpack://@brandembassy/chat-web-sdk/./src/thread/storeThreadScrollDataMiddleware.ts","webpack://@brandembassy/chat-web-sdk/./src/error/AbortError.ts","webpack://@brandembassy/chat-web-sdk/./src/utils/AbortablePromise.ts","webpack://@brandembassy/chat-web-sdk/./src/ChatSdk.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/createRefreshTokenPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/env/appName.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/authorizationReconnect.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/authorizationPayloadData.ts","webpack://@brandembassy/chat-web-sdk/./src/customer/isCustomerIdentityIdValid.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/generateAuthorizationTokenPayload.ts","webpack://@brandembassy/chat-web-sdk/./src/message/sendOfflineMessage.ts","webpack://@brandembassy/chat-web-sdk/./src/message/sendOfflineMessagePayload.ts","webpack://@brandembassy/chat-web-sdk/./src/utils/assert.ts","webpack://@brandembassy/chat-web-sdk/./src/request/messageHandler.ts","webpack://@brandembassy/chat-web-sdk/./src/agent/isAssignedAgentChangedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/agent/isAgentTypingStartedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/agent/isAgentTypingEndedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/contact/isContactStatusChangedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/contact/isContactToRoutingQueueAssignmentChangedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/contact/isContactRecipientsChangedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/message/getAuthor.ts","webpack://@brandembassy/chat-web-sdk/./src/message/isMessage.ts","webpack://@brandembassy/chat-web-sdk/./src/message/isMessageCreatedEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/message/isMessageSentEvent.ts","webpack://@brandembassy/chat-web-sdk/./src/thread/livechatThread/isSetPositionInQueuePayload.ts","webpack://@brandembassy/chat-web-sdk/./src/groupChat/createInvitation.ts","webpack://@brandembassy/chat-web-sdk/./src/groupChat/joinGroupChat.ts","webpack://@brandembassy/chat-web-sdk/./src/groupChat/leaveGroupChat.ts","webpack://@brandembassy/chat-web-sdk/./src/groupChat/sendEmailInvitation.ts","webpack://@brandembassy/chat-web-sdk/./src/authorization/CustomerReconnectSuccessPayloadData.ts","webpack://@brandembassy/chat-web-sdk/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"uuid\"), require(\"ua-parser-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"uuid\", \"ua-parser-js\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"uuid\"), require(\"ua-parser-js\")) : factory(root[\"uuid\"], root[\"ua-parser-js\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, (__WEBPACK_EXTERNAL_MODULE__459__, __WEBPACK_EXTERNAL_MODULE__585__) => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseTimestampFromISO8601String = exports.fromISOString = exports.isISOStringDateWithTimezoneOffset = exports.toISOStringWithTimezoneOffset = exports.toISOStringWithMilliseconds = exports.toISOString = void 0;\nvar timezone_1 = require(\"./timezone\");\nvar misc_1 = require(\"./misc\");\nvar toISOString = function (date) {\n    return (date.getUTCFullYear() +\n        '-' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCMonth() + 1) +\n        '-' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCDate()) +\n        'T' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCHours()) +\n        ':' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCMinutes()) +\n        ':' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCSeconds()) +\n        '+00:00');\n};\nexports.toISOString = toISOString;\nvar toISOStringWithMilliseconds = function (date) {\n    return (date.getUTCFullYear() +\n        '-' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCMonth() + 1) +\n        '-' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCDate()) +\n        'T' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCHours()) +\n        ':' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCMinutes()) +\n        ':' +\n        (0, misc_1.padDateTimeUnit)(date.getUTCSeconds()) +\n        '.' +\n        (date.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) +\n        '+00:00');\n};\nexports.toISOStringWithMilliseconds = toISOStringWithMilliseconds;\nvar toISOStringWithTimezoneOffset = function (date) {\n    return (date.getFullYear() +\n        '-' +\n        (0, misc_1.padDateTimeUnit)(date.getMonth() + 1) +\n        '-' +\n        (0, misc_1.padDateTimeUnit)(date.getDate()) +\n        'T' +\n        (0, misc_1.padDateTimeUnit)(date.getHours()) +\n        ':' +\n        (0, misc_1.padDateTimeUnit)(date.getMinutes()) +\n        ':' +\n        (0, misc_1.padDateTimeUnit)(date.getSeconds()) +\n        (0, timezone_1.getTimezoneISOOffset)(date));\n};\nexports.toISOStringWithTimezoneOffset = toISOStringWithTimezoneOffset;\nfunction isISOStringDateWithTimezoneOffset(isoDateString) {\n    return /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2})\\:(\\d{2})\\:(\\d{2})[+-](\\d{2})\\:(\\d{2})$/.test(isoDateString);\n}\nexports.isISOStringDateWithTimezoneOffset = isISOStringDateWithTimezoneOffset;\nfunction fromISOString(isoString) {\n    var milliseconds = Date.parse(isoString);\n    if (isNaN(milliseconds)) {\n        milliseconds = parseTimestampFromISO8601String(isoString);\n    }\n    return new Date(milliseconds);\n}\nexports.fromISOString = fromISOString;\nfunction parseTimestampFromISO8601String(isoString) {\n    var day;\n    var rx = /^(\\d{4}-\\d\\d-\\d\\d([tT][\\d:.]*)?)([zZ]|([+-])(\\d\\d):?(\\d\\d))?$/;\n    var parsedDate = rx.exec(isoString) || [];\n    if (parsedDate[1]) {\n        day = parsedDate[1].split(/\\D/).map(function (itm) { return parseInt(itm, 10) || 0; });\n        day[1] -= 1;\n        //@ts-ignore\n        day = new Date(Date.UTC.apply(Date, day));\n        if (!day.getDate()) {\n            return NaN;\n        }\n        if (parsedDate[5]) {\n            var tz = parseInt(parsedDate[5], 10) * 60;\n            if (parsedDate[6]) {\n                tz += parseInt(parsedDate[6], 10);\n            }\n            if (parsedDate[4] === '+') {\n                tz *= -1;\n            }\n            if (tz) {\n                day.setUTCMinutes(day.getUTCMinutes() + tz);\n            }\n        }\n        return day.getTime();\n    }\n    return NaN;\n}\nexports.parseTimestampFromISO8601String = parseTimestampFromISO8601String;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTimeInMilliseconds = exports.getTimeInSeconds = exports.padDateTimeUnit = void 0;\nvar padDateTimeUnit = function (dateTimeUnit) {\n    var norm = Math.abs(Math.floor(typeof dateTimeUnit === 'string' ? Number(dateTimeUnit) : dateTimeUnit));\n    return (norm < 10 ? '0' : '') + norm;\n};\nexports.padDateTimeUnit = padDateTimeUnit;\nvar getTimeInSeconds = function (_a) {\n    var _b = _a.hours, hours = _b === void 0 ? 0 : _b, _c = _a.minutes, minutes = _c === void 0 ? 0 : _c, _d = _a.seconds, seconds = _d === void 0 ? 0 : _d;\n    return hours * 60 * 60 + minutes * 60 + seconds;\n};\nexports.getTimeInSeconds = getTimeInSeconds;\nvar getTimeInMilliseconds = function (_a) {\n    var _b = _a.hours, hours = _b === void 0 ? 0 : _b, _c = _a.minutes, minutes = _c === void 0 ? 0 : _c, _d = _a.seconds, seconds = _d === void 0 ? 0 : _d, _e = _a.milliseconds, milliseconds = _e === void 0 ? 0 : _e;\n    return (0, exports.getTimeInSeconds)({ hours: hours, minutes: minutes, seconds: seconds }) * 1000 + milliseconds;\n};\nexports.getTimeInMilliseconds = getTimeInMilliseconds;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTimezoneISOOffset = void 0;\nvar misc_1 = require(\"./misc\");\nvar getTimezoneISOOffset = function (date) {\n    if (date === void 0) { date = new Date(); }\n    var tzo = date.getTimezoneOffset();\n    var dif = tzo > 0 ? '-' : '+';\n    return \"\".concat(dif).concat((0, misc_1.padDateTimeUnit)(tzo / 60), \":\").concat((0, misc_1.padDateTimeUnit)(tzo % 60));\n};\nexports.getTimezoneISOOffset = getTimezoneISOOffset;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createQueryParametersAsString = void 0;\nfunction createQueryParametersAsString(queryParameters) {\n    return Object.keys(queryParameters)\n        .filter(function (key) { return queryParameters[key] !== null; })\n        .map(function (key) {\n        return [key, queryParameters[key]].map(encodeURIComponent).join('=');\n    })\n        .join('&');\n}\nexports.createQueryParametersAsString = createQueryParametersAsString;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EventTargetPolyfill = void 0;\nvar EventTargetPolyfill = (function () {\n    function EventTargetPolyfill() {\n        this.listeners = {};\n    }\n    EventTargetPolyfill.prototype.addEventListener = function (type, callback) {\n        if (!(type in this.listeners)) {\n            this.listeners[type] = [];\n        }\n        this.listeners[type].push(callback);\n    };\n    EventTargetPolyfill.prototype.removeEventListener = function (type, callback) {\n        if (!(type in this.listeners)) {\n            return;\n        }\n        var stack = this.listeners[type];\n        for (var i = 0, l = stack.length; i < l; i++) {\n            if (stack[i] === callback) {\n                stack.splice(i, 1);\n                return;\n            }\n        }\n    };\n    EventTargetPolyfill.prototype.dispatchEvent = function (event) {\n        if (!(event.type in this.listeners)) {\n            return true;\n        }\n        var stack = this.listeners[event.type].slice();\n        for (var i = 0, l = stack.length; i < l; i++) {\n            stack[i].call(this, event);\n        }\n        return !event.defaultPrevented;\n    };\n    return EventTargetPolyfill;\n}());\nexports.EventTargetPolyfill = EventTargetPolyfill;\n//# sourceMappingURL=EventTargetPolyfill.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketClientEvent = exports.WebSocketClient = exports.EventTargetPolyfill = exports.HeartBeatState = void 0;\nvar HeartBeatState_1 = require(\"./websocket/HeartBeatState\");\nObject.defineProperty(exports, \"HeartBeatState\", { enumerable: true, get: function () { return HeartBeatState_1.HeartBeatState; } });\nvar EventTargetPolyfill_1 = require(\"./eventTargetPolyfill/EventTargetPolyfill\");\nObject.defineProperty(exports, \"EventTargetPolyfill\", { enumerable: true, get: function () { return EventTargetPolyfill_1.EventTargetPolyfill; } });\nvar WebSocketClient_1 = require(\"./websocket/WebSocketClient\");\nObject.defineProperty(exports, \"WebSocketClient\", { enumerable: true, get: function () { return WebSocketClient_1.WebSocketClient; } });\nvar WebSocketClientEvent_1 = require(\"./websocket/WebSocketClientEvent\");\nObject.defineProperty(exports, \"WebSocketClientEvent\", { enumerable: true, get: function () { return WebSocketClientEvent_1.WebSocketClientEvent; } });\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getPushUpdateWebSocket = exports.setupSocketConnection = void 0;\nvar WebSocketClient_1 = require(\"../websocket/WebSocketClient\");\nvar WebSocketClientEvent_1 = require(\"../websocket/WebSocketClientEvent\");\nvar socket = null;\nfunction createWebSocketUrlWithProtocol(webSocketUrlWithoutProtocol, forceSecureProtocol) {\n    if (forceSecureProtocol) {\n        return \"wss://\" + webSocketUrlWithoutProtocol;\n    }\n    var protocol = window.location.protocol === 'https:' ? 'wss:' : 'ws:';\n    return protocol + \"//\" + webSocketUrlWithoutProtocol;\n}\nvar defaultConnectionOptions = {\n    forceSecureProtocol: false,\n    heartbeatAfterAuthorize: false,\n    maxRetries: 20,\n    maxReconnectionDelay: 1000,\n};\nvar setupSocketConnection = function (webSocketUrlWithoutProtocol, options) {\n    if (options === void 0) { options = {}; }\n    if (typeof options !== 'object') {\n        throw new TypeError(\"Options parameter must be an object not a \" + typeof options);\n    }\n    var connectionOptions = __assign(__assign({}, defaultConnectionOptions), options);\n    var forceSecureProtocol = connectionOptions.forceSecureProtocol, heartbeatAfterAuthorize = connectionOptions.heartbeatAfterAuthorize, wscOptions = __rest(connectionOptions, [\"forceSecureProtocol\", \"heartbeatAfterAuthorize\"]);\n    var url = createWebSocketUrlWithProtocol(webSocketUrlWithoutProtocol, forceSecureProtocol);\n    socket = new WebSocketClient_1.WebSocketClient(url, undefined, wscOptions);\n    if (heartbeatAfterAuthorize) {\n        socket.addEventListener(WebSocketClientEvent_1.WebSocketClientEvent.MESSAGE, function (event) {\n            if (JSON.parse(event.detail.data) === 'authorized') {\n                socket === null || socket === void 0 ? void 0 : socket.startHeartBeat();\n            }\n        });\n    }\n    else {\n        socket.startHeartBeat();\n    }\n    return socket;\n};\nexports.setupSocketConnection = setupSocketConnection;\nvar getPushUpdateWebSocket = function () { return socket; };\nexports.getPushUpdateWebSocket = getPushUpdateWebSocket;\n//# sourceMappingURL=pushUpdateWebSocket.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HeartBeatState = void 0;\nvar HeartBeatState;\n(function (HeartBeatState) {\n    HeartBeatState[\"DIED\"] = \"died\";\n    HeartBeatState[\"DYING\"] = \"dying\";\n    HeartBeatState[\"LIVING\"] = \"living\";\n})(HeartBeatState = exports.HeartBeatState || (exports.HeartBeatState = {}));\n//# sourceMappingURL=HeartBeatState.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketClient = exports.HEART_BEAT_CHECK_TIMEOUT = exports.HEART_BEAT_INTERVAL = void 0;\nvar reconnecting_websocket_1 = __importDefault(require(\"@brandembassy/reconnecting-websocket\"));\nvar EventTargetPolyfill_1 = require(\"../eventTargetPolyfill/EventTargetPolyfill\");\nvar HeartBeatState_1 = require(\"./HeartBeatState\");\nvar WebSocketClientEvent_1 = require(\"./WebSocketClientEvent\");\nexports.HEART_BEAT_INTERVAL = 15000;\nexports.HEART_BEAT_CHECK_TIMEOUT = exports.HEART_BEAT_INTERVAL * 3;\nvar HEART_BEAT_RESPONSE = 'pong';\nvar HEART_BEAT_ACTION_NAME = 'heartbeat';\nvar WebSocketClient = (function (_super) {\n    __extends(WebSocketClient, _super);\n    function WebSocketClient(url, protocols, options) {\n        var _this = _super.call(this) || this;\n        _this.heartBeatTimeout = null;\n        _this.heartBeatCheckTimeout = null;\n        _this.sendHeartBeat = function () {\n            _this.send(JSON.stringify({ action: HEART_BEAT_ACTION_NAME }));\n        };\n        _this.handleHeartBeatResponse = function () {\n            if (_this.heartBeatState === HeartBeatState_1.HeartBeatState.DYING) {\n                _this.heartBeatState = HeartBeatState_1.HeartBeatState.LIVING;\n                _this.dispatchHeartBeatState();\n            }\n            _this.setHeartBeatCheckTimeout();\n        };\n        _this.setHeartBeatCheckTimeout = function () {\n            if (_this.heartBeatCheckTimeout !== null) {\n                clearTimeout(_this.heartBeatCheckTimeout);\n            }\n            _this.heartBeatCheckTimeout = setTimeout(function () {\n                _this.heartBeatState = HeartBeatState_1.HeartBeatState.DYING;\n                _this.dispatchHeartBeatState();\n            }, exports.HEART_BEAT_CHECK_TIMEOUT);\n        };\n        _this.dispatchHeartBeatState = function () {\n            if (_this.heartBeatState !== null) {\n                _this.dispatchEvent(new CustomEvent(_this.heartBeatState));\n            }\n        };\n        _this.isHeartBeatActive = function () { return _this.heartBeatState !== null; };\n        _this.heartBeatState = null;\n        _this.socket = new reconnecting_websocket_1.default(url, protocols, options);\n        _this.socket.onopen = function () {\n            _this.dispatchEvent(new CustomEvent(WebSocketClientEvent_1.WebSocketClientEvent.OPEN));\n        };\n        _this.socket.onclose = function (closeEvent) {\n            if (_this.socket.retryCount === (options === null || options === void 0 ? void 0 : options.maxRetries)) {\n                _this.heartBeatState = HeartBeatState_1.HeartBeatState.DIED;\n            }\n            else {\n                _this.heartBeatState = HeartBeatState_1.HeartBeatState.DYING;\n            }\n            _this.dispatchHeartBeatState();\n            _this.dispatchEvent(new CustomEvent(WebSocketClientEvent_1.WebSocketClientEvent.CLOSE, { detail: closeEvent }));\n        };\n        _this.socket.onmessage = function (event) {\n            _this.handleHeartBeatResponse();\n            if (JSON.parse(event.data) !== HEART_BEAT_RESPONSE) {\n                _this.dispatchEvent(new CustomEvent(WebSocketClientEvent_1.WebSocketClientEvent.MESSAGE, { detail: event }));\n            }\n        };\n        _this.socket.onerror = function (event) {\n            _this.dispatchEvent(new CustomEvent(WebSocketClientEvent_1.WebSocketClientEvent.ERROR, { detail: event }));\n        };\n        return _this;\n    }\n    WebSocketClient.prototype.send = function (data) {\n        this.socket.send(data);\n    };\n    WebSocketClient.prototype.startHeartBeat = function () {\n        var _this = this;\n        var heartBeatCallback = function () {\n            _this.sendHeartBeat();\n            _this.heartBeatTimeout = setTimeout(heartBeatCallback, exports.HEART_BEAT_INTERVAL);\n        };\n        this.setHeartBeatCheckTimeout();\n        heartBeatCallback();\n        this.heartBeatState = HeartBeatState_1.HeartBeatState.LIVING;\n    };\n    WebSocketClient.prototype.stopHeartBeat = function () {\n        if (this.heartBeatTimeout !== null) {\n            clearTimeout(this.heartBeatTimeout);\n        }\n        if (this.heartBeatCheckTimeout !== null) {\n            clearTimeout(this.heartBeatCheckTimeout);\n        }\n        this.heartBeatState = null;\n    };\n    return WebSocketClient;\n}(EventTargetPolyfill_1.EventTargetPolyfill));\nexports.WebSocketClient = WebSocketClient;\n//# sourceMappingURL=WebSocketClient.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketClientEvent = void 0;\nvar WebSocketClientEvent;\n(function (WebSocketClientEvent) {\n    WebSocketClientEvent[\"CLOSE\"] = \"close\";\n    WebSocketClientEvent[\"ERROR\"] = \"error\";\n    WebSocketClientEvent[\"MESSAGE\"] = \"message\";\n    WebSocketClientEvent[\"OPEN\"] = \"open\";\n})(WebSocketClientEvent = exports.WebSocketClientEvent || (exports.WebSocketClientEvent = {}));\n//# sourceMappingURL=WebSocketClientEvent.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nfunction __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\n\nvar Event = /** @class */ (function () {\r\n    function Event(type, target) {\r\n        this.target = target;\r\n        this.type = type;\r\n    }\r\n    return Event;\r\n}());\r\nvar ErrorEvent = /** @class */ (function (_super) {\r\n    __extends(ErrorEvent, _super);\r\n    function ErrorEvent(error, target) {\r\n        var _this = _super.call(this, 'error', target) || this;\r\n        _this.message = error.message;\r\n        _this.error = error;\r\n        return _this;\r\n    }\r\n    return ErrorEvent;\r\n}(Event));\r\nvar CloseEvent = /** @class */ (function (_super) {\r\n    __extends(CloseEvent, _super);\r\n    function CloseEvent(code, reason, target) {\r\n        if (code === void 0) { code = 1000; }\r\n        if (reason === void 0) { reason = ''; }\r\n        var _this = _super.call(this, 'close', target) || this;\r\n        _this.wasClean = true;\r\n        _this.code = code;\r\n        _this.reason = reason;\r\n        return _this;\r\n    }\r\n    return CloseEvent;\r\n}(Event));\n\n/*!\r\n * Reconnecting WebSocket\r\n * by Pedro Ladaria <pedro.ladaria@gmail.com>\r\n * https://github.com/pladaria/reconnecting-websocket\r\n * License MIT\r\n */\r\nvar getGlobalWebSocket = function () {\r\n    if (typeof WebSocket !== 'undefined') {\r\n        // @ts-ignore\r\n        return WebSocket;\r\n    }\r\n};\r\n/**\r\n * Returns true if given argument looks like a WebSocket class\r\n */\r\nvar isWebSocket = function (w) { return typeof w !== 'undefined' && !!w && w.CLOSING === 2; };\r\nvar DEFAULT = {\r\n    maxReconnectionDelay: 10000,\r\n    minReconnectionDelay: 1000 + Math.random() * 4000,\r\n    minUptime: 5000,\r\n    reconnectionDelayGrowFactor: 1.3,\r\n    connectionTimeout: 4000,\r\n    maxRetries: Infinity,\r\n    maxEnqueuedMessages: Infinity,\r\n    startClosed: false,\r\n    debug: false,\r\n};\r\nvar ReconnectingWebSocket = /** @class */ (function () {\r\n    function ReconnectingWebSocket(url, protocols, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = {}; }\r\n        this._listeners = {\r\n            error: [],\r\n            message: [],\r\n            open: [],\r\n            close: [],\r\n        };\r\n        this._retryCount = -1;\r\n        this._shouldReconnect = true;\r\n        this._connectLock = false;\r\n        this._binaryType = 'blob';\r\n        this._closeCalled = false;\r\n        this._messageQueue = [];\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to CLOSED\r\n         */\r\n        this.onclose = null;\r\n        /**\r\n         * An event listener to be called when an error occurs\r\n         */\r\n        this.onerror = null;\r\n        /**\r\n         * An event listener to be called when a message is received from the server\r\n         */\r\n        this.onmessage = null;\r\n        /**\r\n         * An event listener to be called when the WebSocket connection's readyState changes to OPEN;\r\n         * this indicates that the connection is ready to send and receive data\r\n         */\r\n        this.onopen = null;\r\n        this._handleOpen = function (event) {\r\n            _this._debug('open event');\r\n            var _a = _this._options.minUptime, minUptime = _a === void 0 ? DEFAULT.minUptime : _a;\r\n            clearTimeout(_this._connectTimeout);\r\n            _this._uptimeTimeout = setTimeout(function () { return _this._acceptOpen(); }, minUptime);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            // send enqueued messages (messages sent before websocket open event)\r\n            _this._messageQueue.forEach(function (message) { var _a; return (_a = _this._ws) === null || _a === void 0 ? void 0 : _a.send(message); });\r\n            _this._messageQueue = [];\r\n            if (_this.onopen) {\r\n                _this.onopen(event);\r\n            }\r\n            _this._listeners.open.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleMessage = function (event) {\r\n            _this._debug('message event');\r\n            if (_this.onmessage) {\r\n                _this.onmessage(event);\r\n            }\r\n            _this._listeners.message.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._handleError = function (event) {\r\n            _this._debug('error event', event.message);\r\n            _this._disconnect(undefined, event.message === 'TIMEOUT' ? 'timeout' : undefined);\r\n            if (_this.onerror) {\r\n                _this.onerror(event);\r\n            }\r\n            _this._debug('exec error listeners');\r\n            _this._listeners.error.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n            _this._connect();\r\n        };\r\n        this._handleClose = function (event) {\r\n            _this._debug('close event');\r\n            _this._clearTimeouts();\r\n            if (_this._shouldReconnect) {\r\n                _this._connect();\r\n            }\r\n            if (_this.onclose) {\r\n                _this.onclose(event);\r\n            }\r\n            _this._listeners.close.forEach(function (listener) { return _this._callEventListener(event, listener); });\r\n        };\r\n        this._url = url;\r\n        this._protocols = protocols;\r\n        this._options = options;\r\n        if (this._options.startClosed) {\r\n            this._shouldReconnect = false;\r\n        }\r\n        this._connect();\r\n    }\r\n    Object.defineProperty(ReconnectingWebSocket, \"CONNECTING\", {\r\n        get: function () {\r\n            return 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"OPEN\", {\r\n        get: function () {\r\n            return 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSING\", {\r\n        get: function () {\r\n            return 2;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket, \"CLOSED\", {\r\n        get: function () {\r\n            return 3;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CONNECTING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"OPEN\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.OPEN;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSING\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"CLOSED\", {\r\n        get: function () {\r\n            return ReconnectingWebSocket.CLOSED;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"binaryType\", {\r\n        get: function () {\r\n            return this._ws ? this._ws.binaryType : this._binaryType;\r\n        },\r\n        set: function (value) {\r\n            this._binaryType = value;\r\n            if (this._ws) {\r\n                this._ws.binaryType = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"retryCount\", {\r\n        /**\r\n         * Returns the number or connection retries\r\n         */\r\n        get: function () {\r\n            return Math.max(this._retryCount, 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"bufferedAmount\", {\r\n        /**\r\n         * The number of bytes of data that have been queued using calls to send() but not yet\r\n         * transmitted to the network. This value resets to zero once all queued data has been sent.\r\n         * This value does not reset to zero when the connection is closed; if you keep calling send(),\r\n         * this will continue to climb. Read only\r\n         */\r\n        get: function () {\r\n            var bytes = this._messageQueue.reduce(function (acc, message) {\r\n                if (typeof message === 'string') {\r\n                    acc += message.length; // not byte size\r\n                }\r\n                else if (message instanceof Blob) {\r\n                    acc += message.size;\r\n                }\r\n                else {\r\n                    acc += message.byteLength;\r\n                }\r\n                return acc;\r\n            }, 0);\r\n            return bytes + (this._ws ? this._ws.bufferedAmount : 0);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"extensions\", {\r\n        /**\r\n         * The extensions selected by the server. This is currently only the empty string or a list of\r\n         * extensions as negotiated by the connection\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.extensions : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"protocol\", {\r\n        /**\r\n         * A string indicating the name of the sub-protocol the server selected;\r\n         * this will be one of the strings specified in the protocols parameter when creating the\r\n         * WebSocket object\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.protocol : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"readyState\", {\r\n        /**\r\n         * The current state of the connection; this is one of the Ready state constants\r\n         */\r\n        get: function () {\r\n            if (this._ws) {\r\n                return this._ws.readyState;\r\n            }\r\n            return this._options.startClosed\r\n                ? ReconnectingWebSocket.CLOSED\r\n                : ReconnectingWebSocket.CONNECTING;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ReconnectingWebSocket.prototype, \"url\", {\r\n        /**\r\n         * The URL as resolved by the constructor\r\n         */\r\n        get: function () {\r\n            return this._ws ? this._ws.url : '';\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt, if any. If the connection is already\r\n     * CLOSED, this method does nothing\r\n     */\r\n    ReconnectingWebSocket.prototype.close = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._closeCalled = true;\r\n        this._shouldReconnect = false;\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            this._debug('close enqueued: no ws instance');\r\n            return;\r\n        }\r\n        if (this._ws.readyState === this.CLOSED) {\r\n            this._debug('close: already closed');\r\n            return;\r\n        }\r\n        this._ws.close(code, reason);\r\n    };\r\n    /**\r\n     * Closes the WebSocket connection or connection attempt and connects again.\r\n     * Resets retry counter;\r\n     */\r\n    ReconnectingWebSocket.prototype.reconnect = function (code, reason) {\r\n        this._shouldReconnect = true;\r\n        this._closeCalled = false;\r\n        this._retryCount = -1;\r\n        if (!this._ws || this._ws.readyState === this.CLOSED) {\r\n            this._connect();\r\n        }\r\n        else {\r\n            this._disconnect(code, reason);\r\n            this._connect();\r\n        }\r\n    };\r\n    /**\r\n     * Enqueue specified data to be transmitted to the server over the WebSocket connection\r\n     */\r\n    ReconnectingWebSocket.prototype.send = function (data) {\r\n        if (this._ws && this._ws.readyState === this.OPEN) {\r\n            this._debug('send', data);\r\n            this._ws.send(data);\r\n        }\r\n        else {\r\n            var _a = this._options.maxEnqueuedMessages, maxEnqueuedMessages = _a === void 0 ? DEFAULT.maxEnqueuedMessages : _a;\r\n            if (this._messageQueue.length < maxEnqueuedMessages) {\r\n                this._debug('enqueue', data);\r\n                this._messageQueue.push(data);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Register an event handler of a specific event type\r\n     */\r\n    ReconnectingWebSocket.prototype.addEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type].push(listener);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype.dispatchEvent = function (event) {\r\n        var e_1, _a;\r\n        var listeners = this._listeners[event.type];\r\n        if (listeners) {\r\n            try {\r\n                for (var listeners_1 = __values(listeners), listeners_1_1 = listeners_1.next(); !listeners_1_1.done; listeners_1_1 = listeners_1.next()) {\r\n                    var listener = listeners_1_1.value;\r\n                    this._callEventListener(event, listener);\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (listeners_1_1 && !listeners_1_1.done && (_a = listeners_1.return)) _a.call(listeners_1);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     * Removes an event listener\r\n     */\r\n    ReconnectingWebSocket.prototype.removeEventListener = function (type, listener) {\r\n        if (this._listeners[type]) {\r\n            // @ts-ignore\r\n            this._listeners[type] = this._listeners[type].filter(function (l) { return l !== listener; });\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._debug = function () {\r\n        var args = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            args[_i] = arguments[_i];\r\n        }\r\n        if (this._options.debug) {\r\n            // not using spread because compiled version uses Symbols\r\n            // tslint:disable-next-line\r\n            console.log.apply(console, __spread(['RWS>'], args));\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextDelay = function () {\r\n        var _a = this._options, _b = _a.reconnectionDelayGrowFactor, reconnectionDelayGrowFactor = _b === void 0 ? DEFAULT.reconnectionDelayGrowFactor : _b, _c = _a.minReconnectionDelay, minReconnectionDelay = _c === void 0 ? DEFAULT.minReconnectionDelay : _c, _d = _a.maxReconnectionDelay, maxReconnectionDelay = _d === void 0 ? DEFAULT.maxReconnectionDelay : _d;\r\n        var delay = 0;\r\n        if (this._retryCount > 0) {\r\n            delay =\r\n                minReconnectionDelay * Math.pow(reconnectionDelayGrowFactor, this._retryCount - 1);\r\n            if (delay > maxReconnectionDelay) {\r\n                delay = maxReconnectionDelay;\r\n            }\r\n        }\r\n        this._debug('next delay', delay);\r\n        return delay;\r\n    };\r\n    ReconnectingWebSocket.prototype._wait = function () {\r\n        var _this = this;\r\n        return new Promise(function (resolve) {\r\n            setTimeout(resolve, _this._getNextDelay());\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._getNextUrl = function (urlProvider) {\r\n        if (typeof urlProvider === 'string') {\r\n            return Promise.resolve(urlProvider);\r\n        }\r\n        if (typeof urlProvider === 'function') {\r\n            var url = urlProvider();\r\n            if (typeof url === 'string') {\r\n                return Promise.resolve(url);\r\n            }\r\n            // @ts-ignore redundant check\r\n            if (url.then) {\r\n                return url;\r\n            }\r\n        }\r\n        throw Error('Invalid URL');\r\n    };\r\n    ReconnectingWebSocket.prototype._connect = function () {\r\n        var _this = this;\r\n        if (this._connectLock || !this._shouldReconnect) {\r\n            return;\r\n        }\r\n        this._connectLock = true;\r\n        var _a = this._options, _b = _a.maxRetries, maxRetries = _b === void 0 ? DEFAULT.maxRetries : _b, _c = _a.connectionTimeout, connectionTimeout = _c === void 0 ? DEFAULT.connectionTimeout : _c, _d = _a.WebSocket, WebSocket = _d === void 0 ? getGlobalWebSocket() : _d;\r\n        if (this._retryCount >= maxRetries) {\r\n            this._debug('max retries reached', this._retryCount, '>=', maxRetries);\r\n            return;\r\n        }\r\n        this._retryCount++;\r\n        this._debug('connect', this._retryCount);\r\n        this._removeListeners();\r\n        if (!isWebSocket(WebSocket)) {\r\n            throw Error('No valid WebSocket class provided');\r\n        }\r\n        this._wait()\r\n            .then(function () { return _this._getNextUrl(_this._url); })\r\n            .then(function (url) {\r\n            // close could be called before creating the ws\r\n            if (_this._closeCalled) {\r\n                _this._connectLock = false;\r\n                return;\r\n            }\r\n            _this._debug('connect', { url: url, protocols: _this._protocols });\r\n            _this._ws = _this._protocols\r\n                ? new WebSocket(url, _this._protocols)\r\n                : new WebSocket(url);\r\n            _this._ws.binaryType = _this._binaryType;\r\n            _this._connectLock = false;\r\n            _this._addListeners();\r\n            _this._connectTimeout = setTimeout(function () { return _this._handleTimeout(); }, connectionTimeout);\r\n        })\r\n            .catch(function (err) {\r\n            _this._connectLock = false;\r\n            _this._handleError(new ErrorEvent(Error(err.message), _this));\r\n        });\r\n    };\r\n    ReconnectingWebSocket.prototype._handleTimeout = function () {\r\n        this._debug('timeout event');\r\n        this._handleError(new ErrorEvent(Error('TIMEOUT'), this));\r\n    };\r\n    ReconnectingWebSocket.prototype._disconnect = function (code, reason) {\r\n        if (code === void 0) { code = 1000; }\r\n        this._clearTimeouts();\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._removeListeners();\r\n        try {\r\n            this._ws.close(code, reason);\r\n            this._handleClose(new CloseEvent(code, reason, this));\r\n        }\r\n        catch (error) {\r\n            // ignore\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._acceptOpen = function () {\r\n        this._debug('accept open');\r\n        this._retryCount = 0;\r\n    };\r\n    ReconnectingWebSocket.prototype._callEventListener = function (event, listener) {\r\n        if ('handleEvent' in listener) {\r\n            // @ts-ignore\r\n            listener.handleEvent(event);\r\n        }\r\n        else {\r\n            // @ts-ignore\r\n            listener(event);\r\n        }\r\n    };\r\n    ReconnectingWebSocket.prototype._removeListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('removeListeners');\r\n        this._ws.removeEventListener('open', this._handleOpen);\r\n        this._ws.removeEventListener('close', this._handleClose);\r\n        this._ws.removeEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.removeEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._addListeners = function () {\r\n        if (!this._ws) {\r\n            return;\r\n        }\r\n        this._debug('addListeners');\r\n        this._ws.addEventListener('open', this._handleOpen);\r\n        this._ws.addEventListener('close', this._handleClose);\r\n        this._ws.addEventListener('message', this._handleMessage);\r\n        // @ts-ignore\r\n        this._ws.addEventListener('error', this._handleError);\r\n    };\r\n    ReconnectingWebSocket.prototype._clearTimeouts = function () {\r\n        clearTimeout(this._connectTimeout);\r\n        clearTimeout(this._uptimeTimeout);\r\n    };\r\n    return ReconnectingWebSocket;\r\n}());\n\nexport default ReconnectingWebSocket;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AwsChatWindowEventActionRoute;\n(function (AwsChatWindowEventActionRoute) {\n    AwsChatWindowEventActionRoute[\"CHAT_WINDOW_EVENT\"] = \"chatWindowEvent\";\n    AwsChatWindowEventActionRoute[\"REGISTER\"] = \"register\";\n})(AwsChatWindowEventActionRoute = exports.AwsChatWindowEventActionRoute || (exports.AwsChatWindowEventActionRoute = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar AwsInputEventType;\n(function (AwsInputEventType) {\n    AwsInputEventType[\"SENDER_TYPING_STARTED\"] = \"SenderTypingStarted\";\n    AwsInputEventType[\"SENDER_TYPING_ENDED\"] = \"SenderTypingEnded\";\n    AwsInputEventType[\"LOAD_MORE_MESSAGES\"] = \"LoadMoreMessages\";\n    AwsInputEventType[\"RECOVER_LIVECHAT\"] = \"RecoverLivechat\";\n    AwsInputEventType[\"RECOVER_THREAD\"] = \"RecoverThread\";\n    AwsInputEventType[\"SEND_MESSAGE\"] = \"SendMessage\";\n    AwsInputEventType[\"SEND_OUTBOUND\"] = \"SendOutbound\";\n    AwsInputEventType[\"SEND_OFFLINE_MESSAGE\"] = \"SendOfflineMessage\";\n    AwsInputEventType[\"SEND_PAGE_VIEWS\"] = \"SendPageViews\";\n    AwsInputEventType[\"SEND_CONSUMER_CUSTOM_FIELDS\"] = \"SetConsumerCustomFields\";\n    AwsInputEventType[\"SET_CONSUMER_CONTACT_CUSTOM_FIELD\"] = \"SetConsumerContactCustomFields\";\n    AwsInputEventType[\"MESSAGE_SEEN\"] = \"MessageSeenByConsumer\";\n    AwsInputEventType[\"SEND_TRANSCRIPT\"] = \"SendTranscript\";\n    AwsInputEventType[\"FETCH_THREAD_LIST\"] = \"FetchThreadList\";\n    AwsInputEventType[\"END_CONTACT\"] = \"EndContact\";\n    AwsInputEventType[\"EXECUTE_TRIGGER\"] = \"ExecuteTrigger\";\n    AwsInputEventType[\"AUTHORIZE_CONSUMER\"] = \"AuthorizeConsumer\";\n    AwsInputEventType[\"AUTHORIZE_CUSTOMER\"] = \"AuthorizeCustomer\";\n    AwsInputEventType[\"RECONNECT_CONSUMER\"] = \"ReconnectConsumer\";\n    AwsInputEventType[\"UPDATE_THREAD\"] = \"UpdateThread\";\n    AwsInputEventType[\"ARCHIVE_THREAD\"] = \"ArchiveThread\";\n    AwsInputEventType[\"LOAD_THREAD_METADATA\"] = \"LoadThreadMetadata\";\n    AwsInputEventType[\"REFRESH_TOKEN\"] = \"RefreshToken\";\n    AwsInputEventType[\"STORE_VISITOR\"] = \"StoreVisitor\";\n    AwsInputEventType[\"STORE_VISITOR_EVENTS\"] = \"StoreVisitorEvents\";\n    AwsInputEventType[\"CREATE_GROUP_CHAT_INVITE\"] = \"CreateInvitationToGroupChat\";\n    AwsInputEventType[\"SEND_EMAIL_INVITE_TO_GROUP_CHAT\"] = \"SendEmailInvitationToGroupChat\";\n    AwsInputEventType[\"JOIN_GROUP_CHAT\"] = \"JoinGroupChat\";\n    AwsInputEventType[\"LEAVE_GROUP_CHAT\"] = \"LeaveGroupChat\";\n    AwsInputEventType[\"GENERATE_AUTHORIZATION_TOKEN\"] = \"GenerateAuthorizationToken\";\n    AwsInputEventType[\"ADD_VISITOR_TAGS\"] = \"AddVisitorTags\";\n    AwsInputEventType[\"REMOVE_VISITOR_TAGS\"] = \"RemoveVisitorTags\";\n    AwsInputEventType[\"SEND_MESSAGE_PREVIEW\"] = \"SendMessagePreview\";\n})(AwsInputEventType = exports.AwsInputEventType || (exports.AwsInputEventType = {}));\nvar AwsResponseEventType;\n(function (AwsResponseEventType) {\n    AwsResponseEventType[\"LIVECHAT_RECOVERED\"] = \"LivechatRecovered\";\n    AwsResponseEventType[\"MORE_MESSAGES_LOADED\"] = \"MoreMessagesLoaded\";\n    AwsResponseEventType[\"OFFLINE_MESSAGE_SENT\"] = \"OfflineMessageSent\";\n    AwsResponseEventType[\"THREAD_LIST_FETCHED\"] = \"ThreadListFetched\";\n    AwsResponseEventType[\"THREAD_RECOVERED\"] = \"ThreadRecovered\";\n    AwsResponseEventType[\"TRANSCRIPT_SENT\"] = \"TranscriptSent\";\n    AwsResponseEventType[\"CONSUMER_AUTHORIZED\"] = \"ConsumerAuthorized\";\n    AwsResponseEventType[\"THREAD_METADATA_LOADED\"] = \"ThreadMetadataLoaded\";\n    AwsResponseEventType[\"SET_POSITION_IN_QUEUE\"] = \"SetPositionInQueue\";\n    AwsResponseEventType[\"GROUP_CHAT_INVITE_CREATED\"] = \"InvitationToGroupChatCreated\";\n    AwsResponseEventType[\"GROUP_CHAT_INVITE_SENT\"] = \"EmailInvitationToGroupChatSent\";\n    AwsResponseEventType[\"GROUP_CHAT_JOINED\"] = \"GroupChatJoined\";\n    AwsResponseEventType[\"TOKEN_REFRESHED\"] = \"TokenRefreshed\";\n    AwsResponseEventType[\"AUTHORIZATION_TOKEN_GENERATED\"] = \"AuthorizationTokenGenerated\";\n    AwsResponseEventType[\"THREAD_ARCHIVED\"] = \"ThreadArchived\";\n})(AwsResponseEventType = exports.AwsResponseEventType || (exports.AwsResponseEventType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeviceType;\n(function (DeviceType) {\n    DeviceType[\"DESKTOP\"] = \"desktop\";\n    DeviceType[\"MOBILE\"] = \"mobile\";\n    DeviceType[\"OTHER\"] = \"other\";\n    DeviceType[\"TABLET\"] = \"tablet\";\n})(DeviceType = exports.DeviceType || (exports.DeviceType = {}));\nvar ApplicationType;\n(function (ApplicationType) {\n    ApplicationType[\"BROWSER\"] = \"browser\";\n})(ApplicationType = exports.ApplicationType || (exports.ApplicationType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CALLER_SERVICE_ID = 'X-Caller-Service-ID';\nexports.TRACE_ID = 'X-Trace-ID';\nexports.TRANSACTION_ID = 'X-Transaction-ID';\nexports.USER_AGENT = 'User-Agent';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MessageDirection;\n(function (MessageDirection) {\n    MessageDirection[\"INBOUND\"] = \"inbound\";\n    MessageDirection[\"OUTBOUND\"] = \"outbound\";\n})(MessageDirection = exports.MessageDirection || (exports.MessageDirection = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MessageType;\n(function (MessageType) {\n    MessageType[\"TEXT\"] = \"TEXT\";\n    MessageType[\"FILE\"] = \"FILE\";\n    MessageType[\"FORM\"] = \"FORM\";\n    MessageType[\"PLUGIN\"] = \"PLUGIN\";\n    MessageType[\"POSTBACK\"] = \"POSTBACK\";\n    MessageType[\"QUICK_REPLIES\"] = \"QUICK_REPLIES\";\n    MessageType[\"RICH_LINK\"] = \"RICH_LINK\";\n    MessageType[\"LIST_PICKER\"] = \"LIST_PICKER\";\n    MessageType[\"ADAPTIVE_CARD\"] = \"ADAPTIVE_CARD\";\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar PushUpdateEventType;\n(function (PushUpdateEventType) {\n    PushUpdateEventType[\"AUTHORIZE_CONSUMER\"] = \"AuthorizeConsumer\";\n    /** @deprecated use CONTACT_CREATED */\n    PushUpdateEventType[\"CASE_CREATED\"] = \"CaseCreated\";\n    /** @deprecated use ASSIGNED_AGENT_CHANGED */\n    PushUpdateEventType[\"CASE_INBOX_ASSIGNEE_CHANGED\"] = \"CaseInboxAssigneeChanged\";\n    /** @deprecated use CONTACT_STATUS_CHANGED */\n    PushUpdateEventType[\"CASE_STATUS_CHANGED\"] = \"CaseStatusChanged\";\n    /** @deprecated use CONTACT_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED */\n    PushUpdateEventType[\"CASE_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED\"] = \"CaseToRoutingQueueAssignmentChanged\";\n    PushUpdateEventType[\"CONTACT_CREATED\"] = \"CaseCreated\";\n    PushUpdateEventType[\"ASSIGNED_AGENT_CHANGED\"] = \"CaseInboxAssigneeChanged\";\n    PushUpdateEventType[\"CONTACT_STATUS_CHANGED\"] = \"CaseStatusChanged\";\n    PushUpdateEventType[\"CONTACT_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED\"] = \"CaseToRoutingQueueAssignmentChanged\";\n    PushUpdateEventType[\"CONTACT_PREFERRED_USER_CHANGED\"] = \"ContactPreferredUserChanged\";\n    PushUpdateEventType[\"CONTACT_PROFICIENCY_CHANGED\"] = \"ContactProficiencyChanged\";\n    PushUpdateEventType[\"CONTACT_PRIORITY_CHANGED\"] = \"ContactPriorityChanged\";\n    PushUpdateEventType[\"CONTACT_SYNC\"] = \"ContactSync\";\n    PushUpdateEventType[\"CHANNEL_CREATED\"] = \"ChannelCreated\";\n    PushUpdateEventType[\"CHANNEL_DELETED\"] = \"ChannelDeleted\";\n    PushUpdateEventType[\"CHANNEL_UPDATED\"] = \"ChannelUpdated\";\n    PushUpdateEventType[\"MESSAGE_ADDED_INTO_CASE\"] = \"MessageAddedIntoCase\";\n    PushUpdateEventType[\"MESSAGE_CREATED\"] = \"MessageCreated\";\n    PushUpdateEventType[\"MESSAGE_DELIVERED_TO_END_USER\"] = \"MessageDeliveredToEndUser\";\n    PushUpdateEventType[\"MESSAGE_DELIVERED_TO_USER\"] = \"MessageDeliveredToUser\";\n    PushUpdateEventType[\"MESSAGE_NOTE_CREATED\"] = \"MessageNoteCreated\";\n    PushUpdateEventType[\"MESSAGE_NOTE_UPDATED\"] = \"MessageNoteUpdated\";\n    PushUpdateEventType[\"MESSAGE_NOTE_DELETED\"] = \"MessageNoteDeleted\";\n    PushUpdateEventType[\"MESSAGE_READ_CHANGED\"] = \"MessageReadChanged\";\n    PushUpdateEventType[\"MESSAGE_SEEN_BY_END_USER\"] = \"MessageSeenByEndUser\";\n    PushUpdateEventType[\"MESSAGE_SEEN_BY_USER\"] = \"MessageSeenByUser\";\n    PushUpdateEventType[\"MESSAGE_SENT\"] = \"MessageSent\";\n    PushUpdateEventType[\"MESSAGE_UPDATED\"] = \"MessageUpdated\";\n    PushUpdateEventType[\"PAGE_VIEW_CREATED\"] = \"PageViewCreated\";\n    PushUpdateEventType[\"ROUTING_QUEUE_CREATED\"] = \"RoutingQueueCreated\";\n    PushUpdateEventType[\"ROUTING_QUEUE_DELETED\"] = \"RoutingQueueDeleted\";\n    PushUpdateEventType[\"ROUTING_QUEUE_UPDATED\"] = \"RoutingQueueUpdated\";\n    PushUpdateEventType[\"SUBQUEUE_ASSIGNED_TO_ROUTING_QUEUE\"] = \"SubqueueAssignedToRoutingQueue\";\n    PushUpdateEventType[\"SUBQUEUE_UNASSIGNED_TO_ROUTING_QUEUE\"] = \"SubqueueUnassignedFromRoutingQueue\";\n    PushUpdateEventType[\"USER_ASSIGNED_TO_ROUTING_QUEUE\"] = \"UserAssignedToRoutingQueue\";\n    PushUpdateEventType[\"USER_STATUS_CHANGED\"] = \"UserStatusChanged\";\n    PushUpdateEventType[\"USER_UNASSIGNED_FROM_ROUTING_QUEUE\"] = \"UserUnassignedFromRoutingQueue\";\n    PushUpdateEventType[\"AGENT_CONTACT_STARTED\"] = \"AgentContactStarted\";\n    PushUpdateEventType[\"AGENT_CONTACT_ENDED\"] = \"AgentContactEnded\";\n    PushUpdateEventType[\"SENDER_TYPING_STARTED\"] = \"SenderTypingStarted\";\n    PushUpdateEventType[\"SENDER_TYPING_ENDED\"] = \"SenderTypingEnded\";\n    PushUpdateEventType[\"FIRE_PROACTIVE\"] = \"FireProactiveAction\";\n    PushUpdateEventType[\"CONTACT_INBOX_PRE_ASSIGNEE_CHANGED\"] = \"ConsumerContactInboxPreAssigneeChanged\";\n    PushUpdateEventType[\"CONTACT_RECIPIENTS_CHANGED\"] = \"ContactRecipientsChanged\";\n    PushUpdateEventType[\"MESSAGE_PREVIEW_CREATED\"] = \"MessagePreviewCreated\";\n    PushUpdateEventType[\"EVENT_IN_S3\"] = \"EventInS3\";\n})(PushUpdateEventType = exports.PushUpdateEventType || (exports.PushUpdateEventType = {}));\n","module.exports = __WEBPACK_EXTERNAL_MODULE__585__;","module.exports = __WEBPACK_EXTERNAL_MODULE__459__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export enum ChatSDKVariable {\n  ACCESS_TOKEN = 'ACCESS_TOKEN',\n  ACCESS_TOKEN_EXPIRES_IN = 'ACCESS_TOKEN_EXPIRES_IN',\n  APP_NAME = 'APP_NAME',\n  APP_VERSION = 'APP_VERSION',\n  AUTHORIZATION_CODE = 'AUTHORIZATION_CODE',\n  BRAND_ID = 'BRAND_ID',\n  CHANNEL_ID = 'CHANNEL_ID',\n  CUSTOMER_ID = 'CUSTOMER_ID',\n  CUSTOMER_IMAGE = 'CUSTOMER_IMAGE',\n  CUSTOMER_NAME = 'CUSTOMER_NAME',\n  ENDPOINT_CHAT = 'ENDPOINT_CHAT',\n  ENDPOINT_GATEWAY = 'ENDPOINT_GATEWAY',\n  THREAD_DATA = 'THREAD_DATA',\n}\n","import { ChatSDKVariable } from './ChatSDKVariable';\n\nclass VariablesStorage {\n  private _vars: Partial<Record<ChatSDKVariable, string | undefined>> = {};\n\n  set(variableName: ChatSDKVariable, value: string | undefined): void {\n    this._vars[variableName] = value;\n  }\n\n  get<D = undefined>(\n    variableName: ChatSDKVariable,\n    defaultValue?: D,\n  ): string | D {\n    return this._vars[variableName] ?? (defaultValue as D);\n  }\n\n  list() {\n    return Object.keys(this._vars);\n  }\n\n  clear() {\n    this._vars = {};\n  }\n}\n\nexport const SDKVariableStorage = new VariablesStorage();\n","/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nexport default isNull;\n","import { AccessToken } from '@brandembassy/ts-types-chat/dist/authorization/AccessToken';\n\nimport { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\nimport { isNull } from '../utils/is';\n\nexport function setAccessToken(accessToken: AccessToken): void {\n  SDKVariableStorage.set(ChatSDKVariable.ACCESS_TOKEN, accessToken.token);\n  SDKVariableStorage.set(\n    ChatSDKVariable.ACCESS_TOKEN_EXPIRES_IN,\n    String(accessToken.expiresIn),\n  );\n}\n\nexport function getAccessToken(): AccessToken | null {\n  const token = SDKVariableStorage.get(ChatSDKVariable.ACCESS_TOKEN, null);\n  const expiresIn = SDKVariableStorage.get(\n    ChatSDKVariable.ACCESS_TOKEN_EXPIRES_IN,\n    null,\n  );\n\n  if (isNull(token) || isNull(expiresIn)) {\n    return null;\n  }\n\n  return {\n    token,\n    expiresIn: Number(expiresIn),\n  };\n}\n","import { VisitorInput } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsInputEvent';\nimport { VisitorId } from '@brandembassy/ts-types-platform/dist/visitor/VisitorId';\n\nexport interface VisitorPayload {\n  visitor: VisitorInput;\n}\n\nexport function createVisitorPayload(visitorId: VisitorId): VisitorPayload {\n  return {\n    visitor: {\n      id: visitorId,\n    },\n  };\n}\n","export class ChatSDKError extends Error {\n  name: string = 'ChatSDKError';\n\n  constructor(error: unknown) {\n    const message = error instanceof Error ? error.message : `${error}`;\n\n    super(`[ChatSDKError]: ${message}`);\n  }\n}\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n","import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n","import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n","import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n","import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n","import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n","import { ChatEventData } from '../event/ChatEvent';\n\nexport const requestQueue = new Map<string, (value: ChatEventData) => void>();\n","import { AwsInputEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsInputEvent';\n\nimport { ChatSDKError } from '../error/ChatSDKError';\nimport { ChatEventData } from '../event/ChatEvent';\nimport { Event } from '../sockets/EventPayload';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\nimport { generateId } from '../utils/generateId';\nimport { isEmpty, isNull } from '../utils/is';\n\nimport { requestQueue } from './requestQueue';\n\nexport const makeRequest = async (\n  event: Event<AwsInputEventData>,\n  wsClient: WebSocketClient | null,\n): Promise<ChatEventData> => {\n  if (isNull(wsClient)) {\n    throw new ChatSDKError('WebSocketClient is not initialized');\n  }\n  if (isEmpty(event.eventId)) {\n    event.eventId = generateId();\n  }\n\n  return new Promise<ChatEventData>((resolve) => {\n    requestQueue.set(event.eventId, resolve);\n    wsClient?.send(event);\n  });\n};\n","export function splitName(name: string): [string, string] {\n  const [firstName, ...names] = name.split(' ');\n  const lastName = names.join(' ');\n\n  return [firstName, lastName];\n}\n","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n","import { CustomField } from '@brandembassy/ts-types-platform/dist/customField/CustomField';\n\nimport { CustomFields } from './CustomFields';\n\nexport const convertCustomFields = (\n  customFields: CustomFields,\n): Array<CustomField> =>\n  Object.entries(customFields).map(([ident, value]) => ({\n    ident,\n    value,\n  }));\n","import { CustomField } from '@brandembassy/ts-types-platform/dist/customField/CustomField';\nimport { CustomerIdentityIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/endUser/EndUserIdentityId';\n\nimport { CustomFields } from '../customField/CustomFields';\nimport { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\nimport { ChatSDKError } from '../error/ChatSDKError';\nimport { ChatEventData } from '../event/ChatEvent';\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\nimport { generateId } from '../utils/generateId';\nimport { isUndefined } from '../utils/is';\n\nimport { createSetCustomerCustomFieldsPayloadData } from './setCustomerCustomFieldsPayload';\n\nexport class Customer {\n  websocketClient: WebSocketClient | null;\n\n  constructor(\n    id: CustomerIdentityIdOnExternalPlatform,\n    name: string | undefined,\n    image: string | undefined,\n    websocketClient: WebSocketClient | null,\n  ) {\n    this.websocketClient = websocketClient;\n    Customer.setId(id);\n    Customer.setName(name);\n    if (image) {\n      Customer.setImage(image);\n    }\n  }\n\n  static setId(id: CustomerIdentityIdOnExternalPlatform): void {\n    SDKVariableStorage.set(ChatSDKVariable.CUSTOMER_ID, id);\n  }\n\n  static getId(): CustomerIdentityIdOnExternalPlatform | null {\n    return SDKVariableStorage.get(ChatSDKVariable.CUSTOMER_ID, null);\n  }\n\n  static getName(): string | undefined {\n    return SDKVariableStorage.get(ChatSDKVariable.CUSTOMER_NAME);\n  }\n\n  static setName(name?: string): void {\n    SDKVariableStorage.set(ChatSDKVariable.CUSTOMER_NAME, name);\n  }\n\n  static getIdOrCreateNewOne(): CustomerIdentityIdOnExternalPlatform {\n    let customerId = this.getId();\n\n    if (!customerId) {\n      customerId = generateId();\n      this.setId(customerId);\n    }\n\n    return customerId;\n  }\n\n  public getId(): CustomerIdentityIdOnExternalPlatform {\n    return Customer.getIdOrCreateNewOne();\n  }\n\n  public getName(): string | undefined {\n    return Customer.getName();\n  }\n\n  public setName(name?: string): void {\n    Customer.setName(name);\n  }\n\n  static getImage(): string | undefined {\n    return SDKVariableStorage.get(ChatSDKVariable.CUSTOMER_IMAGE);\n  }\n\n  static setImage(image?: string): void {\n    SDKVariableStorage.set(ChatSDKVariable.CUSTOMER_IMAGE, image);\n  }\n\n  public setImage(image?: string): void {\n    Customer.setImage(image);\n  }\n\n  /**\n   * Set Customer Custom fields\n   * @param customFields - custom fields object\n   * @example setCustomFields(\\{ indentName: 'value' \\})\n   */\n  public async setCustomFields(\n    customFields: CustomFields,\n  ): Promise<ChatEventData> {\n    if (isUndefined(customFields)) {\n      throw new ChatSDKError('Custom fields must be set');\n    }\n\n    const payloadData = createSetCustomerCustomFieldsPayloadData(customFields);\n\n    return sendChatEvent(payloadData, this.websocketClient);\n  }\n\n  /**\n   * Set Customer Custom field\n   * @param name - Custom field name\n   * @param value - Custom field value\n   */\n  public async setCustomField(\n    name: string,\n    value: CustomField['value'],\n  ): Promise<ChatEventData> {\n    if (isUndefined(name) || isUndefined(value)) {\n      throw new ChatSDKError('Custom field name and value must be set');\n    }\n\n    return this.setCustomFields({ [name]: value });\n  }\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SendConsumerCustomFieldsEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendConsumerCustomFields';\n\nimport { convertCustomFields } from '../customField/convertCustomField';\nimport { CustomFields } from '../customField/CustomFields';\nimport { EventPayloadData } from '../sockets/EventPayload';\n\ntype SendCustomerCustomFieldsEventData = SendConsumerCustomFieldsEventData;\n\nexport function createSetCustomerCustomFieldsPayloadData(\n  customFields: CustomFields,\n): EventPayloadData<SendCustomerCustomFieldsEventData> {\n  return {\n    eventType: AwsInputEventType.SEND_CONSUMER_CUSTOM_FIELDS,\n    data: {\n      customFields: convertCustomFields(customFields),\n    },\n  };\n}\n","import { ConsumerIdentityInput } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsInputEvent';\n\nimport { splitName } from '../utils/splitName';\n\nimport { Customer } from './customer';\n\nexport type ConsumerIdentityPayload = ConsumerIdentityInput;\n\nexport function createCustomerIdentityPayload(\n  name?: string,\n  image?: string,\n): ConsumerIdentityPayload {\n  const storedName = name ?? Customer.getName();\n  const storedImage = image ?? Customer.getImage();\n\n  let customerIdentityNamePayload: Partial<ConsumerIdentityPayload> = {};\n  if (typeof storedName === 'string' && storedName.length > 0) {\n    const [firstName, lastName] = splitName(storedName);\n    customerIdentityNamePayload = { firstName, lastName };\n  }\n\n  if (storedImage) {\n    customerIdentityNamePayload.image = storedImage;\n  }\n\n  return {\n    idOnExternalPlatform: Customer.getIdOrCreateNewOne(),\n    ...customerIdentityNamePayload,\n  };\n}\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n","import { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';\nimport { ChannelId } from '@brandembassy/ts-types-platform/dist/channel/ChannelId';\n\nimport { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\n\nimport { isNil } from './is';\n\nexport function getBrandIdAndChannelId(): {\n  brandId: BrandId;\n  channelId: ChannelId;\n} {\n  const brandId = parseInt(SDKVariableStorage.get(ChatSDKVariable.BRAND_ID));\n  const channelId = SDKVariableStorage.get(ChatSDKVariable.CHANNEL_ID);\n\n  if (isNil(brandId) || isNaN(brandId) || isNil(channelId)) {\n    throw new Error(\n      `Cannot get BrandId and ChannelId from SDKVariableStorage \n      brandId (${brandId}) |\n      channelId (${channelId})`,\n    );\n  }\n\n  return {\n    brandId,\n    channelId,\n  };\n}\n","import { AwsChatWindowEventActionRoute } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsChatWindowEvent';\nimport { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport {\n  AwsInputEvent,\n  AwsInputEventData,\n  ConsumerIdentityInput,\n  DestinationInput,\n  VisitorInput,\n} from '@brandembassy/ts-types-chat/dist/awsEvents/AwsInputEvent';\n\nimport { createCustomerIdentityPayload } from '../customer/customerIdentityPayload';\nimport { ChatSDKError } from '../error/ChatSDKError';\nimport { generateId } from '../utils/generateId';\nimport { getBrandIdAndChannelId } from '../utils/getBrandIdAndChannelId';\nimport { isUndefined } from '../utils/is';\n\nexport type EventActionRoute = AwsChatWindowEventActionRoute;\nexport type EventPayload<D extends AwsInputEventData> = AwsInputEvent<\n  AwsInputEventType,\n  D\n>;\n\nexport interface Event<D extends AwsInputEventData> {\n  action: EventActionRoute;\n  eventId: string;\n  payload: EventPayload<D>;\n}\n\nexport interface EventPayloadData<D extends AwsInputEventData> {\n  consumerIdentity?: ConsumerIdentityInput;\n  data: D;\n  destination?: DestinationInput;\n  eventType: AwsInputEventType;\n  visitor?: VisitorInput;\n}\n\nexport function createEventPayload<D extends AwsInputEventData>(\n  eventPayloadData: EventPayloadData<D>,\n): EventPayload<D> {\n  const {\n    eventType,\n    data,\n    consumerIdentity = createCustomerIdentityPayload(),\n    destination = {},\n    visitor = {},\n  } = eventPayloadData;\n  const { brandId, channelId } = getBrandIdAndChannelId();\n\n  if (isUndefined(eventType)) {\n    throw new ChatSDKError(\n      `Cannot create an event payload because of missing eventType (${eventType})`,\n    );\n  }\n\n  return {\n    eventType,\n    brand: {\n      id: Number(brandId),\n    },\n    channel: {\n      id: channelId,\n    },\n    consumerIdentity,\n    data,\n    destination,\n    visitor,\n  };\n}\n\nexport function createEvent<D extends AwsInputEventData>(\n  payload: EventPayload<D>,\n  eventId: string = generateId(),\n  actionRoute: EventActionRoute = AwsChatWindowEventActionRoute.CHAT_WINDOW_EVENT,\n): Event<D> {\n  return {\n    action: actionRoute,\n    eventId,\n    payload,\n  };\n}\n","import { AwsInputEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsInputEvent';\n\nimport { makeRequest } from '../request/makeRequest';\nimport {\n  createEvent,\n  createEventPayload,\n  EventPayloadData,\n} from '../sockets/EventPayload';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nimport { ChatEventData } from './ChatEvent';\n\n/**\n * Send chat event\n * @param payloadData - payload data\n * @param webSocketClient - websocket client\n */\nexport async function sendChatEvent<D extends AwsInputEventData>(\n  payloadData: EventPayloadData<D>,\n  webSocketClient: WebSocketClient | null,\n): Promise<ChatEventData> {\n  const event = createEvent(createEventPayload(payloadData));\n\n  return makeRequest(event, webSocketClient);\n}\n","import { AccessToken } from '@brandembassy/ts-types-chat/dist/authorization/AccessToken';\nimport { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { ReconnectConsumerData } from '@brandembassy/ts-types-chat/dist/awsEvents/ReconnectConsumer';\nimport { VisitorId } from '@brandembassy/ts-types-platform/dist/visitor/VisitorId';\n\nimport { createCustomerIdentityPayload } from '../customer/customerIdentityPayload';\nimport { EventPayloadData } from '../sockets/EventPayload';\nimport { createVisitorPayload } from '../visitor/createVisitorPayload';\n\nexport function createReconnectPayloadData(\n  accessToken: AccessToken,\n  visitorId?: string,\n): EventPayloadData<ReconnectConsumerData> {\n  return {\n    ...createVisitorPayload(visitorId as VisitorId),\n    ...createCustomerIdentityPayload(),\n    eventType: AwsInputEventType.RECONNECT_CONSUMER,\n    data: {\n      accessToken: {\n        token: accessToken.token,\n      },\n    },\n  };\n}\n","import { AccessToken } from '@brandembassy/ts-types-chat/dist/authorization/AccessToken';\n\nlet refreshTokenTimeoutId: NodeJS.Timeout | null = null;\n\nexport function getIdealTimeInSecondsForIssueRefreshToken(\n  accessTokenExpiresIn: number,\n): number {\n  const idealTimeToRefreshAccessToken = Math.round(accessTokenExpiresIn * 0.9);\n\n  if (idealTimeToRefreshAccessToken < 20) {\n    return 20;\n  }\n\n  return idealTimeToRefreshAccessToken;\n}\n\nexport function handleRefreshToken(\n  accessToken: AccessToken,\n  refreshTokenAction: () => Promise<void>,\n): void {\n  if (refreshTokenTimeoutId !== null) {\n    clearTimeout(refreshTokenTimeoutId);\n  }\n\n  refreshTokenTimeoutId = setTimeout(\n    refreshTokenAction,\n    getIdealTimeInSecondsForIssueRefreshToken(accessToken.expiresIn) * 1000,\n  );\n}\n","import { AuthorizationTokenGeneratedPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/AuthorizationTokenGenerated';\n\nexport const isAuthorizationTokenGeneratedPostbackData = (\n  data: unknown,\n): data is AuthorizationTokenGeneratedPostbackData =>\n  'authorizationToken' in (data as AuthorizationTokenGeneratedPostbackData);\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\n\nimport { ChatEventData } from '../event/ChatEvent';\n\nimport { AuthorizeConsumerEventSuccessResponse } from './AuthorizeConsumerEventResponse';\n\nexport const isAuthSuccessEvent = (\n  payload: ChatEventData,\n): payload is AuthorizeConsumerEventSuccessResponse => {\n  const status = (payload as AuthorizeConsumerEventSuccessResponse)?.data\n    ?.status;\n  const type = payload?.type;\n\n  return (\n    type === AwsResponseEventType.CONSUMER_AUTHORIZED && status === 'success'\n  );\n};\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { TokenRefreshedPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/TokenRefreshed';\n\nexport interface TokenRefreshedSuccessResponse {\n  data: TokenRefreshedPostbackData;\n  type: AwsResponseEventType.TOKEN_REFRESHED;\n}\n\nexport function isTokenRefreshedSuccessResponse(\n  response: unknown,\n): response is TokenRefreshedSuccessResponse {\n  return (\n    (response as TokenRefreshedSuccessResponse)?.type ===\n      AwsResponseEventType.TOKEN_REFRESHED &&\n    (response as TokenRefreshedSuccessResponse).data?.accessToken?.token !==\n      undefined\n  );\n}\n","export enum EnvironmentName {\n  AU1 = 'AU1',\n  CA1 = 'CA1',\n  EU1 = 'EU1',\n  JP1 = 'JP1',\n  NA1 = 'NA1',\n  UK1 = 'UK1',\n  custom = 'custom',\n}\n\nexport interface EnvironmentEndpoints {\n  chat: string;\n  gateway: string;\n  name: string;\n}\n\nexport function getEnvironmentEndpoints(\n  environment: EnvironmentName,\n): EnvironmentEndpoints {\n  const placeholder = '{ENV}';\n  const chatUrlTemplate = `https://channels-de-${placeholder}.niceincontact.com`;\n  const gatewayUrlTemplate = `wss://chat-gateway-de-${placeholder}.niceincontact.com`;\n\n  switch (environment) {\n    case EnvironmentName.AU1:\n      return {\n        chat: chatUrlTemplate.replace(placeholder, 'au1'),\n        name: 'Australia',\n        gateway: gatewayUrlTemplate.replace(placeholder, 'au1'),\n      };\n    case EnvironmentName.CA1:\n      return {\n        chat: chatUrlTemplate.replace(placeholder, 'ca1'),\n        name: 'Canada',\n        gateway: gatewayUrlTemplate.replace(placeholder, 'ca1'),\n      };\n    case EnvironmentName.EU1:\n      return {\n        chat: chatUrlTemplate.replace(placeholder, 'eu1'),\n        name: 'Europe',\n        gateway: gatewayUrlTemplate.replace(placeholder, 'eu1'),\n      };\n    case EnvironmentName.JP1:\n      return {\n        chat: chatUrlTemplate.replace(placeholder, 'jp1'),\n        name: 'Japan',\n        gateway: gatewayUrlTemplate.replace(placeholder, 'jp1'),\n      };\n    case EnvironmentName.NA1:\n      return {\n        chat: chatUrlTemplate.replace(placeholder, 'na1'),\n        name: 'North America',\n        gateway: gatewayUrlTemplate.replace(placeholder, 'na1'),\n      };\n    case EnvironmentName.UK1:\n      return {\n        chat: chatUrlTemplate.replace(placeholder, 'uk1'),\n        name: 'United Kingdom',\n        gateway: gatewayUrlTemplate.replace(placeholder, 'uk1'),\n      };\n    case EnvironmentName.custom:\n      return {\n        chat: '',\n        name: 'Custom',\n        gateway: '',\n      };\n    default:\n      throw new Error(`Unknown environment: ${environment}`);\n  }\n}\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { PushUpdateContext } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateContext';\nimport { PushUpdateEventType } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateEventType';\n\nimport { MessageFailedEventData } from '../message/MessageSuccessEventData';\n\nexport const ChatEvent = {\n  ...PushUpdateEventType,\n  ...AwsResponseEventType,\n  AGENT_TYPING_STARTED: 'AgentTypingStarted',\n  AGENT_TYPING_ENDED: 'AgentTypingEnded',\n  ASSIGNED_AGENT_CHANGED: 'AssignedAgentChanged',\n  CONTACT_CREATED: 'ContactCreated',\n  CONTACT_STATUS_CHANGED: 'ContactStatusChanged',\n  CONTACT_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED:\n    'ContactToRoutingQueueAssignmentChanged',\n} as const;\n\nexport class ChatCustomEvent<\n  T extends ChatEventData = ChatEventData,\n> extends CustomEvent<T> {}\n\nexport interface ChatEventData {\n  context?: [] | PushUpdateContext;\n  createdAt: Date;\n  data: unknown;\n  error?: MessageFailedEventData['error'];\n  id: string;\n  type?: ChatEventType;\n}\n\nexport type ChatEventKey = keyof typeof ChatEvent;\nexport type ChatEventType = typeof ChatEvent[ChatEventKey];\n","import { ChatEventData } from './ChatEvent';\n\nexport type EventMiddleware = (\n  eventData: ChatEventData,\n) => ChatEventData | null;\n\nexport class ChatEventMiddleware {\n  middlewares: Array<EventMiddleware> = [];\n\n  register(middleware: EventMiddleware): void {\n    this.middlewares.push(middleware);\n  }\n\n  process(event?: ChatEventData): ChatEventData | null {\n    if (event === undefined) {\n      return null;\n    }\n\n    let processedEvent: ChatEventData | null = event;\n\n    for (const middleware of this.middlewares) {\n      if (processedEvent === null) {\n        return null;\n      }\n      processedEvent = middleware(processedEvent);\n    }\n\n    return processedEvent;\n  }\n}\n","import { ChatCustomEvent, ChatEventType } from './ChatEvent';\n\nexport interface IChatEventTarget extends EventTarget {\n  addEventListener<K extends ChatEventType>(\n    type: K,\n    listener: (event: ChatCustomEvent) => void,\n    options?: boolean | AddEventListenerOptions,\n  ): void;\n  addEventListener(\n    type: string,\n    callback: EventListenerOrEventListenerObject | null,\n    options?: EventListenerOptions | boolean,\n  ): void;\n\n  dispatchEvent(event: ChatCustomEvent): boolean;\n\n  removeEventListener(\n    type: string,\n    callback: EventListenerOrEventListenerObject | null,\n    options?: boolean | EventListenerOptions | undefined,\n  ): void;\n  removeEventListener<K extends ChatEventType>(\n    type: K,\n    callback: (event: ChatCustomEvent) => void,\n    options?: boolean | EventListenerOptions | undefined,\n  ): void;\n}\n\nexport const ChatEventTarget = EventTarget as {\n  new (): IChatEventTarget;\n  prototype: IChatEventTarget;\n};\n","import { ChatEvent, ChatEventData } from '../event/ChatEvent';\nimport { isNil } from '../utils/is';\n\ninterface UserData {\n  user: unknown;\n}\n\nfunction hasUserData(data: unknown): boolean {\n  return !isNil((data as UserData)?.user);\n}\n\nexport function agentTypingStarted(event: ChatEventData): ChatEventData {\n  if (hasUserData(event.data)) {\n    return {\n      ...event,\n      type: ChatEvent.AGENT_TYPING_STARTED,\n    };\n  }\n\n  return event;\n}\n\nexport function agentTypingEnded(event: ChatEventData): ChatEventData {\n  if (hasUserData(event.data)) {\n    return {\n      ...event,\n      type: ChatEvent.AGENT_TYPING_ENDED,\n    };\n  }\n\n  return event;\n}\n","import { fromISOString } from '@brandembassy/be-javascript-utils/dist/dateTime/isoString';\nimport { PushUpdateContext } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateContext';\n\nimport { MessageFailedEventData } from '../message/MessageSuccessEventData';\nimport { isEmpty } from '../utils/is';\n\nimport { ChatEventData, ChatEventType } from './ChatEvent';\n\ninterface EventBase {\n  createdAt: string;\n}\n\ninterface EventDataWithPostback extends EventBase {\n  postback: {\n    data: Record<string, unknown>;\n    eventType: ChatEventType;\n  };\n}\n\ninterface EventWithEventId extends EventBase {\n  eventId: string;\n}\n\ninterface EventWithData extends EventBase {\n  context?: [] | PushUpdateContext;\n  data: Record<string, unknown>;\n}\ninterface EventWithType extends EventBase {\n  eventType: ChatEventType;\n}\n\nconst EMPTY_EVENT = {\n  id: '',\n  data: null,\n  type: undefined,\n  createdAt: new Date(),\n};\n\nconst hasData = (event: unknown): event is EventWithData =>\n  'data' in (event as EventWithData);\n\nconst hasError = (event: unknown): event is MessageFailedEventData =>\n  'error' in (event as MessageFailedEventData);\n\nconst hasEventId = (event: unknown): event is EventWithEventId =>\n  'eventId' in (event as EventWithEventId);\n\nconst hasEventType = (event: unknown): event is EventWithType =>\n  'eventType' in (event as EventWithType);\n\nconst isDataWithPostback = (\n  eventDetailData: unknown,\n): eventDetailData is EventDataWithPostback => {\n  const postback = (eventDetailData as EventDataWithPostback)?.postback;\n\n  return isEmpty(postback) === false;\n};\n\nexport function normalizeEvent(event: unknown): ChatEventData {\n  if (!hasEventId(event)) {\n    return EMPTY_EVENT;\n  }\n\n  if (hasError(event)) {\n    return {\n      createdAt: fromISOString(event.createdAt),\n      data: null,\n      error: event.error,\n      id: event.eventId,\n    };\n  }\n\n  const eventType = hasEventType(event) ? event.eventType : undefined;\n\n  if (hasData(event)) {\n    return {\n      createdAt: fromISOString(event.createdAt),\n      context: event.context,\n      data: event.data,\n      id: event.eventId,\n      type: eventType,\n    };\n  }\n\n  if (isDataWithPostback(event)) {\n    const {\n      postback: { data: postbackData, eventType: postbackEventType },\n      eventId: rawEventId,\n      ...restEventData\n    } = event;\n\n    return {\n      type: postbackEventType,\n      data: {\n        ...restEventData,\n        ...postbackData,\n      },\n      createdAt: fromISOString(event.createdAt),\n      id: rawEventId,\n    };\n  }\n\n  const { eventId, ...eventRest } = event;\n\n  return {\n    data: undefined,\n    ...eventRest,\n    id: eventId,\n    type: eventType,\n    createdAt: fromISOString(event.createdAt),\n  };\n}\n","import { agentTypingEnded, agentTypingStarted } from '../../agent/agentTyping';\nimport { assignedAgentChanged } from '../../agent/assignedAgentChanged';\nimport { contactCreated } from '../../contact/contactCreated';\nimport { contactStatusChanged } from '../../contact/contactStatusChanged';\nimport { contactToRoutingQueueAssignmentChanged } from '../../contact/contactToRoutingQueueAssignmentChanged';\nimport { livechatRecovered } from '../../thread/livechatThread/livechatRecovered';\nimport { threadRecovered } from '../../thread/threadRecovered';\nimport { ChatEvent, ChatEventData } from '../ChatEvent';\nimport { EventMiddleware } from '../ChatEventMiddleware';\n\nconst eventTypeMap: Record<string, EventMiddleware> = {\n  [ChatEvent.SENDER_TYPING_STARTED]: agentTypingStarted,\n  [ChatEvent.SENDER_TYPING_ENDED]: agentTypingEnded,\n  [ChatEvent.CASE_INBOX_ASSIGNEE_CHANGED]: assignedAgentChanged,\n  [ChatEvent.CASE_CREATED]: contactCreated,\n  [ChatEvent.CASE_STATUS_CHANGED]: contactStatusChanged,\n  [ChatEvent.CASE_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED]:\n    contactToRoutingQueueAssignmentChanged,\n  [ChatEvent.LIVECHAT_RECOVERED]: livechatRecovered,\n  [ChatEvent.THREAD_RECOVERED]: threadRecovered,\n};\n\nexport function chatEventMapper(event: ChatEventData): ChatEventData | null {\n  if (event.type && eventTypeMap[event.type] !== undefined) {\n    return eventTypeMap[event.type](event);\n  }\n\n  return event;\n}\n","import { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport function assignedAgentChanged(event: ChatEventData): ChatEventData {\n  return {\n    ...event,\n    type: ChatEvent.ASSIGNED_AGENT_CHANGED,\n  };\n}\n","import { CaseCreatedData } from '@brandembassy/ts-types-platform/dist/post/case/CaseCreatedEvent';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport type ContactCreatedData = CaseCreatedData;\n\nexport interface ContactCreatedChatEvent extends ChatEventData {\n  data: ContactCreatedData;\n  type: typeof ChatEvent.CONTACT_CREATED;\n}\n\nexport function contactCreated(event: ChatEventData): ChatEventData {\n  return {\n    ...event,\n    type: ChatEvent.CONTACT_CREATED,\n  };\n}\n","import { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport function contactStatusChanged(event: ChatEventData): ChatEventData {\n  return {\n    ...event,\n    type: ChatEvent.CONTACT_STATUS_CHANGED,\n  };\n}\n","import { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nimport { ContactToRoutingQueueAssignmentChangedChatEvent } from './isContactToRoutingQueueAssignmentChangedEvent';\n\nexport function contactToRoutingQueueAssignmentChanged(\n  event: ChatEventData,\n): ContactToRoutingQueueAssignmentChangedChatEvent {\n  return {\n    ...(event as ContactToRoutingQueueAssignmentChangedChatEvent),\n    type: ChatEvent.CONTACT_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED,\n  };\n}\n","import { PushUpdateEventFields } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateEventFields';\n\nimport { ChatEventData } from '../../event/ChatEvent';\nimport { normalizeEvent } from '../../event/normalizeEvent';\n\nexport function livechatRecovered(event: ChatEventData): ChatEventData {\n  const normalizedContactHistoryItems = (\n    (event.data as Record<string, unknown>)\n      .contactHistory as Array<PushUpdateEventFields>\n  ).map(normalizeEvent);\n\n  return {\n    ...event,\n    data: {\n      ...(event.data as Record<string, unknown>),\n      contactHistory: normalizedContactHistoryItems,\n    },\n  };\n}\n","import { PushUpdateEventFields } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateEventFields';\n\nimport { ChatEventData } from '../event/ChatEvent';\nimport { normalizeEvent } from '../event/normalizeEvent';\n\nexport function threadRecovered(event: ChatEventData): ChatEventData {\n  const normalizedContactHistoryItems = (\n    (event.data as Record<string, unknown>)\n      .contactHistory as Array<PushUpdateEventFields>\n  ).map(normalizeEvent);\n\n  return {\n    ...event,\n    data: {\n      ...(event.data as Record<string, unknown>),\n      contactHistory: normalizedContactHistoryItems,\n    },\n  };\n}\n","import { ChatEventData } from '../event/ChatEvent';\nimport { isUndefined } from '../utils/is';\n\nexport interface MessageSuccessEventData extends ChatEventData {\n  id: string;\n}\nexport interface MessageFailedEventData extends MessageSuccessEventData {\n  error: {\n    errorCode: string;\n    errorMessage: string;\n    transactionId: string;\n  };\n  id: string;\n}\n\nexport function isSendMessageSuccessEventData(\n  event: ChatEventData,\n): event is MessageSuccessEventData {\n  const hasEventId =\n    isUndefined((event as MessageSuccessEventData)?.id) === false;\n\n  const hasError =\n    isUndefined((event as MessageFailedEventData).error) === false;\n\n  return hasError === false && hasEventId;\n}\n","export class WebSocketClientError extends Error {\n  name: string = 'WebSocketClientError';\n\n  constructor(message: string, reason: string = '') {\n    const reasonMessage = reason ? ` (${reason})` : '';\n    super(`[WebSocketClientError]: ${message}${reasonMessage}`);\n  }\n}\n","import { createQueryParametersAsString } from '@brandembassy/be-javascript-utils/dist/query/queryParameters';\nimport {\n  WebSocketClient as PushUpdateWSClient,\n  WebSocketClientEvent as PushUpdatesWebSocketClientEvent,\n} from '@brandembassy/push-updates-sdk';\nimport { setupSocketConnection } from '@brandembassy/push-updates-sdk/dist/pushUpdate/pushUpdateWebSocket';\nimport { CloseEvent, ErrorEvent } from '@brandembassy/reconnecting-websocket';\nimport { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';\nimport { ChannelId } from '@brandembassy/ts-types-platform/dist/channel/ChannelId';\nimport { CustomerIdentityIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/endUser/EndUserIdentityId';\n\nimport { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\n\nimport { WebSocketClientError } from './WebSocketClientError';\n\nexport const WebSocketClientEvent = PushUpdatesWebSocketClientEvent;\n\nfunction createSocketUrl(\n  host: string,\n  prefix: string,\n  brandId: BrandId,\n  channelId: ChannelId,\n  consumerIdOnExternalPlatform: CustomerIdentityIdOnExternalPlatform,\n): string {\n  const appVersion = SDKVariableStorage.get(ChatSDKVariable.APP_VERSION);\n  const queryParameters = {\n    brandId,\n    channelId,\n    consumerId: consumerIdOnExternalPlatform,\n    v: appVersion,\n  };\n\n  const queryParametersAsString =\n    createQueryParametersAsString(queryParameters);\n\n  return `${host}/${prefix}?${queryParametersAsString}`;\n}\n\nexport interface WebSocketClientOptions {\n  forceSecureProtocol?: boolean;\n  host?: string;\n  onError?: (error: WebSocketClientError) => void;\n  port?: string;\n  prefix?: string;\n}\n\n/**\n * Websocket client\n */\nexport class WebSocketClient {\n  private _connection: PushUpdateWSClient | null = null;\n\n  constructor(\n    private brandId: BrandId,\n    private channelId: ChannelId,\n    private customerId: CustomerIdentityIdOnExternalPlatform,\n    private options?: WebSocketClientOptions,\n    private onError?: (error: Error) => void,\n  ) {\n    this.connect();\n  }\n\n  /**\n   * Connect websocket\n   */\n  connect(): void {\n    const port = this.options?.port ? `:${this.options?.port}` : '';\n    const host = this.options?.host ? `${this.options?.host}${port}` : '';\n    const prefix = this.options?.prefix ?? '';\n    const forceSecureProtocol = this.options?.forceSecureProtocol ?? true;\n\n    const socketUrl = createSocketUrl(\n      host,\n      prefix,\n      this.brandId,\n      this.channelId,\n      this.customerId,\n    );\n\n    this._connection = setupSocketConnection(socketUrl, {\n      startClosed: true,\n      forceSecureProtocol,\n    });\n\n    const errorHandlerBound = this._errorHandler.bind(this);\n    this._connection?.addEventListener(\n      WebSocketClientEvent.CLOSE,\n      errorHandlerBound,\n    );\n    this._connection?.addEventListener(\n      WebSocketClientEvent.ERROR,\n      errorHandlerBound,\n    );\n\n    this._connection?.socket?.reconnect();\n  }\n\n  /**\n   * Disconnect websocket\n   */\n  disconnect(): void {\n    this._connection?.socket.close();\n  }\n\n  /**\n   * Reconnect websocket\n   */\n  reconnect(): void {\n    this._connection?.socket.reconnect();\n  }\n\n  /**\n   * Send data to active connection\n   * @param data - data to send\n   */\n  send(data: unknown): void {\n    const stringData = JSON.stringify(data);\n    this._connection?.send(stringData);\n  }\n\n  /**\n   * Register event handler to websocket event\n   * @param eventType - websocket event\n   * @param handlerCallback - event handler\n   */\n  on(\n    eventType: PushUpdatesWebSocketClientEvent,\n    handlerCallback: (event: CustomEvent) => void,\n  ): void {\n    this._connection?.addEventListener(eventType, handlerCallback);\n  }\n\n  /**\n   * Unregister event handler to websocket event\n   * @param eventType - websocket event\n   * @param handlerCallback - event handler\n   */\n  off(\n    eventType: PushUpdatesWebSocketClientEvent,\n    handlerCallback: (event: CustomEvent) => void,\n  ): void {\n    this._connection?.removeEventListener(eventType, handlerCallback);\n  }\n\n  /**\n   * Handle error from event listeners with onError callback or throw error\n   */\n  private _errorHandler(\n    event: CustomEvent<CloseEvent | ErrorEvent | Event>,\n  ): void {\n    const eventError = event.detail;\n    let error: WebSocketClientError | undefined;\n\n    if (eventError instanceof ErrorEvent) {\n      error = new WebSocketClientError('Connection error', eventError.message);\n    }\n    if (eventError instanceof CloseEvent) {\n      error = new WebSocketClientError('Connection closed', eventError.reason);\n    }\n    if (typeof error === 'undefined') {\n      error = new WebSocketClientError('Unknown error', eventError.type);\n    }\n\n    if (typeof this.onError === 'function') {\n      this.onError(error);\n    } else {\n      throw error;\n    }\n  }\n}\n","import UAParser from 'ua-parser-js';\n\nimport {\n  ApplicationType,\n  BrowserFingerprint,\n  DeviceType,\n} from '@brandembassy/ts-types-chat/dist/user/BrowserFingerprint';\n\nexport interface BrowserFingerprintOptions {\n  country?: string | null;\n  ip?: string | null;\n  language?: string;\n  location?: string | null;\n}\n\nexport const getBrowserLanguage = (): string => navigator.language;\nexport const getBrowserLocation = (): string =>\n  Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n/**\n * Get Device type\n * @param deviceType - device type\n */\nexport function getDeviceType(deviceType?: string): DeviceType {\n  switch (deviceType) {\n    case 'mobile':\n      return DeviceType.MOBILE;\n    case 'tablet':\n      return DeviceType.TABLET;\n    default:\n      return DeviceType.DESKTOP;\n  }\n}\n\n/**\n * Get Customer Browser fingerprint\n * @param options - options\n */\nexport const getBrowserFingerprint = (\n  options: BrowserFingerprintOptions = {},\n): BrowserFingerprint => {\n  const deviceInfoFromUserAgent = new UAParser(navigator.userAgent);\n\n  const {\n    country = '',\n    location = getBrowserLocation(),\n    language = getBrowserLanguage(),\n    ip = null,\n  } = options;\n\n  return {\n    browser: deviceInfoFromUserAgent.getBrowser().name ?? null,\n    browserVersion: deviceInfoFromUserAgent.getBrowser().version ?? null,\n    country,\n    ip,\n    language,\n    location,\n    os: deviceInfoFromUserAgent.getOS().name ?? null,\n    osVersion: deviceInfoFromUserAgent.getOS().version ?? null,\n    deviceType: getDeviceType(deviceInfoFromUserAgent.getDevice().type),\n    applicationType: ApplicationType.BROWSER,\n  };\n};\n","import { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';\nimport { CALLER_SERVICE_ID } from '@brandembassy/ts-types-platform/dist/http/headers';\n\nimport { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\nimport { ChatSDKError } from '../error/ChatSDKError';\nimport { isUndefined } from '../utils/is';\n\nimport { AttachmentPayload } from './createPayloadForAttachmentUpload';\n\nexport interface UploadSuccessResponse {\n  fileUrl: string;\n}\n\nexport interface UploadFailResponse {\n  allowedFileSize: string;\n  allowedFileTypes: Array<{\n    description: string;\n    mimeType: string;\n  }>;\n}\n\nexport function isUploadSuccessResponse(\n  data: unknown,\n): data is UploadSuccessResponse {\n  return isUndefined((data as UploadSuccessResponse)?.fileUrl) === false;\n}\n\nexport function isUploadFailResponse(\n  data: unknown,\n): data is UploadFailResponse {\n  return isUndefined((data as UploadFailResponse)?.allowedFileSize) === false;\n}\n\nexport async function uploadAttachment(\n  brandId: BrandId,\n  channelId: string,\n  attachment: AttachmentPayload,\n): Promise<UploadSuccessResponse | UploadFailResponse> {\n  const CHANNEL_INTEGRATION_URL = SDKVariableStorage.get(\n    ChatSDKVariable.ENDPOINT_CHAT,\n  );\n  const { url, name: fileName, mimeType } = attachment;\n  const content = url.split(';base64,')[1];\n  const requestBody = { content, fileName, mimeType };\n  const response = await fetch(\n    `${CHANNEL_INTEGRATION_URL}/chat/1.0/brand/${brandId}/channel/${channelId}/attachment`,\n    {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json',\n        [CALLER_SERVICE_ID]: SDKVariableStorage.get(ChatSDKVariable.APP_NAME),\n      },\n    },\n  );\n\n  if (!response.ok) {\n    throw new ChatSDKError(\n      `Failed to upload Attachments. Status (${response.status})`,\n    );\n  }\n\n  return response.json();\n}\n","import { SendMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessage';\nimport { Attachment } from '@brandembassy/ts-types-chat/dist/message/Attachment';\nimport { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';\nimport { ChannelId } from '@brandembassy/ts-types-platform/dist/channel/ChannelId';\nimport { MessageType } from '@brandembassy/ts-types-platform/dist/message/MessageType';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { getBrowserFingerprint } from '../browserFingerprint/getBrowserFingerprint';\nimport { convertCustomFields } from '../customField/convertCustomField';\nimport { ChatSDKError } from '../error/ChatSDKError';\nimport { SendMessageOptions } from '../thread/SendMessageOptions';\nimport { generateId } from '../utils/generateId';\nimport { getBrandIdAndChannelId } from '../utils/getBrandIdAndChannelId';\n\nimport { createPayloadForAttachmentUpload } from './createPayloadForAttachmentUpload';\nimport {\n  isUploadFailResponse,\n  isUploadSuccessResponse,\n  uploadAttachment,\n} from './uploadAttachment';\n\nexport const createAttachmentPayload = async (\n  file: File,\n  brandId: BrandId,\n  channelId: ChannelId,\n): Promise<Attachment> => {\n  const attachment = await createPayloadForAttachmentUpload(file);\n  const uploadAttachmentResponse = await uploadAttachment(\n    brandId,\n    channelId,\n    attachment,\n  );\n\n  if (isUploadSuccessResponse(uploadAttachmentResponse)) {\n    return {\n      url: uploadAttachmentResponse.fileUrl,\n      friendlyName: attachment.name,\n    };\n  }\n\n  if (isUploadFailResponse(uploadAttachmentResponse)) {\n    throw uploadAttachmentResponse;\n  }\n\n  throw new ChatSDKError(\n    `Unknown file upload response (${uploadAttachmentResponse})`,\n  );\n};\n\nexport const createAttachmentUploadMessageData = async (\n  files: FileList,\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n  options: SendMessageOptions = {},\n): Promise<SendMessageEventData> => {\n  const { brandId, channelId } = getBrandIdAndChannelId();\n\n  try {\n    const attachments = await Promise.all<Attachment>(\n      Array.from(files).map(async (file) =>\n        createAttachmentPayload(file, brandId, channelId),\n      ),\n    );\n\n    const {\n      messageId = generateId(),\n      browserFingerprint = getBrowserFingerprint(),\n      threadCustomFields = {},\n    } = options;\n\n    return {\n      messageContent: {\n        type: MessageType.TEXT,\n        payload: {\n          text: '',\n        },\n      },\n      attachments,\n      browserFingerprint,\n      thread: {\n        idOnExternalPlatform: threadIdOnExternalPlatform,\n      },\n      idOnExternalPlatform: messageId,\n      consumer: {\n        customFields: [],\n      },\n      consumerContact: {\n        customFields: convertCustomFields(threadCustomFields),\n      },\n    };\n  } catch (error: unknown) {\n    if (isUploadFailResponse(error)) {\n      throw error;\n    }\n    if (error instanceof Error) {\n      throw new ChatSDKError(\n        `Send attachment failed because of (${error.message})`,\n      );\n    }\n\n    throw new ChatSDKError(`Unknown error during file upload`);\n  }\n};\n","import { ChatSDKError } from '../error/ChatSDKError';\n\nimport { createLocalFileReader } from './localFileReader';\n\nexport interface AttachmentPayload {\n  mimeType: string;\n  name: string;\n  url: string;\n}\n\nexport const createPayloadForAttachmentUpload = async (\n  file: File,\n): Promise<AttachmentPayload> => {\n  const reader = await createLocalFileReader(file);\n\n  if (reader.error !== null) {\n    throw new ChatSDKError(\n      `Cannot create payload for attachment upload because of error (${reader.error.message})`,\n    );\n  }\n\n  if (typeof reader.result !== 'string') {\n    throw new ChatSDKError(\n      `Cannot create payload for attachment upload because of missing:\n      reader result (${reader.result})`,\n    );\n  }\n\n  return {\n    url: reader.result,\n    name: file.name,\n    mimeType: file.type,\n  };\n};\n","export function createLocalFileReader(file: File): Promise<FileReader> {\n  return new Promise((resolve, reject): void => {\n    const reader = new FileReader();\n    reader.onloadend = (): void => {\n      resolve(reader);\n    };\n    reader.onerror = (errorEvent: ProgressEvent<FileReader>): void =>\n      reject(errorEvent.target?.error?.message);\n    reader.readAsDataURL(file);\n  });\n}\n","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n","import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n","import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n","import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n","import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n","import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n","import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n","import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n","import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n","import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n","import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n","import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n","import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n","import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n","import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n","import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n","import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n","import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n","import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n","import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n","import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n","import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n","import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n","import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n","import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n","import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n","import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n","import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n","import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n","import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n","import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n","import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n","import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n","import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n","import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n","import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n","import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n","import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n","import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n","import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n","import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n","import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n","import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n","import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n","import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n","import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n","import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { MoreMessagesLoadedPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/MoreMessagesLoaded';\n\nimport { ChatEventData } from '../event/ChatEvent';\n\nexport interface MoreMessagesLoadedEvent extends ChatEventData {\n  data: MoreMessagesLoadedPostbackData;\n}\n\nexport function isLoadMoreMessagesEventData(\n  event: ChatEventData,\n): event is MoreMessagesLoadedEvent {\n  return (\n    (event as MoreMessagesLoadedEvent).type ===\n      AwsResponseEventType.MORE_MESSAGES_LOADED &&\n    (event as MoreMessagesLoadedEvent)?.data?.messages !== undefined\n  );\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { LoadMoreMessagesEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/LoadMoreMessages';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport const createLoadMoreMessagesPayloadData = (\n  eventData: LoadMoreMessagesEventData,\n): EventPayloadData<LoadMoreMessagesEventData> => ({\n  eventType: AwsInputEventType.LOAD_MORE_MESSAGES,\n  data: eventData,\n});\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { ThreadMetadataLoadedPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/ThreadMetadataLoaded';\n\nimport { ChatEventData } from '../event/ChatEvent';\n\nexport interface LoadThreadMetadataChatEvent extends ChatEventData {\n  data: ThreadMetadataLoadedPostbackData;\n  type: AwsResponseEventType.THREAD_METADATA_LOADED;\n}\n\nexport const isLoadMetadataSuccessPayload = (\n  response: ChatEventData,\n): response is LoadThreadMetadataChatEvent =>\n  (response as LoadThreadMetadataChatEvent).type ===\n    AwsResponseEventType.THREAD_METADATA_LOADED &&\n  (response as LoadThreadMetadataChatEvent).data.lastMessage !== undefined;\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { ThreadRecoveredPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/ThreadRecovered';\n\nimport { ChatEventData } from '../event/ChatEvent';\nimport { isUndefined } from '../utils/is';\n\nexport interface ThreadRecoveredChatEvent extends ChatEventData {\n  data: ThreadRecoveredPostbackData;\n}\n\nexport const isRecoverSuccessPayload = (\n  response: ChatEventData,\n): response is ThreadRecoveredChatEvent => {\n  const testResponseData = response.data as ThreadRecoveredPostbackData;\n\n  const hasPostbackData = isUndefined(testResponseData) === false;\n  const hasMessages = isUndefined(testResponseData?.messages) === false;\n  const isCorrectEventType =\n    response.type === AwsResponseEventType.THREAD_RECOVERED ||\n    response.type === AwsResponseEventType.LIVECHAT_RECOVERED;\n  const hasNoError = isUndefined(response.error);\n\n  return hasPostbackData && hasMessages && hasNoError && isCorrectEventType;\n};\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\n\nimport { ChatEventData } from '../event/ChatEvent';\n\nexport interface ThreadArchivedEvent extends ChatEventData {\n  type: AwsResponseEventType.THREAD_ARCHIVED;\n}\n\nexport function isThreadArchivedSuccessPayload(\n  response: ChatEventData,\n): response is ThreadArchivedEvent {\n  return (\n    (response as ThreadArchivedEvent).type ===\n    AwsResponseEventType.THREAD_ARCHIVED\n  );\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { RecoverThreadEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/RecoverThread';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createRecoverThreadPayloadData(\n  threadIdOnExternalPlatform?: ThreadIdOnExternalPlatform,\n): EventPayloadData<RecoverThreadEventData> {\n  const emptyData = {\n    eventType: AwsInputEventType.RECOVER_THREAD,\n    data: {},\n  };\n\n  if (threadIdOnExternalPlatform === undefined) {\n    return emptyData;\n  }\n\n  return {\n    ...emptyData,\n    data: {\n      thread: { idOnExternalPlatform: threadIdOnExternalPlatform },\n    },\n  };\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SenderTypingEndedEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SenderTypingEnded';\nimport { SenderTypingStartedEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SenderTypingStarted';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createStartTypingEventPayloadData(\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n): EventPayloadData<SenderTypingStartedEventData> {\n  return {\n    eventType: AwsInputEventType.SENDER_TYPING_STARTED,\n    data: {\n      thread: {\n        idOnExternalPlatform: threadIdOnExternalPlatform,\n      },\n    },\n  };\n}\n\nexport function createStopTypingEventPayloadData(\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n): EventPayloadData<SenderTypingEndedEventData> {\n  return {\n    eventType: AwsInputEventType.SENDER_TYPING_ENDED,\n    data: {\n      thread: {\n        idOnExternalPlatform: threadIdOnExternalPlatform,\n      },\n    },\n  };\n}\n","import { SendMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessage';\nimport { SendOutboundEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendOutbound';\nimport { ThreadRecoveredPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/ThreadRecovered';\nimport { ContactNumber } from '@brandembassy/ts-types-platform/dist/contact/ContactNumber';\nimport { CustomField } from '@brandembassy/ts-types-platform/dist/customField/CustomField';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { createAttachmentUploadMessageData } from '../attachment/sendAttachments';\nimport { UploadFailResponse } from '../attachment/uploadAttachment';\nimport { getAccessToken } from '../authorization/accessTokenStorage';\nimport { getBrowserFingerprint } from '../browserFingerprint/getBrowserFingerprint';\nimport { convertCustomFields } from '../customField/convertCustomField';\nimport { CustomFields } from '../customField/CustomFields';\nimport { mergeCustomFields } from '../customField/mergeCustomFields';\nimport { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\nimport { ChatSDKError } from '../error/ChatSDKError';\nimport { ChatEvent, ChatEventData, ChatEventType } from '../event/ChatEvent';\nimport { IChatEventTarget } from '../event/ChatEventTarget';\nimport {\n  EventListenerFunction,\n  RemoveListenerFunction,\n} from '../event/ListenerFunction';\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { createTextMessageData } from '../message/createTextMessageData';\nimport {\n  isLoadMoreMessagesEventData,\n  MoreMessagesLoadedEvent,\n} from '../message/loadMoreMessagesEventData';\nimport { createLoadMoreMessagesPayloadData } from '../message/loadMoreMessagesPayload';\nimport { MessageSuccessEventData } from '../message/MessageSuccessEventData';\nimport { sendMessage } from '../message/sendMessage';\nimport { createSendMessagePreviewPayloadData } from '../message/sendMessagePreviewPayload';\nimport { sendOutboundMessage } from '../message/sendOutboundMessage';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\nimport { generateId } from '../utils/generateId';\nimport { isEmpty, isUndefined } from '../utils/is';\n\nimport { createArchiveThreadEventPayloadData } from './archiveThread';\nimport {\n  isLoadMetadataSuccessPayload,\n  LoadThreadMetadataChatEvent,\n} from './isLoadMetadataSuccessPayload';\nimport { isRecoverSuccessPayload } from './isRecoverSuccessPayload';\nimport { isThreadArchivedSuccessPayload } from './isThreadArchivedSuccessPayload';\nimport { createLastMessageSeenPayloadData } from './lastMessageSeenPayload';\nimport { createLoadThreadMetadataEventPayloadData } from './metadata';\nimport { createRecoverThreadPayloadData } from './recoverThreadPayload';\nimport { SendMessageOptions } from './SendMessageOptions';\nimport { createSetThreadCustomFieldsPayloadData } from './setThreadCustomFieldsPayload';\nimport { filterCurrentThreadEventHandler } from './threadEventHandler';\nimport { createSendTranscriptPayloadData } from './transcript';\nimport {\n  createStartTypingEventPayloadData,\n  createStopTypingEventPayloadData,\n} from './typingEvents';\nimport {\n  createUpdateThreadPayloadData,\n  isUpdateThreadSuccess,\n} from './updateThread';\n\nexport class Thread {\n  public idOnExternalPlatform: ThreadIdOnExternalPlatform;\n\n  protected _websocketClient: WebSocketClient;\n  protected _exists: boolean = false;\n\n  protected _messageEmitter: IChatEventTarget;\n  protected _typingTimeoutID: ReturnType<typeof setTimeout> | undefined =\n    undefined;\n  protected _threadCustomFieldsQueue: CustomFields = {};\n  protected _isAuthorizationEnabled: boolean = false;\n\n  constructor(\n    idOnExternalPlatform: ThreadIdOnExternalPlatform,\n    websocketClient: WebSocketClient,\n    messageEmitter: IChatEventTarget,\n    isAuthorizationEnabled: boolean = false,\n  ) {\n    this.idOnExternalPlatform = idOnExternalPlatform;\n    this._websocketClient = websocketClient;\n    this._messageEmitter = messageEmitter;\n    this._isAuthorizationEnabled = isAuthorizationEnabled;\n\n    this._registerEventHandlers();\n  }\n\n  /**\n   *  Recover existing chat\n   */\n  public async recover(): Promise<ThreadRecoveredPostbackData> {\n    const response = await sendChatEvent(\n      createRecoverThreadPayloadData(this.idOnExternalPlatform),\n      this._websocketClient,\n    );\n\n    if (isRecoverSuccessPayload(response)) {\n      return response.data;\n    }\n\n    throw response;\n  }\n\n  /**\n   * Send message\n   * @param messageData - message data\n   */\n  public async sendMessage(\n    messageData: SendMessageEventData,\n  ): Promise<MessageSuccessEventData> {\n    const messageDataWithCustomFields =\n      this._mergeCustomFieldsAndAccessTokenWithMessageData(messageData);\n\n    const result = await sendMessage(\n      messageDataWithCustomFields,\n      this._websocketClient,\n    );\n    this._threadCustomFieldsQueue = {};\n\n    return result;\n  }\n\n  /**\n   * Send text message\n   * @param messageText - text of message\n   * @param options - options\n   */\n  public async sendTextMessage(\n    messageText: string,\n    options: SendMessageOptions = {},\n  ): Promise<MessageSuccessEventData> {\n    const {\n      messageId = generateId(),\n      browserFingerprint = getBrowserFingerprint(),\n      threadCustomFields: optionsThreadCustomFields = {},\n    } = options;\n\n    const convertedOptionsThreadCustomFields = convertCustomFields(\n      optionsThreadCustomFields,\n    );\n    const messageData = createTextMessageData(\n      messageText,\n      messageId,\n      this.idOnExternalPlatform,\n      convertedOptionsThreadCustomFields,\n      [],\n      browserFingerprint,\n    );\n\n    return this.sendMessage(messageData);\n  }\n\n  /**\n   * Send Outbound Message\n   * @param messageData - message data\n   */\n  public async sendOutboundMessage(\n    messageData: SendOutboundEventData,\n  ): Promise<MessageSuccessEventData> {\n    const outboundEventDataWithCustomFields =\n      this._mergeCustomFieldsAndAccessTokenWithMessageData(messageData);\n\n    return sendOutboundMessage(\n      outboundEventDataWithCustomFields,\n      this._websocketClient,\n    );\n  }\n\n  /**\n   * Load previous messages\n   * @returns previous messages\n   */\n  public async loadMoreMessages(): Promise<MoreMessagesLoadedEvent | null> {\n    const { scrollToken, oldestMessageDatetime } =\n      JSON.parse(SDKVariableStorage.get(ChatSDKVariable.THREAD_DATA, '{}')) ??\n      {};\n\n    if (isEmpty(scrollToken)) {\n      return null;\n    }\n\n    const loadMoreMessagesEventData = {\n      scrollToken,\n      oldestMessageDatetime,\n      thread: { idOnExternalPlatform: this.idOnExternalPlatform },\n    };\n\n    const response = await sendChatEvent(\n      createLoadMoreMessagesPayloadData(loadMoreMessagesEventData),\n      this._websocketClient,\n    );\n\n    if (isLoadMoreMessagesEventData(response)) {\n      return response;\n    }\n\n    throw response;\n  }\n\n  /**\n   * Mark all messages in the thread as seen\n   */\n  public async lastMessageSeen(): Promise<ChatEventData> {\n    const payloadData = createLastMessageSeenPayloadData(\n      this.idOnExternalPlatform,\n    );\n\n    return sendChatEvent(payloadData, this._websocketClient);\n  }\n\n  /**\n   * Send attachment\n   *\n   * Raw function to send attachments\n   * @param files - An object of this type is returned by the files' property of the HTML <input> element; this lets you access the list of files selected with the <input type=\"file\"> element.\n   * @param options - options\n   * @returns when upload failed UploadFailResponse contains allowed file size and file types\n   */\n  public async sendAttachments(\n    files: FileList,\n    options: SendMessageOptions = {},\n  ): Promise<MessageSuccessEventData | UploadFailResponse> {\n    if (isUndefined(files) || files.length === 0) {\n      throw new ChatSDKError(\n        'FileList must be provided to sendAttachment method',\n      );\n    }\n\n    const messageData = await createAttachmentUploadMessageData(\n      files,\n      this.idOnExternalPlatform,\n      options,\n    );\n\n    return this.sendMessage(messageData);\n  }\n\n  /**\n   * Send start and stop typing events. It sends stop typing event after the timeout. Repeated calls resets this timeout.\n   * @param timeout - The timeout in milliseconds.\n   */\n  public keystroke(timeout = 1000): void {\n    if (!this._typingTimeoutID) {\n      sendChatEvent(\n        createStartTypingEventPayloadData(this.idOnExternalPlatform),\n        this._websocketClient,\n      );\n    }\n\n    clearTimeout(this._typingTimeoutID);\n    this._typingTimeoutID = setTimeout(() => {\n      sendChatEvent(\n        createStopTypingEventPayloadData(this.idOnExternalPlatform),\n        this._websocketClient,\n      );\n      this._typingTimeoutID = undefined;\n    }, timeout);\n  }\n\n  /**\n   * Manually send the stop typing event and clear the keystroke timeout.\n   */\n  public stopTyping(): void {\n    clearTimeout(this._typingTimeoutID);\n    this._typingTimeoutID = undefined;\n    sendChatEvent(\n      createStopTypingEventPayloadData(this.idOnExternalPlatform),\n      this._websocketClient,\n    );\n  }\n\n  /**\n   * Get Thread Metadata\n   * @returns response otherwise throw an error response\n   */\n  public async getMetadata(): Promise<LoadThreadMetadataChatEvent> {\n    const response = await sendChatEvent(\n      createLoadThreadMetadataEventPayloadData(this.idOnExternalPlatform),\n      this._websocketClient,\n    );\n\n    if (isLoadMetadataSuccessPayload(response)) {\n      return response;\n    }\n\n    throw response;\n  }\n\n  public onThreadEvent(\n    type: ChatEventType,\n    handler: EventListenerFunction,\n  ): RemoveListenerFunction {\n    const filteredEventHandler = filterCurrentThreadEventHandler(\n      this.idOnExternalPlatform,\n      handler,\n    );\n\n    this._messageEmitter.addEventListener(type, filteredEventHandler);\n\n    return () => {\n      this._messageEmitter.removeEventListener(type, filteredEventHandler);\n    };\n  }\n\n  /**\n   * Set thread custom fields\n   * @param customFields - custom fields object\n   * @example \\{ indentName: 'value' \\}\n   */\n  public async setCustomFields(customFields: CustomFields): Promise<void> {\n    this._threadCustomFieldsQueue = {\n      ...this._threadCustomFieldsQueue,\n      ...customFields,\n    };\n\n    if (this._exists === false) {\n      // let customFields be sent by the first message\n      return;\n    }\n\n    const customFieldsData = createSetThreadCustomFieldsPayloadData(\n      this._threadCustomFieldsQueue,\n      this.idOnExternalPlatform,\n    );\n\n    await sendChatEvent(customFieldsData, this._websocketClient);\n    this._threadCustomFieldsQueue = {};\n  }\n\n  /**\n   * Set thread custom field\n   * @param name - custom field name\n   * @param value - custom field value\n   */\n  public setCustomField(\n    name: string,\n    value: CustomField['value'],\n  ): Promise<void> {\n    return this.setCustomFields({ [name]: value });\n  }\n\n  /**\n   * Set thread as archived\n   * @returns true if success otherwise throw error response\n   */\n  public async archive(): Promise<true> {\n    const response = await sendChatEvent(\n      createArchiveThreadEventPayloadData(this.idOnExternalPlatform),\n      this._websocketClient,\n    );\n\n    if (isThreadArchivedSuccessPayload(response)) {\n      return true;\n    }\n\n    throw response;\n  }\n\n  /**\n   * Set thread name\n   * @param name - New name of the Thread\n   * @returns if success returns true otherwise throw an error response\n   */\n  public async setName(name: string): Promise<true> {\n    const updateThreadData = createUpdateThreadPayloadData(\n      this.idOnExternalPlatform,\n      name,\n    );\n\n    const response = await sendChatEvent(\n      updateThreadData,\n      this._websocketClient,\n    );\n\n    if (isUpdateThreadSuccess(response)) {\n      return true;\n    }\n\n    throw response;\n  }\n\n  /**\n   * Send message preview\n   * @param text - text\n   */\n  public async sendMessagePreview(text: string): Promise<void> {\n    const payloadData = createSendMessagePreviewPayloadData(\n      this.idOnExternalPlatform,\n      text,\n    );\n\n    await sendChatEvent(payloadData, this._websocketClient);\n  }\n\n  /**\n   * Send conversation transcript to email\n   * @param email - email\n   */\n  public async sendTranscript(\n    contactNumber: ContactNumber,\n    email: string,\n  ): Promise<ChatEventData> {\n    const payloadData = createSendTranscriptPayloadData(contactNumber, email);\n\n    return sendChatEvent(payloadData, this._websocketClient);\n  }\n\n  private _mergeCustomFieldsAndAccessTokenWithMessageData<\n    T extends SendMessageEventData | SendOutboundEventData,\n  >(messageData: T): T {\n    const threadCustomFields = mergeCustomFields(\n      this._threadCustomFieldsQueue,\n      messageData.consumerContact.customFields ?? [],\n    );\n    const storedAccessToken =\n      (this._isAuthorizationEnabled && getAccessToken()) ?? false;\n    const accessToken =\n      storedAccessToken !== false\n        ? { accessToken: { token: storedAccessToken.token } }\n        : {};\n\n    return {\n      ...messageData,\n      ...accessToken,\n      consumerContact: {\n        customFields: threadCustomFields,\n      },\n    };\n  }\n\n  private _registerEventHandlers() {\n    this.onThreadEvent(ChatEvent.CASE_CREATED, () => (this._exists = true));\n    this.onThreadEvent(ChatEvent.CONTACT_CREATED, () => (this._exists = true));\n    this.onThreadEvent(ChatEvent.THREAD_RECOVERED, () => {\n      this._exists = true;\n    });\n  }\n}\n","import { SendMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessage';\n\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nimport {\n  isSendMessageSuccessEventData,\n  MessageSuccessEventData,\n} from './MessageSuccessEventData';\nimport { createSendMessagePayloadData } from './sendMessagePayload';\n\nexport const sendMessage = async (\n  messageData: SendMessageEventData,\n  websocketClient: WebSocketClient | null,\n): Promise<MessageSuccessEventData> => {\n  const sendMessagePayloadData = createSendMessagePayloadData(messageData);\n\n  const response = await sendChatEvent(sendMessagePayloadData, websocketClient);\n\n  if (isSendMessageSuccessEventData(response)) {\n    return response;\n  }\n\n  throw response;\n};\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SendMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessage';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport const createSendMessagePayloadData = (\n  eventData: SendMessageEventData,\n): EventPayloadData<SendMessageEventData> => ({\n  eventType: AwsInputEventType.SEND_MESSAGE,\n  data: eventData,\n});\n","import { SendMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessage';\nimport { BrowserFingerprint } from '@brandembassy/ts-types-chat/dist/user/BrowserFingerprint';\nimport { CustomField } from '@brandembassy/ts-types-platform/dist/customField/CustomField';\nimport { MessageId } from '@brandembassy/ts-types-platform/dist/message/MessageId';\nimport { MessageType } from '@brandembassy/ts-types-platform/dist/message/MessageType';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { getBrowserFingerprint } from '../browserFingerprint/getBrowserFingerprint';\n\nexport const createTextMessageData = (\n  messageText: string,\n  messageId: MessageId,\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n  threadCustomFields: Array<CustomField> = [],\n  customerCustomFields: Array<CustomField> = [],\n  browserFingerprint: BrowserFingerprint = getBrowserFingerprint(),\n): SendMessageEventData => ({\n  messageContent: {\n    payload: {\n      text: messageText,\n    },\n    type: MessageType.TEXT,\n  },\n  browserFingerprint,\n  idOnExternalPlatform: messageId,\n  thread: {\n    idOnExternalPlatform: threadIdOnExternalPlatform,\n  },\n  consumer: {\n    customFields: customerCustomFields,\n  },\n  consumerContact: {\n    customFields: threadCustomFields,\n  },\n  attachments: [],\n});\n","import { SendOutboundEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendOutbound';\n\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nimport {\n  isSendMessageSuccessEventData,\n  MessageSuccessEventData,\n} from './MessageSuccessEventData';\nimport { createSendOutboundMessagePayloadData } from './sendOutboundMessagePayload';\n\nexport const sendOutboundMessage = async (\n  messageData: SendOutboundEventData,\n  websocketClient: WebSocketClient | null,\n): Promise<MessageSuccessEventData> => {\n  const sendOutboundMessagePayloadData =\n    createSendOutboundMessagePayloadData(messageData);\n\n  const response = await sendChatEvent(\n    sendOutboundMessagePayloadData,\n    websocketClient,\n  );\n\n  if (isSendMessageSuccessEventData(response)) {\n    return response;\n  }\n\n  throw response;\n};\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SendOutboundEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendOutbound';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport const createSendOutboundMessagePayloadData = (\n  eventData: SendOutboundEventData,\n): EventPayloadData<SendOutboundEventData> => ({\n  eventType: AwsInputEventType.SEND_OUTBOUND,\n  data: eventData,\n});\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { MessageSeenByConsumerEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/MessageSeenByConsumer';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createLastMessageSeenPayloadData(\n  threadIdOnExternalPlatform: string,\n): EventPayloadData<MessageSeenByConsumerEventData> {\n  return {\n    eventType: AwsInputEventType.MESSAGE_SEEN,\n    data: {\n      thread: { idOnExternalPlatform: threadIdOnExternalPlatform },\n    },\n  };\n}\n","import { ArchiveThreadEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/ArchiveThread';\nimport { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createLoadThreadMetadataEventPayloadData(\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n): EventPayloadData<ArchiveThreadEventData> {\n  return {\n    eventType: AwsInputEventType.LOAD_THREAD_METADATA,\n    data: {\n      thread: {\n        idOnExternalPlatform: threadIdOnExternalPlatform,\n      },\n    },\n  };\n}\n","import { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { ChatCustomEvent } from '../event/ChatEvent';\nimport { EventListenerFunction } from '../event/ListenerFunction';\n\ninterface DataWithThread {\n  case?: {\n    threadIdOnExternalPlatform?: ThreadIdOnExternalPlatform;\n  };\n  message?: {\n    threadIdOnExternalPlatform?: ThreadIdOnExternalPlatform;\n  };\n  messagePreview?: {\n    threadIdOnExternalPlatform?: ThreadIdOnExternalPlatform;\n  };\n  thread?: {\n    idOnExternalPlatform?: ThreadIdOnExternalPlatform;\n  };\n}\n\nconst getThreadId = (data: unknown): ThreadIdOnExternalPlatform | undefined => {\n  const dataWithThread = data as DataWithThread;\n\n  return (\n    dataWithThread?.thread?.idOnExternalPlatform ??\n    dataWithThread?.case?.threadIdOnExternalPlatform ??\n    dataWithThread?.message?.threadIdOnExternalPlatform ??\n    dataWithThread?.messagePreview?.threadIdOnExternalPlatform\n  );\n};\n\nexport const filterCurrentThreadEventHandler =\n  (threadId: ThreadIdOnExternalPlatform, handler: EventListenerFunction) =>\n  (event: ChatCustomEvent): void => {\n    const eventData = event.detail.data;\n\n    const eventThreadId = getThreadId(eventData);\n\n    if (eventThreadId === threadId) {\n      handler(event);\n    }\n  };\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SetConsumerContactCustomFieldsEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SetConsumerContactCustomFields';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { convertCustomFields } from '../customField/convertCustomField';\nimport { CustomFields } from '../customField/CustomFields';\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createSetThreadCustomFieldsPayloadData(\n  customFields: CustomFields,\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n): EventPayloadData<SetConsumerContactCustomFieldsEventData> {\n  return {\n    eventType: AwsInputEventType.SET_CONSUMER_CONTACT_CUSTOM_FIELD,\n    data: {\n      customFields: convertCustomFields(customFields),\n      thread: {\n        idOnExternalPlatform: threadIdOnExternalPlatform,\n      },\n    },\n  };\n}\n","import { ArchiveThreadEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/ArchiveThread';\nimport { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createArchiveThreadEventPayloadData(\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n): EventPayloadData<ArchiveThreadEventData> {\n  return {\n    eventType: AwsInputEventType.ARCHIVE_THREAD,\n    data: {\n      thread: {\n        idOnExternalPlatform: threadIdOnExternalPlatform,\n      },\n    },\n  };\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { UpdateThreadEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/UpdateThread';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { ChatEventData } from '../event/ChatEvent';\nimport { EventPayloadData } from '../sockets/EventPayload';\nimport { isUndefined } from '../utils/is';\n\nexport function createUpdateThreadPayloadData(\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n  threadName: string,\n): EventPayloadData<UpdateThreadEventData> {\n  return {\n    eventType: AwsInputEventType.UPDATE_THREAD,\n    data: {\n      thread: {\n        idOnExternalPlatform: threadIdOnExternalPlatform,\n        threadName,\n      },\n    },\n  };\n}\n\nexport function isUpdateThreadSuccess(response: ChatEventData): boolean {\n  return isUndefined(response.error);\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SendMessagePreviewEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessagePreview';\nimport { MessageType } from '@brandembassy/ts-types-platform/dist/message/MessageType';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport const createSendMessagePreviewPayloadData = (\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n  text: string,\n): EventPayloadData<SendMessagePreviewEventData> => ({\n  eventType: AwsInputEventType.SEND_MESSAGE_PREVIEW,\n  data: {\n    thread: {\n      idOnExternalPlatform: threadIdOnExternalPlatform,\n    },\n    messageContent: {\n      payload: { text },\n      type: MessageType.TEXT,\n    },\n  },\n});\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { AwsInputEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsInputEvent';\nimport { ContactNumber } from '@brandembassy/ts-types-platform/dist/contact/ContactNumber';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport const createSendTranscriptPayloadData = (\n  contactNumber: ContactNumber,\n  email: string,\n): EventPayloadData<AwsInputEventData> => ({\n  eventType: AwsInputEventType.SEND_TRANSCRIPT,\n  data: {\n    consumerContact: {\n      id: contactNumber,\n    },\n    consumerRecipients: [\n      {\n        idOnExternalPlatform: email,\n      },\n    ],\n  },\n});\n","import { CustomField } from '@brandembassy/ts-types-platform/dist/customField/CustomField';\n\nimport { uniqBy } from '../utils/uniq';\n\nimport { convertCustomFields } from './convertCustomField';\nimport { CustomFields } from './CustomFields';\n\nexport const mergeCustomFields = (\n  customFieldsQueue: CustomFields,\n  dataCustomFields: Array<CustomField>,\n): Array<CustomField> => {\n  const convertedQueue = convertCustomFields(customFieldsQueue);\n\n  return uniqBy([...dataCustomFields, ...convertedQueue], 'ident');\n};\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { RecoverThreadEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/RecoverThread';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../../sockets/EventPayload';\n\nexport function createRecoverLivechatThreadPayloadData(\n  threadIdOnExternalPlatform?: ThreadIdOnExternalPlatform,\n): EventPayloadData<RecoverThreadEventData> {\n  const emptyData = {\n    eventType: AwsInputEventType.RECOVER_LIVECHAT,\n    data: {},\n  };\n\n  if (threadIdOnExternalPlatform === undefined) {\n    return emptyData;\n  }\n\n  return {\n    ...emptyData,\n    data: {\n      thread: { idOnExternalPlatform: threadIdOnExternalPlatform },\n    },\n  };\n}\n","import { SendMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessage';\nimport { ThreadRecoveredPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/ThreadRecovered';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { ChatSDKVariable } from '../../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../../env/getEnvVariable';\nimport { ChatSDKError } from '../../error/ChatSDKError';\nimport { ChatCustomEvent, ChatEvent } from '../../event/ChatEvent';\nimport { IChatEventTarget } from '../../event/ChatEventTarget';\nimport { sendChatEvent } from '../../event/sendChatEvent';\nimport { MessageSuccessEventData } from '../../message/MessageSuccessEventData';\nimport { WebSocketClient } from '../../sockets/WebSocketClient';\nimport { isUndefined } from '../../utils/is';\nimport { isRecoverSuccessPayload } from '../isRecoverSuccessPayload';\nimport { Thread } from '../Thread';\n\nimport { createEndThreadPayloadData } from './createEndThreadPayloadData';\nimport { createRecoverLivechatThreadPayloadData } from './recoverLivechatThreadPayload';\n\nexport class LivechatThread extends Thread {\n  protected _isInitialized: boolean = false;\n  protected _canSendMessage: boolean = true;\n  constructor(\n    idOnExternalPlatform: ThreadIdOnExternalPlatform,\n    websocketClient: WebSocketClient,\n    messageEmitter: IChatEventTarget,\n    isAuthorizationEnabled: boolean = false,\n  ) {\n    super(\n      idOnExternalPlatform,\n      websocketClient,\n      messageEmitter,\n      isAuthorizationEnabled,\n    );\n\n    this._registerLivechatEventHandlers();\n  }\n  /**\n   *  Recover existing live chat\n   */\n  public override async recover(): Promise<ThreadRecoveredPostbackData> {\n    const response = await sendChatEvent(\n      createRecoverLivechatThreadPayloadData(this.idOnExternalPlatform),\n      this._websocketClient,\n    );\n\n    if (isRecoverSuccessPayload(response)) {\n      return response.data;\n    }\n\n    throw response;\n  }\n\n  public override async sendMessage(\n    messageData: SendMessageEventData,\n  ): Promise<MessageSuccessEventData> {\n    if (this._canSendMessage === false) {\n      throw new ChatSDKError('Cannot send more messages to Contact');\n    }\n\n    return super.sendMessage(messageData);\n  }\n\n  /**\n   * Start livechat\n   * @param initialMessageText - initial message text\n   */\n  public async startChat(\n    initialMessageText = 'Begin conversation',\n  ): Promise<MessageSuccessEventData | void> {\n    if (this._isInitialized) {\n      throw new ChatSDKError('Chat is already initialized');\n    }\n\n    try {\n      const result = await this.sendTextMessage(initialMessageText);\n      this._isInitialized = true;\n\n      return result;\n    } catch (error: unknown) {\n      if (error instanceof Error) {\n        throw new ChatSDKError(\n          `Sending initial message failed because of (${error.message})`,\n        );\n      }\n\n      return;\n    }\n  }\n\n  public async endChat(): Promise<void> {\n    const threadDataRaw = SDKVariableStorage.get(\n      ChatSDKVariable.THREAD_DATA,\n      '{}',\n    );\n    const threadData = JSON.parse(threadDataRaw);\n    const contactId = threadData?.contactId;\n\n    if (isUndefined(contactId)) {\n      throw new ChatSDKError(\n        'Cannot end Chat because of missing ContactId in the storage',\n      );\n    }\n\n    await sendChatEvent(\n      createEndThreadPayloadData(this.idOnExternalPlatform, contactId),\n      this._websocketClient,\n    );\n\n    return;\n  }\n\n  private _registerLivechatEventHandlers() {\n    this.onThreadEvent(\n      ChatEvent.LIVECHAT_RECOVERED,\n      (event: ChatCustomEvent) => {\n        if (!isRecoverSuccessPayload(event.detail)) {\n          return;\n        }\n\n        this._exists = true;\n      },\n    );\n  }\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { EndContactEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/EndContact';\nimport { CaseId } from '@brandembassy/ts-types-platform/dist/post/case/CaseId';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../../sockets/EventPayload';\n\nexport function createEndThreadPayloadData(\n  threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n  contactId: CaseId,\n): EventPayloadData<EndContactEventData> {\n  return {\n    eventType: AwsInputEventType.END_CONTACT,\n    data: {\n      thread: { idOnExternalPlatform: threadIdOnExternalPlatform },\n      contact: { id: contactId },\n    },\n  };\n}\n","import { ThreadListFetchedPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/ThreadListFetched';\n\nexport const isThreadListFetchedPostbackData = (\n  data: unknown,\n): data is ThreadListFetchedPostbackData =>\n  'threads' in (data as ThreadListFetchedPostbackData);\n","import { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nimport { ContactCreatedChatEvent } from './contactCreated';\n\nexport function isContactCreatedEvent(\n  event: ChatEventData,\n): event is ContactCreatedChatEvent {\n  return (\n    event.type === ChatEvent.CONTACT_CREATED &&\n    (event as ContactCreatedChatEvent).data?.case?.id !== undefined\n  );\n}\n","import { CaseId } from '@brandembassy/ts-types-platform/dist/post/case/CaseId';\n\nimport { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\n\nexport function storeContactId(contactId: CaseId): void {\n  const originalThreadDataRaw = SDKVariableStorage.get(\n    ChatSDKVariable.THREAD_DATA,\n    '{}',\n  );\n  const originalThreadData = JSON.parse(originalThreadDataRaw) || {};\n\n  SDKVariableStorage.set(\n    ChatSDKVariable.THREAD_DATA,\n    JSON.stringify({\n      ...originalThreadData,\n      contactId,\n    }),\n  );\n}\n","import { ContactNumber } from '@brandembassy/ts-types-platform/dist/contact/ContactNumber';\n\nimport { isContactCreatedEvent } from '../contact/isContactCreatedEvent';\nimport { ChatEventData } from '../event/ChatEvent';\n\nimport { isRecoverSuccessPayload } from './isRecoverSuccessPayload';\nimport { storeContactId } from './storeContactId';\n\nexport function storeContactIdMiddleware(\n  eventData: ChatEventData,\n): ChatEventData {\n  if (isContactCreatedEvent(eventData)) {\n    const contactId = eventData.data.case.id;\n\n    storeContactId(contactId);\n  }\n\n  if (isRecoverSuccessPayload(eventData)) {\n    const contactId = (eventData.data.consumerContact?.caseId ??\n      eventData.data.contact?.id) as ContactNumber;\n\n    storeContactId(contactId);\n  }\n\n  return eventData;\n}\n","import { ChatSDKVariable } from '../env/ChatSDKVariable';\nimport { SDKVariableStorage } from '../env/getEnvVariable';\nimport { Message } from '../message';\nimport { isUndefined } from '../utils/is';\nimport { lastItemInArray } from '../utils/last';\n\nexport interface ScrollData {\n  messages: Array<Message>;\n  scrollToken: string;\n}\n\nexport function storeThreadScrollData(scrollData: ScrollData): void {\n  const oldestMessageDatetime = lastItemInArray(scrollData.messages)?.createdAt;\n\n  const oldThreadDataRaw = SDKVariableStorage.get(\n    ChatSDKVariable.THREAD_DATA,\n    '{}',\n  );\n  const oldThreadData = JSON.parse(oldThreadDataRaw) || {};\n\n  SDKVariableStorage.set(\n    ChatSDKVariable.THREAD_DATA,\n    JSON.stringify({\n      ...oldThreadData,\n      scrollToken: scrollData.scrollToken,\n      oldestMessageDatetime: isUndefined(oldestMessageDatetime)\n        ? ''\n        : oldestMessageDatetime,\n    }),\n  );\n}\n","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n","import { ChatEventData } from '../event/ChatEvent';\nimport { isLoadMoreMessagesEventData } from '../message/loadMoreMessagesEventData';\n\nimport { isRecoverSuccessPayload } from './isRecoverSuccessPayload';\nimport { storeThreadScrollData } from './storeThreadScrollData';\n\nexport function storeThreadScrollDataMiddleware(\n  eventData: ChatEventData,\n): ChatEventData {\n  if (isRecoverSuccessPayload(eventData)) {\n    const { messages, messagesScrollToken } = eventData.data;\n\n    storeThreadScrollData({\n      messages,\n      scrollToken: messagesScrollToken,\n    });\n  }\n\n  if (isLoadMoreMessagesEventData(eventData)) {\n    const { scrollToken, messages } = eventData.data;\n\n    storeThreadScrollData({ scrollToken, messages });\n  }\n\n  return eventData;\n}\n","export class AbortError extends Error {\n  constructor(message: string = 'Aborted') {\n    super(message);\n    this.name = 'AbortError';\n  }\n}\n","import { AbortError } from '../error/AbortError';\n\nexport interface Abortable {\n  abort: (reason?: string) => void;\n  readonly abortReason?: string;\n}\n\ntype ExecutorFunction<T> = (\n  resolve: (value: PromiseLike<T> | T) => void,\n  reject: (reason?: unknown) => void,\n) => void;\n\ntype AbortableExecutorFunction<T> = (\n  resolve: (value: PromiseLike<T> | T) => void,\n  reject: (reason?: unknown) => void,\n  abortSignal: AbortSignal,\n) => void;\n\n/**\n * AbortablePromise is a Promise that can be aborted.\n * Source: https://github.com/zzdjk6/simple-abortable-promise, MIT License\n */\nexport class AbortablePromise<T> extends Promise<T> implements Abortable {\n  public abort: Abortable['abort'];\n\n  constructor(executor: AbortableExecutorFunction<T>) {\n    const abortController = new AbortController();\n    const abortSignal = abortController.signal;\n\n    const normalExecutor: ExecutorFunction<T> = (resolve, reject) => {\n      abortSignal.addEventListener('abort', () => {\n        reject(new AbortError(this.abortReason));\n      });\n\n      executor?.(resolve, reject, abortSignal);\n    };\n\n    super(normalExecutor);\n    this.abort = (reason) => {\n      this._abortReason = reason ?? 'Aborted';\n      abortController.abort();\n    };\n  }\n\n  private _abortReason?: string;\n\n  public get abortReason(): string | undefined {\n    return this._abortReason;\n  }\n\n  static from = <P>(promise: Promise<P>): AbortablePromise<P> => {\n    // If promise is already an AbortablePromise, return it directly\n    if (promise instanceof AbortablePromise) {\n      return promise;\n    }\n\n    return new AbortablePromise<P>((resolve, reject) => {\n      promise.then(resolve).catch(reject);\n    });\n  };\n}\n","import { WebSocketClientEvent } from '@brandembassy/push-updates-sdk';\nimport { AuthorizationToken } from '@brandembassy/ts-types-chat/dist/authorization/AuthorizationToken';\nimport { ConsumerAuthorizationSuccessPayloadData } from '@brandembassy/ts-types-chat/dist/authorization/ConsumerAuthorizationSuccessPayloadData';\nimport { AwsChatWindowEventActionRoute } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsChatWindowEvent';\nimport { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';\nimport { ChannelId } from '@brandembassy/ts-types-platform/dist/channel/ChannelId';\nimport { CustomerIdentityIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/endUser/EndUserIdentityId';\nimport { Thread as ThreadView } from '@brandembassy/ts-types-platform/dist/thread/Thread';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport {\n  getAccessToken,\n  setAccessToken,\n} from './authorization/accessTokenStorage';\nimport { createAuthorizationPayloadData } from './authorization/authorizationPayloadData';\nimport { authorizationReconnect } from './authorization/authorizationReconnect';\nimport { createRefreshTokenPayload } from './authorization/createRefreshTokenPayload';\nimport { CustomerReconnectSuccessPayloadData } from './authorization/CustomerReconnectSuccessPayloadData';\nimport { createGenerateAuthorizationTokenPayloadData } from './authorization/generateAuthorizationTokenPayload';\nimport { handleRefreshToken } from './authorization/handleRefreshToken';\nimport { isAuthorizationTokenGeneratedPostbackData } from './authorization/isAuthorizationTokenGeneratedPostbackData';\nimport { isAuthSuccessEvent } from './authorization/isAuthSuccessEvent';\nimport { isTokenRefreshedSuccessResponse } from './authorization/isTokenRefreshedSuccessResponse';\nimport { ChatSDKOptions } from './ChatSDKOptions';\nimport { Customer } from './customer/customer';\nimport { isCustomerIdentityIdValid } from './customer/isCustomerIdentityIdValid';\nimport { APP_NAME } from './env/appName';\nimport { ChatSDKVariable } from './env/ChatSDKVariable';\nimport { EnvironmentName, getEnvironmentEndpoints } from './env/Environments';\nimport { SDKVariableStorage } from './env/getEnvVariable';\nimport { ChatSDKError } from './error/ChatSDKError';\nimport { ChatCustomEvent, ChatEventType } from './event/ChatEvent';\nimport { ChatEventMiddleware } from './event/ChatEventMiddleware';\nimport { ChatEventTarget, IChatEventTarget } from './event/ChatEventTarget';\nimport { RemoveListenerFunction } from './event/ListenerFunction';\nimport { chatEventMapper } from './event/middleware/ChatEventMapper';\nimport { sendChatEvent } from './event/sendChatEvent';\nimport { MessageSuccessEventData } from './message/MessageSuccessEventData';\nimport {\n  OfflineMessageData,\n  sendOfflineMessage,\n} from './message/sendOfflineMessage';\nimport { makeRequest } from './request/makeRequest';\nimport {\n  onMessageHandler,\n  parseWsMessageEvent,\n} from './request/messageHandler';\nimport { createEvent, createEventPayload } from './sockets/EventPayload';\nimport {\n  WebSocketClient,\n  WebSocketClientOptions,\n} from './sockets/WebSocketClient';\nimport { LivechatThread, Thread } from './thread';\nimport {\n  isRecoverSuccessPayload,\n  ThreadRecoveredChatEvent,\n} from './thread/isRecoverSuccessPayload';\nimport { isThreadListFetchedPostbackData } from './thread/isThreadListFetchedPostbackData';\nimport { createRecoverLivechatThreadPayloadData } from './thread/livechatThread/recoverLivechatThreadPayload';\nimport { createRecoverThreadPayloadData } from './thread/recoverThreadPayload';\nimport { storeContactIdMiddleware } from './thread/storeContactIdMiddleware';\nimport { storeThreadScrollDataMiddleware } from './thread/storeThreadScrollDataMiddleware';\nimport { AbortablePromise } from './utils/AbortablePromise';\nimport { assertNonNullable } from './utils/assert';\nimport { generateId } from './utils/generateId';\nimport { getBrandIdAndChannelId } from './utils/getBrandIdAndChannelId';\nimport { isEmpty, isNil, isNull, isUndefined } from './utils/is';\n\nexport class ChatSdk {\n  onError?: (error: Error) => void;\n  onRawEvent?: (event: ChatCustomEvent) => void;\n  public isLivechat: boolean = false;\n  public channelId: ChannelId = '';\n  private websocketClient: WebSocketClient | null = null;\n  private customer: Customer | null = null;\n  private _incomingChatEventMiddleware = new ChatEventMiddleware();\n  private _messageEmitter: IChatEventTarget;\n  private isAuthorizationEnabled: boolean = false;\n  private _threadCache: Map<\n    ThreadIdOnExternalPlatform,\n    Thread | LivechatThread\n  > = new Map();\n\n  constructor(options: ChatSDKOptions) {\n    if (options === undefined) {\n      throw new Error('No options was provided for initialization of ChatSdk');\n    }\n\n    SDKVariableStorage.set(\n      ChatSDKVariable.AUTHORIZATION_CODE,\n      options.authorizationCode,\n    );\n    SDKVariableStorage.set(ChatSDKVariable.BRAND_ID, `${options.brandId}`);\n    SDKVariableStorage.set(ChatSDKVariable.CHANNEL_ID, options.channelId);\n    SDKVariableStorage.set(\n      ChatSDKVariable.APP_NAME,\n      options.appName ?? APP_NAME,\n    );\n    SDKVariableStorage.set(\n      ChatSDKVariable.APP_VERSION,\n      `${options.appVersion ?? 0}`,\n    );\n\n    const { brandId, channelId } = getBrandIdAndChannelId();\n\n    this.onError = options.onError;\n    this.onRawEvent = options.onRawEvent;\n\n    // Register middleware for incoming chat events\n    this._incomingChatEventMiddleware.register(chatEventMapper);\n    this._incomingChatEventMiddleware.register(storeThreadScrollDataMiddleware);\n    this._incomingChatEventMiddleware.register(storeContactIdMiddleware);\n\n    this._messageEmitter = new ChatEventTarget();\n\n    try {\n      if (isNaN(brandId)) {\n        throw new Error('Missing BrandID');\n      }\n      if (channelId === undefined) {\n        throw new Error('Missing ChannelId');\n      }\n      if (options.customerId === undefined) {\n        throw new Error('Missing CustomerId');\n      }\n\n      this._initEnvironment(options);\n      this._initWS(brandId, channelId, options.customerId);\n      // Init Customer instance after the websocketClient is initialized\n      this.customer = new Customer(\n        options.customerId,\n        options.customerName,\n        options.customerImage,\n        this.websocketClient,\n      );\n      this.channelId = channelId;\n    } catch (error: unknown) {\n      this.onErrorHandler(error);\n    }\n  }\n\n  onErrorHandler(error: unknown): void {\n    if (typeof this.onError === 'function') {\n      this.onError(new ChatSDKError(error));\n    } else {\n      throw new ChatSDKError(error);\n    }\n  }\n\n  /**\n   * Send Authorization Event\n   * @param authorizationCode - authorization code\n   * @param visitorId - visitor id\n   */\n  public async authorize(\n    authorizationCode?: string,\n    visitorId?: string,\n  ): Promise<\n    | ConsumerAuthorizationSuccessPayloadData\n    | CustomerReconnectSuccessPayloadData\n  > {\n    const accessToken = getAccessToken();\n\n    if (accessToken !== null) {\n      try {\n        const reconnectResponse = await authorizationReconnect(\n          this.websocketClient,\n          this._sendRefreshTokenEvent,\n          accessToken,\n          visitorId,\n        );\n\n        return reconnectResponse;\n      } catch (error) {\n        // invalid token, continue with authorization\n      }\n    }\n\n    const authorizationPayloadData = createAuthorizationPayloadData(\n      authorizationCode ??\n        SDKVariableStorage.get(ChatSDKVariable.AUTHORIZATION_CODE, null),\n      visitorId,\n    );\n\n    const event = createEvent(\n      createEventPayload(authorizationPayloadData),\n      generateId(),\n      AwsChatWindowEventActionRoute.REGISTER,\n    );\n\n    const response = await makeRequest(event, this.websocketClient);\n    if (!isAuthSuccessEvent(response)) {\n      this.websocketClient?.disconnect();\n      throw response;\n    }\n\n    const customerId = response.data.consumerIdentity?.idOnExternalPlatform;\n    if (!isCustomerIdentityIdValid(customerId)) {\n      this.websocketClient?.disconnect();\n      throw new ChatSDKError('Invalid customer identity');\n    }\n\n    Customer.setId(customerId);\n\n    this.isLivechat = response.data?.channel?.settings?.isLivechat ?? false;\n    this.isAuthorizationEnabled =\n      response.data.channel?.settings.isAuthorizationEnabled ?? false;\n\n    if (response.data.accessToken?.token !== undefined) {\n      setAccessToken(response.data.accessToken);\n\n      if (\n        response.data?.consumerIdentity?.firstName !== undefined ||\n        response.data?.consumerIdentity?.lastName !== undefined\n      ) {\n        this.customer?.setName(\n          `${response.data.consumerIdentity.firstName} ${response.data.consumerIdentity.lastName}`,\n        );\n      }\n\n      const customerImage = response.data.consumerIdentity?.image;\n      if (customerImage !== undefined) {\n        this.customer?.setImage(customerImage);\n      }\n\n      handleRefreshToken(\n        response.data.accessToken,\n        this._sendRefreshTokenEvent,\n      );\n    }\n\n    return response.data;\n  }\n\n  /**\n   * Generate Authorization Token from the given url\n   *\n   * @param threadIdOnExternalPlatform - Thread Id\n   * @param url - Authorization Service URL\n   */\n  public async generateAuthorizationToken(\n    threadIdOnExternalPlatform: ThreadIdOnExternalPlatform,\n    url: string,\n  ): Promise<AuthorizationToken> {\n    const result = await sendChatEvent(\n      createGenerateAuthorizationTokenPayloadData(\n        threadIdOnExternalPlatform,\n        url,\n      ),\n      this.websocketClient,\n    );\n\n    if (!isAuthorizationTokenGeneratedPostbackData(result.data)) {\n      throw new ChatSDKError(\n        'Invalid response from generate authorization token (generateAuthorizationToken)',\n      );\n    }\n\n    const { authorizationToken } = result.data;\n\n    return authorizationToken;\n  }\n\n  /**\n   * Register handler to chat event\n   *\n   * @param type - type of chat event\n   * @param handler - event handler\n   * @returns function to unregister handler\n   */\n  public onChatEvent(\n    type: ChatEventType,\n    handler: (event: ChatCustomEvent) => void,\n  ): RemoveListenerFunction {\n    this._messageEmitter.addEventListener(type, handler);\n\n    return () => {\n      this._messageEmitter.removeEventListener(type, handler);\n    };\n  }\n\n  /**\n   * Get Customer instance\n   */\n  public getCustomer(): Customer | null {\n    return this.customer;\n  }\n\n  /**\n   * Get Thread instance by id\n   * @param id - thread id\n   * @returns instance of thread based on channel settings\n   */\n  public getThread(id: ThreadIdOnExternalPlatform): Thread | LivechatThread {\n    if (isNull(this.websocketClient)) {\n      throw new ChatSDKError(\n        'Cannot get thread because websocket is disconnected',\n      );\n    }\n\n    if (isNil(id)) {\n      throw new ChatSDKError('Cannot get thread because id is undefined');\n    }\n\n    const cachedThread = this._threadCache.get(id);\n    if (!isUndefined(cachedThread)) {\n      return cachedThread;\n    }\n\n    if (this.isLivechat) {\n      const liveThread = new LivechatThread(\n        id,\n        this.websocketClient,\n        this._messageEmitter,\n        this.isAuthorizationEnabled,\n      );\n      this._threadCache.set(id, liveThread);\n\n      return liveThread;\n    }\n\n    const thread = new Thread(\n      id,\n      this.websocketClient,\n      this._messageEmitter,\n      this.isAuthorizationEnabled,\n    );\n    this._threadCache.set(id, thread);\n\n    return thread;\n  }\n\n  /**\n   * Get list of available threads\n   * @returns list of threads\n   */\n  public async getThreadList(): Promise<Array<ThreadView> | null> {\n    if (isNull(this.websocketClient)) {\n      throw new ChatSDKError(\n        'Cannot get thread list because websocket is disconnected',\n      );\n    }\n\n    const eventPayload = {\n      eventType: AwsInputEventType.FETCH_THREAD_LIST,\n      data: {},\n    };\n\n    const result = await sendChatEvent(eventPayload, this.websocketClient);\n\n    if (!isThreadListFetchedPostbackData(result.data)) {\n      throw new ChatSDKError(\n        'Invalid response from fetch thread list (getThreadList)',\n      );\n    }\n\n    return result.data.threads;\n  }\n\n  /**\n   * Get access to a websocket connection\n   * @returns WebSocketClient instance\n   */\n  public getWebsocketClient(): WebSocketClient | null {\n    return this.websocketClient;\n  }\n\n  /**\n   * Send the Offline Message\n   * @param offlineMessageData - offline message data (name, email, message)\n   * @returns success\n   */\n  public async sendOfflineMessage(\n    offlineMessageData: OfflineMessageData,\n  ): Promise<MessageSuccessEventData> {\n    return sendOfflineMessage(offlineMessageData, this.websocketClient);\n  }\n\n  private _sendRefreshTokenEvent = async (): Promise<void> => {\n    const accessToken = getAccessToken();\n    if (isNull(accessToken)) {\n      return;\n    }\n\n    const refreshTokenResponse = await sendChatEvent(\n      createRefreshTokenPayload(accessToken.token),\n      this.websocketClient,\n    );\n\n    if (isTokenRefreshedSuccessResponse(refreshTokenResponse)) {\n      setAccessToken(refreshTokenResponse.data.accessToken);\n\n      handleRefreshToken(\n        refreshTokenResponse.data.accessToken,\n        this._sendRefreshTokenEvent,\n      );\n\n      return;\n    }\n\n    throw refreshTokenResponse;\n  };\n\n  /**\n   * Recover thread data\n   * @param threadIdOnExternalPlatform - thread id on external platform\n   * @returns thread session data\n   */\n  public recoverThreadData(\n    threadIdOnExternalPlatform:\n      | ThreadIdOnExternalPlatform\n      | undefined = undefined,\n  ): AbortablePromise<ThreadRecoveredChatEvent> {\n    return new AbortablePromise(async (resolve, reject) => {\n      const recoverEvent = createRecoverThreadPayloadData(\n        threadIdOnExternalPlatform,\n      );\n      const recoverResponse = await sendChatEvent(\n        recoverEvent,\n        this.websocketClient,\n      );\n\n      if (isRecoverSuccessPayload(recoverResponse)) {\n        resolve(recoverResponse);\n      } else {\n        reject(\n          new ChatSDKError('Invalid response from recover livechat thread'),\n        );\n      }\n    });\n  }\n\n  /**\n   * Recover livechat thread data\n   * @param threadIdOnExternalPlatform - thread id on external platform\n   * @returns thread livechat session data\n   */\n  public recoverLivechatThreadData(\n    threadIdOnExternalPlatform:\n      | ThreadIdOnExternalPlatform\n      | undefined = undefined,\n  ): AbortablePromise<ThreadRecoveredChatEvent> {\n    return new AbortablePromise(async (resolve, reject) => {\n      const recoverEvent = createRecoverLivechatThreadPayloadData(\n        threadIdOnExternalPlatform,\n      );\n      const recoverResponse = await sendChatEvent(\n        recoverEvent,\n        this.websocketClient,\n      );\n\n      if (isRecoverSuccessPayload(recoverResponse)) {\n        resolve(recoverResponse);\n      } else {\n        reject(\n          new ChatSDKError('Invalid response from recover livechat thread'),\n        );\n      }\n    });\n  }\n\n  /**\n   * Setup Environment endpoints\n   */\n  private _initEnvironment(options: ChatSDKOptions): void {\n    // Set custom environment\n    if (options.environment === EnvironmentName.custom) {\n      if (isEmpty(options.customEnvironment)) {\n        throw new Error(\n          'customEnvironment must be provided when environment is set to \"custom\"',\n        );\n      }\n      SDKVariableStorage.set(\n        ChatSDKVariable.ENDPOINT_GATEWAY,\n        options.customEnvironment?.gateway,\n      );\n      SDKVariableStorage.set(\n        ChatSDKVariable.ENDPOINT_CHAT,\n        options.customEnvironment?.chat,\n      );\n\n      return;\n    }\n\n    // Set predefined environment\n    const { gateway, chat } = getEnvironmentEndpoints(options.environment);\n    SDKVariableStorage.set(ChatSDKVariable.ENDPOINT_GATEWAY, gateway);\n    SDKVariableStorage.set(ChatSDKVariable.ENDPOINT_CHAT, chat);\n  }\n\n  private _initWS(\n    brandId: BrandId,\n    channelId: ChannelId,\n    customerId: CustomerIdentityIdOnExternalPlatform,\n  ): void {\n    const endpoint = SDKVariableStorage.get(ChatSDKVariable.ENDPOINT_GATEWAY);\n    assertNonNullable(endpoint);\n\n    const url = new URL(endpoint);\n    const protocol = url.protocol;\n    const host = url.hostname;\n    const port = url.port;\n    const prefix = url.pathname.substring(1);\n    const forceSecureProtocol = protocol === 'wss:';\n\n    const wsClientOptions: WebSocketClientOptions = {\n      host,\n      port,\n      prefix,\n      forceSecureProtocol,\n    };\n    this.websocketClient = new WebSocketClient(\n      brandId,\n      channelId,\n      customerId,\n      wsClientOptions,\n      this.onError,\n    );\n\n    this.websocketClient.on(\n      WebSocketClientEvent.MESSAGE,\n      (event: ChatCustomEvent) => {\n        try {\n          if (typeof this.onRawEvent === 'function') {\n            this.onRawEvent(event);\n          }\n\n          const parsedEvent = this._incomingChatEventMiddleware.process(\n            parseWsMessageEvent(event),\n          );\n\n          if (!isNil(parsedEvent)) {\n            const { type } = parsedEvent;\n\n            onMessageHandler(parsedEvent);\n\n            this._messageEmitter.dispatchEvent(\n              new ChatCustomEvent(type ?? '', {\n                detail: parsedEvent,\n              }),\n            );\n          }\n        } catch (error: unknown) {\n          this.onErrorHandler(error);\n        }\n      },\n    );\n  }\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { RefreshTokenData } from '@brandembassy/ts-types-chat/dist/awsEvents/RefreshToken';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createRefreshTokenPayload(\n  token: string,\n): EventPayloadData<RefreshTokenData> {\n  return {\n    eventType: AwsInputEventType.REFRESH_TOKEN,\n    data: {\n      accessToken: {\n        token,\n      },\n    },\n  };\n}\n","export const APP_NAME = 'chat-web-sdk';\n","import { AccessToken } from '@brandembassy/ts-types-chat/dist/authorization/AccessToken';\n\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nimport { createReconnectPayloadData } from './createReconnectPayloadData';\nimport { CustomerReconnectSuccessPayloadData } from './CustomerReconnectSuccessPayloadData';\nimport { handleRefreshToken } from './handleRefreshToken';\n\nexport async function authorizationReconnect(\n  websocketClient: WebSocketClient | null,\n  refreshTokenEventCallback: () => Promise<void>,\n  accessToken: AccessToken,\n  visitorId?: string,\n): Promise<CustomerReconnectSuccessPayloadData> {\n  const reconnectPayload = createReconnectPayloadData(accessToken, visitorId);\n\n  const response = await sendChatEvent(reconnectPayload, websocketClient);\n\n  const hasError = response.error !== undefined;\n\n  if (hasError) {\n    throw response.error;\n  }\n\n  const successReconnectResponse: CustomerReconnectSuccessPayloadData = {\n    reconnected: true,\n  };\n\n  handleRefreshToken(accessToken, refreshTokenEventCallback);\n\n  return successReconnectResponse;\n}\n","import { AuthorizeConsumerData } from '@brandembassy/ts-types-chat/dist/awsEvents/AuthorizeConsumer';\nimport { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { VisitorId } from '@brandembassy/ts-types-platform/dist/visitor/VisitorId';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\nimport { generateId } from '../utils/generateId';\nimport { createVisitorPayload } from '../visitor/createVisitorPayload';\n\ntype AuthorizeCustomerData = AuthorizeConsumerData;\n\nexport function createAuthorizationPayloadData(\n  authorizationCode: string | null,\n  visitorId: VisitorId = generateId(),\n): EventPayloadData<AuthorizeCustomerData> {\n  return {\n    eventType: AwsInputEventType.AUTHORIZE_CONSUMER,\n    data: {\n      authorization: {\n        authorizationCode,\n      },\n    },\n    ...createVisitorPayload(visitorId as VisitorId),\n  };\n}\n","import { CustomerIdentityIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/customer/CustomerIdentity';\n\nimport { isNil } from '../utils/is';\n\nexport function isCustomerIdentityIdValid(\n  customerIdentityIdOnExternalPlatform:\n    | CustomerIdentityIdOnExternalPlatform\n    | undefined,\n): customerIdentityIdOnExternalPlatform is CustomerIdentityIdOnExternalPlatform {\n  return (\n    !isNil(customerIdentityIdOnExternalPlatform) &&\n    customerIdentityIdOnExternalPlatform !== ''\n  );\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { GenerateAuthorizationTokenData } from '@brandembassy/ts-types-chat/dist/awsEvents/GenerateAuthorizationToken';\nimport { ThreadIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/thread/ThreadIdOnExternalPlatform';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nexport function createGenerateAuthorizationTokenPayloadData(\n  threadId: ThreadIdOnExternalPlatform,\n  url: string,\n): EventPayloadData<GenerateAuthorizationTokenData> {\n  return {\n    eventType: AwsInputEventType.GENERATE_AUTHORIZATION_TOKEN,\n    data: {\n      thread: {\n        idOnExternalPlatform: threadId,\n      },\n      url,\n    },\n  };\n}\n","import { sendChatEvent } from '../event/sendChatEvent';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nimport {\n  isSendMessageSuccessEventData,\n  MessageSuccessEventData,\n} from './MessageSuccessEventData';\nimport { createSendOfflineMessagePayloadData } from './sendOfflineMessagePayload';\n\nexport interface OfflineMessageData {\n  email: string;\n  message: string;\n  name: string;\n}\n\nexport const sendOfflineMessage = async (\n  offlineMessageData: OfflineMessageData,\n  websocketClient: WebSocketClient | null,\n): Promise<MessageSuccessEventData> => {\n  const offlineMessagePayloadData =\n    createSendOfflineMessagePayloadData(offlineMessageData);\n\n  const response = await sendChatEvent(\n    offlineMessagePayloadData,\n    websocketClient,\n  );\n\n  if (isSendMessageSuccessEventData(response)) {\n    return response;\n  }\n\n  throw response;\n};\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SendOfflineMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendOfflineMessage';\nimport { MessageType } from '@brandembassy/ts-types-platform/dist/message/MessageType';\n\nimport { EventPayloadData } from '../sockets/EventPayload';\n\nimport { OfflineMessageData } from './sendOfflineMessage';\n\nexport const createSendOfflineMessagePayloadData = (\n  offlineMessageData: OfflineMessageData,\n): EventPayloadData<SendOfflineMessageEventData> => {\n  const [lastName, ...names] = offlineMessageData.name.split(' ').reverse();\n  const firstName = names.reverse().join(' ');\n\n  const consumerIdentity = {\n    idOnExternalPlatform: offlineMessageData.email,\n    firstName,\n    lastName,\n  };\n\n  const data = {\n    messageContent: {\n      type: MessageType.TEXT,\n      payload: {\n        text: offlineMessageData.message,\n      },\n    },\n  };\n\n  return {\n    eventType: AwsInputEventType.SEND_OFFLINE_MESSAGE,\n    consumerIdentity,\n    data,\n  };\n};\n","export function assertNonNullable<T>(\n  value: T,\n): asserts value is NonNullable<T> {\n  if (typeof value === 'undefined' || value === null) {\n    throw Error(`Expected non-nullish value, got ${value}`);\n  }\n}\n","import { ChatEventData } from '../event/ChatEvent';\nimport { normalizeEvent } from '../event/normalizeEvent';\n\nimport { requestQueue } from './requestQueue';\n\nexport const parseWsMessageEvent = (\n  event: CustomEvent,\n): ChatEventData | undefined => {\n  const eventDetail = event?.detail;\n\n  if (!eventDetail) {\n    return;\n  }\n\n  let eventData;\n\n  try {\n    eventData = JSON.parse(eventDetail.data);\n  } catch (error) {\n    return;\n  }\n\n  return normalizeEvent(eventData);\n};\n\nexport const onMessageHandler = (event: ChatEventData): void => {\n  const { id } = event;\n\n  if (requestQueue.has(id)) {\n    const resolve = requestQueue.get(id);\n    if (typeof resolve === 'function') {\n      resolve(event);\n    }\n    requestQueue.delete(id);\n  }\n};\n","import { CaseInboxAssigneeChangedData } from '@brandembassy/ts-types-platform/dist/post/case/CaseInboxAssigneeChangedEvent';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport interface AssignedAgentChangedEvent extends ChatEventData {\n  data: CaseInboxAssigneeChangedData;\n  type: typeof ChatEvent.ASSIGNED_AGENT_CHANGED;\n}\n\nexport function isAssignedAgentChangedEvent(\n  event: ChatEventData,\n): event is AssignedAgentChangedEvent {\n  return (\n    event.type === ChatEvent.ASSIGNED_AGENT_CHANGED &&\n    (event as AssignedAgentChangedEvent).data?.case?.id !== undefined\n  );\n}\n","import { SenderTypingStartedData } from '@brandembassy/ts-types-platform/dist/user/typing/SenderTypingStartedEvent';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport type AgentTypingStartedData = SenderTypingStartedData;\n\nexport interface AgentTypingStartedEvent extends ChatEventData {\n  data: AgentTypingStartedData;\n  type: typeof ChatEvent.AGENT_TYPING_STARTED;\n}\n\nexport function isAgentTypingStartedEvent(\n  event: ChatEventData,\n): event is AgentTypingStartedEvent {\n  return (\n    event.type === ChatEvent.AGENT_TYPING_STARTED &&\n    (event as AgentTypingStartedEvent).data?.thread?.idOnExternalPlatform !==\n      undefined\n  );\n}\n","import { SenderTypingEndedData } from '@brandembassy/ts-types-platform/dist/user/typing/SenderTypingEndedEvent';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport type AgentTypingEndedData = SenderTypingEndedData;\n\nexport interface AgentTypingEndedEvent extends ChatEventData {\n  data: AgentTypingEndedData;\n  type: typeof ChatEvent.AGENT_TYPING_ENDED;\n}\n\nexport function isAgentTypingEndedEvent(\n  event: ChatEventData,\n): event is AgentTypingEndedEvent {\n  return (\n    event.type === ChatEvent.AGENT_TYPING_ENDED &&\n    (event as AgentTypingEndedEvent).data?.thread?.idOnExternalPlatform !==\n      undefined\n  );\n}\n","import { CaseStatusChangedData } from '@brandembassy/ts-types-platform/dist/post/case/CaseStatusChangedEvent';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport type ContactStatusChangedData = CaseStatusChangedData;\n\nexport interface ContactStatusChangedChatEvent extends ChatEventData {\n  data: ContactStatusChangedData;\n  type: typeof ChatEvent.CONTACT_STATUS_CHANGED;\n}\n\nexport function isContactStatusChangedEvent(\n  event: ChatEventData,\n): event is ContactStatusChangedChatEvent {\n  return (\n    event.type === ChatEvent.CONTACT_STATUS_CHANGED &&\n    (event as ContactStatusChangedChatEvent).data?.case?.id !== undefined\n  );\n}\n","import { ContactToRoutingQueueAssignmentChangedData } from '@brandembassy/ts-types-platform/dist/post/case/CaseToRoutingQueueAssignmentChangedEvent';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\n\nexport interface ContactToRoutingQueueAssignmentChangedChatEvent\n  extends ChatEventData {\n  data: ContactToRoutingQueueAssignmentChangedData;\n  type: typeof ChatEvent.CONTACT_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED;\n}\n\nexport function isContactToRoutingQueueAssignmentChangedEvent(\n  event: ChatEventData,\n): event is ContactToRoutingQueueAssignmentChangedChatEvent {\n  return (\n    event.type === ChatEvent.CONTACT_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED &&\n    (event as ContactToRoutingQueueAssignmentChangedChatEvent).data?.case\n      ?.id !== undefined\n  );\n}\n","import { ContactRecipientsChangedData } from '@brandembassy/ts-types-platform/dist/groupChat/ContactRecipientsChangedEvent';\nimport { PushUpdateEventType } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateEventType';\n\nimport { ChatEventData } from '../event/ChatEvent';\n\nexport interface ContactRecipientsChangedChatEvent extends ChatEventData {\n  data: ContactRecipientsChangedData;\n  type: PushUpdateEventType.CONTACT_RECIPIENTS_CHANGED;\n}\n\nexport function isContactRecipientsChangedEvent(\n  event: unknown,\n): event is ContactRecipientsChangedChatEvent {\n  return (\n    (event as ContactRecipientsChangedChatEvent).type ===\n    PushUpdateEventType.CONTACT_RECIPIENTS_CHANGED\n  );\n}\n","import { Message } from '@brandembassy/ts-types-platform/dist/message/Message';\nimport { MessageDirection } from '@brandembassy/ts-types-platform/dist/message/MessageDirection';\n\n/**\n * Get message author name of given message\n * @param message - message\n * @returns message author name\n */\nexport const getAuthor = (message: Message): string =>\n  message.direction === MessageDirection.INBOUND\n    ? message.authorEndUserIdentity?.fullName ?? ''\n    : `${message.authorUser?.firstName ?? ''} ${\n        message.authorUser?.surname ?? ''\n      }`.trim();\n","import { Message } from '@brandembassy/ts-types-platform/dist/message/Message';\n\nimport { isUndefined } from '../utils/is';\n\nexport function isMessage(item: unknown): item is Message {\n  const hasId = isUndefined((item as Message).id) === false;\n  const hasDirection = isUndefined((item as Message).direction) === false;\n  const hasMessageContent =\n    isUndefined((item as Message).messageContent) === false;\n\n  return hasId && hasDirection && hasMessageContent;\n}\n","import { MessageCreatedData } from '@brandembassy/ts-types-platform/dist/message/MessageCreatedEvent';\nimport { PushUpdateEventType } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateEventType';\n\nimport { ChatEventData } from '../event/ChatEvent';\n\nexport interface MessageCreatedEvent extends ChatEventData {\n  data: MessageCreatedData;\n  type: PushUpdateEventType.MESSAGE_CREATED;\n}\n\nexport function isMessageCreatedEvent(\n  event: unknown,\n): event is MessageCreatedEvent {\n  return (\n    (event as MessageCreatedEvent).type === PushUpdateEventType.MESSAGE_CREATED\n  );\n}\n","import { MessageSentData } from '@brandembassy/ts-types-platform/dist/message/MessageSentEvent';\nimport { PushUpdateEventType } from '@brandembassy/ts-types-platform/dist/pushUpdate/PushUpdateEventType';\n\nimport { ChatEventData } from '../event/ChatEvent';\n\nexport interface MessageSentEvent extends ChatEventData {\n  data: MessageSentData;\n  type: PushUpdateEventType.MESSAGE_SENT;\n}\n\nexport function isMessageSentEvent(event: unknown): event is MessageSentEvent {\n  return (event as MessageSentEvent).type === PushUpdateEventType.MESSAGE_SENT;\n}\n","import { AwsResponseEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SetPositionInQueuePayload } from '@brandembassy/ts-types-chat/dist/awsEvents/SetPositionInQueuePayload';\n\nimport { isEmpty } from '../../utils/is';\n\nexport const isSetPositionInQueuePayload = (\n  detail: unknown,\n): detail is SetPositionInQueuePayload => {\n  const setPositionDetail = detail as SetPositionInQueuePayload;\n\n  return (\n    Number.isInteger(setPositionDetail?.data.positionInQueue) &&\n    isEmpty(setPositionDetail?.eventId) === false &&\n    setPositionDetail?.eventType === AwsResponseEventType.SET_POSITION_IN_QUEUE\n  );\n};\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { CreateInvitationToGroupChatEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/InvitationToGroupChat';\nimport { CaseId } from '@brandembassy/ts-types-platform/dist/post/case/CaseId';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { EventPayloadData } from '../sockets/EventPayload';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nexport function createCreateInvitationToGroupChatPayloadData(\n  id: CaseId,\n): EventPayloadData<CreateInvitationToGroupChatEventData> {\n  return {\n    eventType: AwsInputEventType.CREATE_GROUP_CHAT_INVITE,\n    data: {\n      contact: {\n        id,\n      },\n    },\n  };\n}\n\nexport function isInvitationToGroupChatCreated(\n  response: ChatEventData,\n): boolean {\n  return response.type === ChatEvent.GROUP_CHAT_INVITE_CREATED;\n}\n\nexport async function sendCreateInvitationToGroupChatEvent(\n  createInvitationPayloadData: EventPayloadData<CreateInvitationToGroupChatEventData>,\n  wsClient: WebSocketClient | null,\n): Promise<ChatEventData> {\n  const response = await sendChatEvent(createInvitationPayloadData, wsClient);\n\n  if (isInvitationToGroupChatCreated(response)) {\n    return response;\n  }\n\n  throw response;\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { JoinGroupChatEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/JoinGroupChat';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { EventPayloadData } from '../sockets/EventPayload';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nexport function createJoinGroupChatPayloadData(\n  code: string,\n): EventPayloadData<JoinGroupChatEventData> {\n  return {\n    eventType: AwsInputEventType.JOIN_GROUP_CHAT,\n    data: {\n      invitation: {\n        code,\n      },\n    },\n  };\n}\n\nexport function isJoinGroupChatSuccessResponse(\n  response: ChatEventData,\n): boolean {\n  return response.type === ChatEvent.GROUP_CHAT_JOINED;\n}\n\nexport async function sendJoinGroupChatEvent(\n  joinGroupChatPayloadData: EventPayloadData<JoinGroupChatEventData>,\n  wsClient: WebSocketClient | null,\n): Promise<ChatEventData> {\n  const response = await sendChatEvent(joinGroupChatPayloadData, wsClient);\n\n  if (isJoinGroupChatSuccessResponse(response)) {\n    return response;\n  }\n\n  throw response;\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { LeaveGroupChatEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/LeaveGroupChat';\nimport { CaseId } from '@brandembassy/ts-types-platform/dist/post/case/CaseId';\n\nimport { ChatEventData } from '../event/ChatEvent';\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { EventPayloadData } from '../sockets/EventPayload';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nexport function createLeaveGroupChatPayloadData(\n  id: CaseId,\n): EventPayloadData<LeaveGroupChatEventData> {\n  return {\n    eventType: AwsInputEventType.LEAVE_GROUP_CHAT,\n    data: {\n      contact: {\n        id,\n      },\n    },\n  };\n}\n\nexport async function sendLeaveGroupChatEvent(\n  leaveGroupChatPayloadData: EventPayloadData<LeaveGroupChatEventData>,\n  wsClient: WebSocketClient | null,\n): Promise<ChatEventData> {\n  return sendChatEvent(leaveGroupChatPayloadData, wsClient);\n}\n","import { AwsInputEventType } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsEventType';\nimport { SendEmailInvitationToGroupChatEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendEmailInvitationToGroupChat';\nimport { CaseId } from '@brandembassy/ts-types-platform/dist/post/case/CaseId';\n\nimport { ChatEvent, ChatEventData } from '../event/ChatEvent';\nimport { sendChatEvent } from '../event/sendChatEvent';\nimport { EventPayloadData } from '../sockets/EventPayload';\nimport { WebSocketClient } from '../sockets/WebSocketClient';\n\nexport function createSendEmailInvitationToGroupChatPayloadData(\n  caseId: CaseId,\n  invitationCode: string,\n  email: string,\n): EventPayloadData<SendEmailInvitationToGroupChatEventData> {\n  return {\n    eventType: AwsInputEventType.SEND_EMAIL_INVITE_TO_GROUP_CHAT,\n    data: {\n      contact: {\n        id: caseId,\n      },\n      invitation: {\n        code: invitationCode,\n      },\n      recipients: [\n        {\n          idOnExternalPlatform: email,\n        },\n      ],\n    },\n  };\n}\n\nexport function isEmailInvitationToGroupChatSent(\n  response: ChatEventData,\n): boolean {\n  return response.type === ChatEvent.GROUP_CHAT_INVITE_SENT;\n}\n\nexport async function sendEmailInvitationToGroupChatEvent(\n  createInvitationPayloadData: EventPayloadData<SendEmailInvitationToGroupChatEventData>,\n  wsClient: WebSocketClient | null,\n): Promise<ChatEventData> {\n  const response = await sendChatEvent(createInvitationPayloadData, wsClient);\n\n  if (isEmailInvitationToGroupChatSent(response)) {\n    return response;\n  }\n\n  throw response;\n}\n","export interface CustomerReconnectSuccessPayloadData {\n  reconnected: true;\n}\n\nexport function isCustomerReconnectSuccessPayloadData(\n  payload: unknown,\n): payload is CustomerReconnectSuccessPayloadData {\n  if (typeof payload !== 'object' || payload === null) {\n    return false;\n  }\n\n  if (!('reconnected' in payload)) {\n    return false;\n  }\n\n  return payload.reconnected === true;\n}\n","import { User } from '@brandembassy/ts-types-platform/dist/user/User';\nimport { UserId } from '@brandembassy/ts-types-platform/dist/user/UserId';\n\nimport { ChatSdk } from './ChatSdk';\n\n// Export runtime classes and types\nexport type { SendMessageEventData } from '@brandembassy/ts-types-chat/dist/awsEvents/SendMessage';\nexport type { ConsumerIdentityInput as CustomerIdentity } from '@brandembassy/ts-types-chat/dist/awsEvents/AwsInputEvent';\nexport type { CaseInboxAssigneeChangedData as AssignedAgentChangedData } from '@brandembassy/ts-types-platform/dist/post/case/CaseInboxAssigneeChangedEvent';\nexport { MessageType } from '@brandembassy/ts-types-platform/dist/message/MessageType';\nexport { WebSocketClientEvent } from './sockets/WebSocketClient';\nexport { WebSocketClientError } from './sockets/WebSocketClientError';\nexport { ChatEvent } from './event/ChatEvent';\nexport type { ChatEventType } from './event/ChatEvent';\nexport { sendChatEvent } from './event/sendChatEvent';\nexport { EnvironmentName, EnvironmentEndpoints } from './env/Environments';\nexport * from './agent';\nexport * from './thread';\nexport * from './contact';\nexport * from './ChatSdk';\nexport * from './message';\nexport { Customer } from './customer/customer';\nexport * from './utils/narrowing';\nexport { generateId } from './utils/generateId';\nexport { splitName } from './utils/splitName';\nexport type { ChatSDKOptions } from './ChatSDKOptions';\nexport * from './groupChat';\nexport * from './utils/AbortablePromise';\nexport { AbortError } from './error/AbortError';\n\n// Export types for API Docs availability\nexport * from './authorization/AuthorizeConsumerEventResponse';\nexport type { BrandId } from '@brandembassy/ts-types-platform/dist/brand/BrandId';\nexport type { ChannelId } from '@brandembassy/ts-types-platform/dist/channel/ChannelId';\nexport { Thread as ThreadView } from '@brandembassy/ts-types-platform/dist/thread/Thread';\nexport type { CustomerIdentityIdOnExternalPlatform } from '@brandembassy/ts-types-platform/dist/endUser/EndUserIdentityId';\nexport type { WebSocketClient } from './sockets/WebSocketClient';\nexport type {\n  EventListenerFunction,\n  RemoveListenerFunction,\n} from './event/ListenerFunction';\nexport type { IChatEventTarget } from './event/ChatEventTarget';\nexport type { ChatEventData } from './event/ChatEvent';\nexport type { MoreMessagesLoadedEvent } from './message/loadMoreMessagesEventData';\nexport type { ThreadRecoveredPostbackData } from '@brandembassy/ts-types-chat/dist/awsEvents/ThreadRecovered';\nexport type { MessageSuccessEventData } from './message/MessageSuccessEventData';\nexport type { ConsumerAuthorizationSuccessPayloadData } from '@brandembassy/ts-types-chat/dist/authorization/ConsumerAuthorizationSuccessPayloadData';\nexport type { UploadFailResponse } from './attachment/uploadAttachment';\nexport type Agent = User;\nexport type AgentId = UserId;\nexport type { AuthorizationToken } from '@brandembassy/ts-types-chat/dist/authorization/AuthorizationToken';\nexport type { OfflineMessageData } from './message/sendOfflineMessage';\nexport type { EventPayloadData } from './sockets/EventPayload';\nexport type { ThreadRecoveredChatEvent } from './thread/isRecoverSuccessPayload';\nexport * from './authorization/createReconnectPayloadData';\nexport * from './authorization/CustomerReconnectSuccessPayloadData';\n\n// Export the ChatSDK as default\nexport default ChatSdk;\n"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__459__","__WEBPACK_EXTERNAL_MODULE__585__","isoString","milliseconds","Date","parse","isNaN","day","parsedDate","exec","split","map","itm","parseInt","UTC","apply","getDate","NaN","tz","setUTCMinutes","getUTCMinutes","getTime","parseTimestampFromISO8601String","Object","defineProperty","value","getTimeInMilliseconds","getTimeInSeconds","padDateTimeUnit","dateTimeUnit","norm","Math","abs","floor","Number","_a","_b","hours","_c","minutes","_d","seconds","_e","getTimezoneISOOffset","misc_1","date","tzo","getTimezoneOffset","concat","queryParameters","keys","filter","key","encodeURIComponent","join","EventTargetPolyfill","this","listeners","prototype","addEventListener","type","callback","push","removeEventListener","stack","l","length","splice","dispatchEvent","event","slice","call","defaultPrevented","WebSocketClientEvent_1","enumerable","get","WebSocketClientEvent","__assign","assign","t","s","n","arguments","p","hasOwnProperty","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","getPushUpdateWebSocket","setupSocketConnection","WebSocketClient_1","socket","defaultConnectionOptions","forceSecureProtocol","heartbeatAfterAuthorize","maxRetries","maxReconnectionDelay","webSocketUrlWithoutProtocol","options","TypeError","connectionOptions","wscOptions","url","window","location","protocol","createWebSocketUrlWithProtocol","WebSocketClient","undefined","MESSAGE","JSON","detail","data","startHeartBeat","HeartBeatState","extendStatics","__extends","d","b","setPrototypeOf","__proto__","Array","__","constructor","create","__importDefault","mod","__esModule","HEART_BEAT_CHECK_TIMEOUT","HEART_BEAT_INTERVAL","reconnecting_websocket_1","EventTargetPolyfill_1","HeartBeatState_1","_super","protocols","_this","heartBeatTimeout","heartBeatCheckTimeout","sendHeartBeat","send","stringify","action","handleHeartBeatResponse","heartBeatState","DYING","LIVING","dispatchHeartBeatState","setHeartBeatCheckTimeout","clearTimeout","setTimeout","CustomEvent","isHeartBeatActive","default","onopen","OPEN","onclose","closeEvent","retryCount","DIED","CLOSE","onmessage","onerror","ERROR","heartBeatCallback","stopHeartBeat","__read","o","m","Symbol","iterator","r","ar","next","done","error","__spread","Event","target","ErrorEvent","message","CloseEvent","code","reason","wasClean","getGlobalWebSocket","WebSocket","DEFAULT","minReconnectionDelay","random","minUptime","reconnectionDelayGrowFactor","connectionTimeout","Infinity","maxEnqueuedMessages","startClosed","debug","ReconnectingWebSocket","_listeners","open","close","_retryCount","_shouldReconnect","_connectLock","_binaryType","_closeCalled","_messageQueue","_handleOpen","_debug","_options","_connectTimeout","_uptimeTimeout","_acceptOpen","_ws","binaryType","forEach","listener","_callEventListener","_handleMessage","_handleError","_disconnect","_connect","_handleClose","_clearTimeouts","_url","_protocols","configurable","CONNECTING","CLOSING","CLOSED","set","max","reduce","acc","Blob","size","byteLength","bufferedAmount","extensions","readyState","reconnect","e_1","listeners_1","__values","listeners_1_1","e_1_1","return","args","_i","console","log","_getNextDelay","delay","pow","_wait","Promise","resolve","_getNextUrl","urlProvider","then","Error","_removeListeners","w","_addListeners","_handleTimeout","catch","err","handleEvent","AwsChatWindowEventActionRoute","AwsResponseEventType","AwsInputEventType","DeviceType","MessageDirection","MessageType","PushUpdateEventType","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","obj","prop","toStringTag","ChatSDKVariable","SDKVariableStorage","_vars","variableName","defaultValue","list","clear","setAccessToken","accessToken","ACCESS_TOKEN","token","ACCESS_TOKEN_EXPIRES_IN","String","expiresIn","getAccessToken","createVisitorPayload","visitorId","visitor","id","ChatSDKError","super","name","objectProto","Ctor","func","transform","arg","object","result","global","freeSelf","Function","nativeObjectToString","toString","symToStringTag","isOwn","tag","unmasked","uid","maskSrcKey","funcToString","reIsHostCtor","reIsNative","RegExp","replace","test","mapTag","promiseTag","setTag","weakMapTag","dataViewTag","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","ArrayBuffer","ctorString","isArray","freeExports","nodeType","freeModule","Buffer","isBuffer","typedArrayTags","freeProcess","nodeUtil","types","binding","nodeIsTypedArray","requestQueue","Map","makeRequest","async","wsClient","eventId","splitName","firstName","names","convertCustomFields","customFields","entries","ident","Customer","image","websocketClient","setId","setName","setImage","static","CUSTOMER_ID","CUSTOMER_NAME","customerId","getId","getIdOrCreateNewOne","getName","CUSTOMER_IMAGE","payloadData","eventType","createSetCustomerCustomFieldsPayloadData","sendChatEvent","setCustomFields","createCustomerIdentityPayload","storedName","storedImage","getImage","customerIdentityNamePayload","lastName","idOnExternalPlatform","getBrandIdAndChannelId","brandId","BRAND_ID","channelId","CHANNEL_ID","createEventPayload","eventPayloadData","consumerIdentity","destination","brand","channel","createEvent","payload","actionRoute","AwsChatWindowEvent","webSocketClient","createReconnectPayloadData","refreshTokenTimeoutId","handleRefreshToken","refreshTokenAction","accessTokenExpiresIn","idealTimeToRefreshAccessToken","round","getIdealTimeInSecondsForIssueRefreshToken","isAuthSuccessEvent","status","isTokenRefreshedSuccessResponse","response","EnvironmentName","ChatEvent","AGENT_TYPING_STARTED","AGENT_TYPING_ENDED","ASSIGNED_AGENT_CHANGED","CONTACT_CREATED","CONTACT_STATUS_CHANGED","CONTACT_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED","ChatCustomEvent","ChatEventMiddleware","middlewares","register","middleware","process","processedEvent","ChatEventTarget","EventTarget","hasUserData","user","EMPTY_EVENT","createdAt","normalizeEvent","hasEventId","hasError","hasEventType","hasData","context","eventDetailData","postback","isDataWithPostback","postbackData","postbackEventType","rawEventId","restEventData","eventRest","eventTypeMap","SENDER_TYPING_STARTED","SENDER_TYPING_ENDED","CASE_INBOX_ASSIGNEE_CHANGED","CASE_CREATED","CASE_STATUS_CHANGED","CASE_TO_ROUTING_QUEUE_ASSIGNMENT_CHANGED","LIVECHAT_RECOVERED","normalizedContactHistoryItems","contactHistory","THREAD_RECOVERED","chatEventMapper","isSendMessageSuccessEventData","WebSocketClientError","onError","_connection","connect","port","host","prefix","socketUrl","consumerIdOnExternalPlatform","consumerId","v","APP_VERSION","createSocketUrl","errorHandlerBound","_errorHandler","bind","disconnect","stringData","on","handlerCallback","off","eventError","getBrowserLanguage","navigator","language","getBrowserLocation","Intl","DateTimeFormat","resolvedOptions","timeZone","getDeviceType","deviceType","getBrowserFingerprint","deviceInfoFromUserAgent","userAgent","country","ip","browser","getBrowser","browserVersion","version","os","getOS","osVersion","getDevice","applicationType","isUploadFailResponse","allowedFileSize","createAttachmentPayload","file","attachment","reader","reject","FileReader","onloadend","errorEvent","readAsDataURL","createLocalFileReader","mimeType","createPayloadForAttachmentUpload","uploadAttachmentResponse","CHANNEL_INTEGRATION_URL","ENDPOINT_CHAT","fileName","requestBody","content","fetch","method","body","headers","APP_NAME","ok","json","uploadAttachment","fileUrl","friendlyName","other","array","ListCache","index","entry","__data__","pop","has","Hash","MapCache","Stack","pairs","LARGE_ARRAY_SIZE","SetCache","values","add","predicate","cache","bitmask","customizer","equalFunc","isPartial","arrLength","othLength","arrStacked","othStacked","seen","arrValue","othValue","compared","othIndex","symbolProto","symbolValueOf","valueOf","nativeGetSymbols","resIndex","symbol","reIsUint","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","keysFunc","symbolsFunc","offset","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","byteOffset","buffer","convert","stacked","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","objProps","objLength","objStacked","skipCtor","objValue","objCtor","othCtor","baseIsEqual","srcValue","source","matchData","noCustomizer","reIsDeepProp","reIsPlainProp","memoize","resolver","memoized","Cache","rePropName","reEscapeChar","string","charCodeAt","match","number","quote","subString","symbolToString","baseToString","path","hasFunc","fromIndex","fromRight","comparator","includes","isCommon","outer","computed","seenIndex","isLoadMoreMessagesEventData","messages","isLoadMetadataSuccessPayload","lastMessage","isRecoverSuccessPayload","testResponseData","hasPostbackData","hasMessages","isCorrectEventType","hasNoError","isThreadArchivedSuccessPayload","createRecoverThreadPayloadData","threadIdOnExternalPlatform","emptyData","thread","createStopTypingEventPayloadData","Thread","messageEmitter","isAuthorizationEnabled","_exists","_typingTimeoutID","_threadCustomFieldsQueue","_isAuthorizationEnabled","_websocketClient","_messageEmitter","_registerEventHandlers","messageData","messageDataWithCustomFields","_mergeCustomFieldsAndAccessTokenWithMessageData","sendMessagePayloadData","eventData","sendMessage","messageText","messageId","browserFingerprint","threadCustomFields","optionsThreadCustomFields","convertedOptionsThreadCustomFields","customerCustomFields","messageContent","text","consumer","consumerContact","attachments","createTextMessageData","sendOutboundMessagePayloadData","sendOutboundMessage","scrollToken","oldestMessageDatetime","THREAD_DATA","loadMoreMessagesEventData","files","all","from","createAttachmentUploadMessageData","keystroke","timeout","stopTyping","onThreadEvent","handler","filteredEventHandler","threadId","dataWithThread","case","messagePreview","getThreadId","filterCurrentThreadEventHandler","customFieldsData","createSetThreadCustomFieldsPayloadData","setCustomField","updateThreadData","threadName","isUpdateThreadSuccess","createSendMessagePreviewPayloadData","contactNumber","email","consumerRecipients","createSendTranscriptPayloadData","customFieldsQueue","dataCustomFields","convertedQueue","mergeCustomFields","storedAccessToken","createRecoverLivechatThreadPayloadData","LivechatThread","_isInitialized","_canSendMessage","_registerLivechatEventHandlers","initialMessageText","sendTextMessage","threadDataRaw","threadData","contactId","contact","createEndThreadPayloadData","isThreadListFetchedPostbackData","isContactCreatedEvent","storeContactId","originalThreadDataRaw","originalThreadData","storeContactIdMiddleware","caseId","storeThreadScrollData","scrollData","oldThreadDataRaw","oldThreadData","storeThreadScrollDataMiddleware","messagesScrollToken","AbortError","AbortablePromise","executor","abortController","AbortController","abortSignal","signal","abortReason","abort","_abortReason","promise","ChatSdk","isLivechat","customer","_incomingChatEventMiddleware","_threadCache","_sendRefreshTokenEvent","refreshTokenResponse","AUTHORIZATION_CODE","authorizationCode","appName","appVersion","onRawEvent","_initEnvironment","_initWS","customerName","customerImage","onErrorHandler","reconnectResponse","refreshTokenEventCallback","reconnectPayload","reconnected","authorizationReconnect","authorizationPayloadData","authorization","createAuthorizationPayloadData","customerIdentityIdOnExternalPlatform","settings","createGenerateAuthorizationTokenPayloadData","authorizationToken","onChatEvent","getCustomer","getThread","cachedThread","liveThread","eventPayload","threads","getWebsocketClient","offlineMessageData","offlineMessagePayloadData","reverse","createSendOfflineMessagePayloadData","sendOfflineMessage","recoverThreadData","recoverEvent","recoverResponse","recoverLivechatThreadData","environment","custom","customEnvironment","ENDPOINT_GATEWAY","gateway","chat","placeholder","chatUrlTemplate","gatewayUrlTemplate","AU1","CA1","EU1","JP1","NA1","UK1","getEnvironmentEndpoints","endpoint","assertNonNullable","URL","wsClientOptions","hostname","pathname","substring","parsedEvent","eventDetail","parseWsMessageEvent","onMessageHandler","isAssignedAgentChangedEvent","isAgentTypingStartedEvent","isAgentTypingEndedEvent","isContactStatusChangedEvent","isContactToRoutingQueueAssignmentChangedEvent","isContactRecipientsChangedEvent","getAuthor","direction","authorEndUserIdentity","fullName","authorUser","surname","trim","isMessage","item","hasId","hasDirection","hasMessageContent","isMessageCreatedEvent","isMessageSentEvent","isSetPositionInQueuePayload","setPositionDetail","isInteger","positionInQueue","createCreateInvitationToGroupChatPayloadData","sendCreateInvitationToGroupChatEvent","createInvitationPayloadData","GROUP_CHAT_INVITE_CREATED","isInvitationToGroupChatCreated","createJoinGroupChatPayloadData","invitation","sendJoinGroupChatEvent","joinGroupChatPayloadData","GROUP_CHAT_JOINED","isJoinGroupChatSuccessResponse","createLeaveGroupChatPayloadData","sendLeaveGroupChatEvent","leaveGroupChatPayloadData","createSendEmailInvitationToGroupChatPayloadData","invitationCode","recipients","sendEmailInvitationToGroupChatEvent","GROUP_CHAT_INVITE_SENT","isEmailInvitationToGroupChatSent","isCustomerReconnectSuccessPayloadData"],"sourceRoot":""}